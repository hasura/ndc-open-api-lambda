{
  "get_/authorize": {
    "queryParams": " query: {   \n/**\n* The type of response we'd like to receive.\n*/\n response_type: \"code\",  \n/**\n* The Client ID of the application that is requesting to authenticate\nthe user. To get the Client ID for your application, log in to your\nBox developer console and click the **Edit Application** link for\nthe application you're working with. In the OAuth 2.0 Parameters section\nof the configuration page, find the item labelled `client_id`. The\ntext of that item is your application's Client ID.\n*/\n client_id: string,  \n/**\n* The URI to which Box redirects the browser after the user has granted\nor denied the application permission. This URI match one of the redirect\nURIs in the configuration of your application. It must be a\nvalid HTTPS URI and it needs to be able to handle the redirection to\ncomplete the next step in the OAuth 2.0 flow.\nAlthough this parameter is optional, it must be a part of the\nauthorization URL if you configured multiple redirect URIs\nfor the application in the developer console. A missing parameter causes\na `redirect_uri_missing` error after the user grants application access.\n*/\n redirect_uri?: string,  \n/**\n* A custom string of your choice. Box will pass the same string to\nthe redirect URL when authentication is complete. This parameter\ncan be used to identify a user on redirect, as well as protect\nagainst hijacked sessions and other exploits.\n*/\n state?: string,  \n/**\n* A comma-separated list of application scopes you'd like to\nauthenticate the user for. This defaults to all the scopes configured\nfor the application in its configuration page.\n*/\n scope?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/collaboration_whitelist_entries": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/collaboration_whitelist_entries": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collaboration_whitelist_exempt_targets": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/collaboration_whitelist_exempt_targets": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collaborations": {
    "queryParams": " query: {   \n/**\n* The status of the collaborations to retrieve\n*/\n status: \"pending\",  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/collaborations": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* Determines if users should receive email notification\nfor the action performed.\n*/\n notify?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/collaborations/{collaboration_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collaborations/{collaboration_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/collaborations/{collaboration_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collections": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/collections/{collection_id}/items": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/comments": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/comments/{comment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/comments/{comment_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/comments/{comment_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/device_pinners/{device_pinner_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/device_pinners/{device_pinner_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/enterprises/{enterprise_id}/device_pinners": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.\n*/\n direction?: \"ASC\" | \"DESC\", },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/events": {
    "queryParams": " query: {   \n/**\n* Defines the type of events that are returned\n\n* `all` returns everything for a user and is the default\n* `changes` returns events that may cause file tree changes\n  such as file updates or collaborations.\n* `sync` is similar to `changes` but only applies to synced folders\n* `admin_logs` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for programmatically pulling from a 1 year history of\n  events across all users within the enterprise and within a\n  `created_after` and `created_before` time frame. The complete history\n  of events will be returned in chronological order based on the event\n  time, but latency will be much higher than `admin_logs_streaming`.\n* `admin_logs_streaming` returns all events for an entire enterprise and\n  requires the user making the API call to have admin permissions. This\n  stream type is for polling for recent events across all users within\n  the enterprise. Latency will be much lower than `admin_logs`, but\n  events will not be returned in chronological order and may\n  contain duplicates.\n*/\n stream_type?: \"all\" | \"changes\" | \"sync\" | \"admin_logs\" | \"admin_logs_streaming\",  \n/**\n* The location in the event stream to start receiving events from.\n\n* `now` will return an empty list events and\nthe latest stream position for initialization.\n* `0` or `null` will return all events.\n*/\n stream_position?: string,  \n/**\n* Limits the number of events returned\n\nNote: Sometimes, the events less than the limit requested can be returned\neven when there may be more events remaining. This is primarily done in\nthe case where a number of events have already been retrieved and these\nretrieved events are returned rather than delaying for an unknown amount\nof time to see if there are any more results.\n*/\n limit?: number,  \n/**\n* A comma-separated list of events to filter by. This can only be used when\nrequesting the events with a `stream_type` of `admin_logs` or\n`adming_logs_streaming`. For any other `stream_type` this value will be\nignored.\n*/\n event_type?: (\n/**\n* An event type that can be filtered by\n*/\n  \"ACCESS_GRANTED\" | \"ACCESS_REVOKED\" | \"ADD_DEVICE_ASSOCIATION\" | \"ADD_LOGIN_ACTIVITY_DEVICE\" | \"ADMIN_LOGIN\" | \"APPLICATION_CREATED\" | \"APPLICATION_PUBLIC_KEY_ADDED\" | \"APPLICATION_PUBLIC_KEY_DELETED\" | \"CHANGE_ADMIN_ROLE\" | \"CHANGE_FOLDER_PERMISSION\" | \"COLLABORATION_ACCEPT\" | \"COLLABORATION_EXPIRATION\" | \"COLLABORATION_INVITE\" | \"COLLABORATION_REMOVE\" | \"COLLABORATION_ROLE_CHANGE\" | \"COMMENT_CREATE\" | \"COMMENT_DELETE\" | \"CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY\" | \"CONTENT_WORKFLOW_AUTOMATION_ADD\" | \"CONTENT_WORKFLOW_AUTOMATION_DELETE\" | \"CONTENT_WORKFLOW_POLICY_ADD\" | \"CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION\" | \"CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION\" | \"COPY\" | \"DATA_RETENTION_CREATE_RETENTION\" | \"DATA_RETENTION_REMOVE_RETENTION\" | \"DELETE\" | \"DELETE_USER\" | \"DEVICE_TRUST_CHECK_FAILED\" | \"DOWNLOAD\" | \"EDIT\" | \"EDIT_USER\" | \"EMAIL_ALIAS_CONFIRM\" | \"EMAIL_ALIAS_REMOVE\" | \"ENTERPRISE_APP_AUTHORIZATION_UPDATE\" | \"EXTERNAL_COLLAB_SECURITY_SETTINGS\" | \"FAILED_LOGIN\" | \"FILE_MARKED_MALICIOUS\" | \"FILE_WATERMARKED_DOWNLOAD\" | \"GROUP_ADD_ITEM\" | \"GROUP_ADD_USER\" | \"GROUP_CREATION\" | \"GROUP_DELETION\" | \"GROUP_EDITED\" | \"GROUP_REMOVE_ITEM\" | \"GROUP_REMOVE_USER\" | \"ITEM_MODIFY\" | \"ITEM_OPEN\" | \"ITEM_SHARED_UPDATE\" | \"ITEM_SYNC\" | \"ITEM_UNSYNC\" | \"LEGAL_HOLD_ASSIGNMENT_CREATE\" | \"LEGAL_HOLD_ASSIGNMENT_DELETE\" | \"LEGAL_HOLD_POLICY_CREATE\" | \"LEGAL_HOLD_POLICY_DELETE\" | \"LEGAL_HOLD_POLICY_UPDATE\" | \"LOCK\" | \"LOGIN\" | \"METADATA_INSTANCE_CREATE\" | \"METADATA_INSTANCE_DELETE\" | \"METADATA_INSTANCE_UPDATE\" | \"METADATA_TEMPLATE_CREATE\" | \"METADATA_TEMPLATE_DELETE\" | \"METADATA_TEMPLATE_UPDATE\" | \"MOVE\" | \"NEW_USER\" | \"OAUTH2_ACCESS_TOKEN_REVOKE\" | \"PREVIEW\" | \"REMOVE_DEVICE_ASSOCIATION\" | \"REMOVE_LOGIN_ACTIVITY_DEVICE\" | \"RENAME\" | \"RETENTION_POLICY_ASSIGNMENT_ADD\" | \"SHARE\" | \"SHARE_EXPIRATION\" | \"SHIELD_ALERT\" | \"SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED\" | \"SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION\" | \"SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED\" | \"SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION\" | \"SHIELD_JUSTIFICATION_APPROVAL\" | \"SIGN_DOCUMENT_ASSIGNED\" | \"SIGN_DOCUMENT_CANCELLED\" | \"SIGN_DOCUMENT_COMPLETED\" | \"SIGN_DOCUMENT_CONVERTED\" | \"SIGN_DOCUMENT_CREATED\" | \"SIGN_DOCUMENT_DECLINED\" | \"SIGN_DOCUMENT_EXPIRED\" | \"SIGN_DOCUMENT_SIGNED\" | \"SIGN_DOCUMENT_VIEWED_BY_SIGNED\" | \"SIGNER_DOWNLOADED\" | \"SIGNER_FORWARDED\" | \"STORAGE_EXPIRATION\" | \"TASK_ASSIGNMENT_CREATE\" | \"TASK_ASSIGNMENT_DELETE\" | \"TASK_ASSIGNMENT_UPDATE\" | \"TASK_CREATE\" | \"TASK_UPDATE\" | \"TERMS_OF_SERVICE_ACCEPT\" | \"TERMS_OF_SERVICE_REJECT\" | \"UNDELETE\" | \"UNLOCK\" | \"UNSHARE\" | \"UPDATE_COLLABORATION_EXPIRATION\" | \"UPDATE_SHARE_EXPIRATION\" | \"UPLOAD\" | \"USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE\" | \"WATERMARK_LABEL_CREATE\" | \"WATERMARK_LABEL_DELETE\")[],  \n/**\n* The lower bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored.\n*/\n created_after?: string,  \n/**\n* The upper bound date and time to return events for. This can only be used\nwhen requesting the events with a `stream_type` of `admin_logs`. For any\nother `stream_type` this value will be ignored.\n*/\n created_before?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "options_/events": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/file_requests/{file_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/file_requests/{file_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/file_requests/{file_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/file_requests/{file_request_id}/copy": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/file_version_legal_holds": {
    "queryParams": " query: {   \n/**\n* The ID of the legal hold policy to get the file version legal\nholds for.\n*/\n policy_id: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/file_version_legal_holds/{file_version_legal_hold_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/file_version_retentions": {
    "queryParams": " query: {   \n/**\n* Filters results by files with this ID.\n*/\n file_id?: string,  \n/**\n* Filters results by file versions with this ID.\n*/\n file_version_id?: string,  \n/**\n* Filters results by the retention policy with this ID.\n*/\n policy_id?: string,  \n/**\n* Filters results by the retention policy with this disposition\naction.\n*/\n disposition_action?: \"permanently_delete\" | \"remove_retention\",  \n/**\n* Filters results by files that will have their disposition\ncome into effect before this date.\n*/\n disposition_before?: string,  \n/**\n* Filters results by files that will have their disposition\ncome into effect after this date.\n*/\n disposition_after?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/file_version_retentions/{file_version_retention_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "options_/files/content": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/content": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/upload_sessions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/upload_sessions/{upload_session_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/upload_sessions/{upload_session_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/upload_sessions/{upload_session_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/upload_sessions/{upload_session_id}/commit": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/upload_sessions/{upload_session_id}/parts": {
    "queryParams": " query: {   \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}#add_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}#get_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}#remove_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}#update_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/collaborations": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/comments": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/content": {
    "queryParams": " query: {   \n/**\n* The file version to download\n*/\n version?: string,  \n/**\n* An optional access token that can be used to pre-authenticate this request, which means that a download link can be shared with a browser or a third party service without them needing to know how to handle the authentication.\nWhen using this parameter, please make sure that the access token is sufficiently scoped down to only allow read access to that file and no other files or folders.\n*/\n access_token?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/content": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/copy": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/metadata": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/metadata/global/boxSkillsCards": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/metadata/global/boxSkillsCards": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/metadata/global/boxSkillsCards": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}/metadata/global/boxSkillsCards": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/tasks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/thumbnail.{extension}": {
    "queryParams": " query: {   \n/**\n* The minimum height of the thumbnail\n*/\n min_height?: number,  \n/**\n* The minimum width of the thumbnail\n*/\n min_width?: number,  \n/**\n* The maximum height of the thumbnail\n*/\n max_height?: number,  \n/**\n* The maximum width of the thumbnail\n*/\n max_width?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/trash": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/trash": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/upload_sessions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/versions": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/files/{file_id}/versions/current": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/versions/{file_version_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/versions/{file_version_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}/versions/{file_version_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/files/{file_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/files/{file_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/files/{file_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folder_locks": {
    "queryParams": " query: {   \n/**\n* The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.\n*/\n folder_id: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folder_locks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/folder_locks/{folder_lock_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folders": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/trash/items": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.\n*/\n usemarker?: boolean,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.\n*/\n direction?: \"ASC\" | \"DESC\",  \n/**\n* Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported when using marker-based pagination.\n*/\n sort?: \"id\" | \"name\" | \"date\" | \"size\", },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "delete_/folders/{folder_id}": {
    "queryParams": " query: {   \n/**\n* Delete a folder that is not empty by recursively deleting the\nfolder and all of its content.\n*/\n recursive?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folders/{folder_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}#add_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}#get_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}#remove_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}#update_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/collaborations": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folders/{folder_id}/copy": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/items": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.\n*/\n fields?:   string[],  \n/**\n* Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.\n*/\n usemarker?: boolean,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the **second** attribute by which items\nare sorted.\n\nItems are always sorted by their `type` first, with\nfolders listed before files, and files listed\nbefore web links.\n\nThis parameter is not supported for marker-based pagination\non the root folder (the folder with an ID of `0`).\n*/\n sort?: \"id\" | \"name\" | \"date\" | \"size\",  \n/**\n* The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.\n*/\n direction?: \"ASC\" | \"DESC\", },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/folders/{folder_id}/metadata": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/folders/{folder_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/folders/{folder_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}/metadata/{scope}/{template_key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/folders/{folder_id}/trash": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/trash": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/folders/{folder_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/folders/{folder_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/folders/{folder_id}/watermark": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/group_memberships": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/group_memberships/{group_membership_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/group_memberships/{group_membership_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/group_memberships/{group_membership_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/groups": {
    "queryParams": " query: {   \n/**\n* Limits the results to only groups whose `name` starts\nwith the search term.\n*/\n filter_term?: string,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/groups": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/groups/terminate_sessions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/groups/{group_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/groups/{group_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/groups/{group_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/groups/{group_id}/collaborations": {
    "queryParams": " query: {   \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/groups/{group_id}/memberships": {
    "queryParams": " query: {   \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/invites": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/invites/{invite_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policies": {
    "queryParams": " query: {   \n/**\n* Limits results to policies for which the names start with\nthis search term. This is a case-insensitive prefix.\n*/\n policy_name?: string,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/legal_hold_policies": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/legal_hold_policies/{legal_hold_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policies/{legal_hold_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/legal_hold_policies/{legal_hold_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policy_assignments": {
    "queryParams": " query: {   \n/**\n* The ID of the legal hold policy\n*/\n policy_id: string,  \n/**\n* Filters the results by the type of item the\npolicy was applied to.\n*/\n assign_to_type?: \"file\" | \"file_version\" | \"folder\" | \"user\",  \n/**\n* Filters the results by the ID of item the\npolicy was applied to.\n*/\n assign_to_id?: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/legal_hold_policy_assignments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/file_versions_on_hold": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/files_on_hold": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_cascade_policies": {
    "queryParams": " query: {   \n/**\n* Specifies which folder to return policies for. This can not be used on the\nroot folder with ID `0`.\n*/\n folder_id: string,  \n/**\n* The ID of the enterprise ID for which to find metadata\ncascade policies. If not specified, it defaults to the\ncurrent enterprise.\n*/\n owner_enterprise_id?: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/metadata_cascade_policies": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/metadata_cascade_policies/{metadata_cascade_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_cascade_policies/{metadata_cascade_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/metadata_cascade_policies/{metadata_cascade_policy_id}/apply": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/metadata_queries/execute_read": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_query_indices": {
    "queryParams": " query: {   \n/**\n* The scope of the metadata template\n*/\n scope: \"global\" | \"enterprise\",  \n/**\n* The name of the metadata template\n*/\n template_key: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/metadata_templates": {
    "queryParams": " query: {   \n/**\n* The ID of an instance of the metadata template to find.\n*/\n metadata_instance_id: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_templates/enterprise": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#add": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#delete": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/metadata_templates/enterprise/securityClassification-6VMVochwUWo/schema#update": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_templates/global": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/metadata_templates/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/metadata_templates/schema#classifications": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/metadata_templates/{scope}/{template_key}/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_templates/{scope}/{template_key}/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/metadata_templates/{scope}/{template_key}/schema": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/metadata_templates/{template_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/oauth2/revoke": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/oauth2/token": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/oauth2/token#refresh": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/recent_items": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policies": {
    "queryParams": " query: {   \n/**\n* Filters results by a case sensitive prefix of the name of\nretention policies.\n*/\n policy_name?: string,  \n/**\n* Filters results by the type of retention policy.\n*/\n policy_type?: \"finite\" | \"indefinite\",  \n/**\n* Filters results by the ID of the user who created policy.\n*/\n created_by_user_id?: string,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/retention_policies": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/retention_policies/{retention_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policies/{retention_policy_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/retention_policies/{retention_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policies/{retention_policy_id}/assignments": {
    "queryParams": " query: {   \n/**\n* The type of the retention policy assignment to retrieve.\n*/\n type?: \"folder\" | \"enterprise\" | \"metadata_template\",  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/retention_policy_assignments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/retention_policy_assignments/{retention_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policy_assignments/{retention_policy_assignment_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policy_assignments/{retention_policy_assignment_id}/file_versions_under_retention": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/retention_policy_assignments/{retention_policy_assignment_id}/files_under_retention": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/search": {
    "queryParams": " query: {   \n/**\n* The string to search for. This query is matched against item names,\ndescriptions, text content of files, and various other fields of\nthe different item types.\n\nThis parameter supports a variety of operators to further refine\nthe results returns.\n\n* `\"\"` - by wrapping a query in double quotes only exact matches are\n  returned by the API. Exact searches do not return search matches\n  based on specific character sequences. Instead, they return\n  matches based on phrases, that is, word sequences. For example:\n  A search for `\"Blue-Box\"` may return search results including\n  the sequence `\"blue.box\"`, `\"Blue Box\"`, and `\"Blue-Box\"`;\n  any item containing the words `Blue` and `Box` consecutively, in\n  the order specified.\n* `AND` - returns items that contain both the search terms. For\n  example, a search for `marketing AND BoxWorks` returns items\n  that have both `marketing` and `BoxWorks` within its text in any order.\n  It does not return a result that only has `BoxWorks` in its text.\n* `OR` - returns items that contain either of the search terms. For\n  example, a search for `marketing OR BoxWorks` returns a result that\n  has either `marketing` or `BoxWorks` within its text. Using this\n  operator is not necessary as we implicitly interpret multi-word\n  queries as `OR` unless another supported boolean term is used.\n* `NOT` - returns items that do not contain the search term provided.\n  For example, a search for `marketing AND NOT BoxWorks` returns a result\n  that has only `marketing` within its text. Results containing\n  `BoxWorks` are omitted.\n\nPlease note that we do not support lower case (that is,\n`and`, `or`, and `not`) or mixed case (that is, `And`, `Or`, and `Not`)\noperators.\n\nThis field is required unless the `mdfilters` parameter is defined.\n*/\n query?: string,  \n/**\n* Limits the search results to either the files that the user has\naccess to, or to files available to the entire enterprise.\n\nThe scope defaults to `user_content`, which limits the search\nresults to content that is available to the currently authenticated\nuser.\n\nThe `enterprise_content` can be requested by an admin through our\nsupport channels. Once this scope has been enabled for a user, it\nwill allow that use to query for content across the entire\nenterprise and not only the content that they have access to.\n*/\n scope?: \"user_content\" | \"enterprise_content\",  \n/**\n* Limits the search results to any files that match any of the provided\nfile extensions. This list is a comma-separated list of file extensions\nwithout the dots.\n*/\n file_extensions?:   string[],  \n/**\n* Limits the search results to any items created within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything created before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead.\n*/\n created_at_range?:   string[],  \n/**\n* Limits the search results to any items updated within\na given date range.\n\nDate ranges are defined as comma separated RFC3339\ntimestamps.\n\nIf the start date is omitted (`,2014-05-17T13:35:01-07:00`)\nanything updated before the end date will be returned.\n\nIf the end date is omitted (`2014-05-15T13:35:01-07:00,`) the\ncurrent date will be used as the end date instead.\n*/\n updated_at_range?:   string[],  \n/**\n* Limits the search results to any items with a size within\na given file size range. This applied to files and folders.\n\nSize ranges are defined as comma separated list of a lower\nand upper byte size limit (inclusive).\n\nThe upper and lower bound can be omitted to create open ranges.\n*/\n size_range?:   number[],  \n/**\n* Limits the search results to any items that are owned\nby the given list of owners, defined as a list of comma separated\nuser IDs.\n\nPlease note that the items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team.\n*/\n owner_user_ids?:   string[],  \n/**\n* Limits the search results to any items that have been updated\nby the given list of users, defined as a list of comma separated\nuser IDs.\n\nPlease note that the items still need to be owned or shared with\nthe currently authenticated user for them to show up in the search\nresults. If the user does not have access to any files owned by any of\nthe users an empty result set will be returned.\n\nThis feature only searches back to the last 10 versions of an item.\n*/\n recent_updater_user_ids?:   string[],  \n/**\n* Limits the search results to items within the given\nlist of folders, defined as a comma separated lists\nof folder IDs.\n\nSearch results will also include items within any subfolders\nof those ancestor folders.\n\nPlease note that the folders still need to be owned or shared with\nthe currently authenticated user. If the folder is not accessible by this\nuser, or it does not exist, a `HTTP 404` error code will be returned\ninstead.\n\nTo search across an entire enterprise, we recommend using the\n`enterprise_content` scope parameter which can be requested with our\nsupport team.\n*/\n ancestor_folder_ids?:   string[],  \n/**\n* Limits the search results to any items that match the search query\nfor a specific part of the file, for example the file description.\n\nContent types are defined as a comma separated lists\nof Box recognized content types. The allowed content types are as follows.\n\n* `name` - The name of the item, as defined by its `name` field.\n* `description` - The description of the item, as defined by its\n  `description` field.\n* `file_content` - The actual content of the file.\n* `comments` - The content of any of the comments on a file or\n   folder.\n* `tags` - Any tags that are applied to an item, as defined by its\n   `tags` field.\n*/\n content_types?: (  \"name\" | \"description\" | \"file_content\" | \"comments\" | \"tag\")[],  \n/**\n* Limits the search results to any items of this type. This\nparameter only takes one value. By default the API returns\nitems that match any of these types.\n\n* `file` - Limits the search results to files\n* `folder` - Limits the search results to folders\n* `web_link` - Limits the search results to web links, also known\n   as bookmarks\n*/\n type?: \"file\" | \"folder\" | \"web_link\",  \n/**\n* Determines if the search should look in the trash for items.\n\nBy default, this API only returns search results for items\nnot currently in the trash (`non_trashed_only`).\n\n* `trashed_only` - Only searches for items currently in the trash\n* `non_trashed_only` - Only searches for items currently not in\n  the trash\n*/\n trash_content?: \"non_trashed_only\" | \"trashed_only\",  \n/**\n* A list of metadata templates to filter the search results by.\n\nRequired unless `query` parameter is defined.\n*/\n mdfilters?:   MetadataFilter[],  \n/**\n* Defines the order in which search results are returned. This API\ndefaults to returning items by relevance unless this parameter is\nexplicitly specified.\n\n* `relevance` (default) returns the results sorted by relevance to the\nquery search term. The relevance is based on the occurrence of the search\nterm in the items name, description, content, and additional properties.\n* `modified_at` returns the results ordered in descending order by date\nat which the item was last modified.\n*/\n sort?: \"modified_at\" | \"relevance\",  \n/**\n* Defines the direction in which search results are ordered. This API\ndefaults to returning items in descending (`DESC`) order unless this\nparameter is explicitly specified.\n\nWhen results are sorted by `relevance` the ordering is locked to returning\nitems in descending order of relevance, and this parameter is ignored.\n*/\n direction?: \"DESC\" | \"ASC\",  \n/**\n* Defines the maximum number of items to return as part of a page of\nresults.\n*/\n limit?: number,  \n/**\n* Defines whether the search results should include any items\nthat the user recently accessed through a shared link.\n\nPlease note that when this parameter has been set to true,\nthe format of the response of this API changes to return\na list of [Search Results with\nShared Links](r://search_results_with_shared_links)\n*/\n include_recent_shared_links?: boolean,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/shared_items": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shared_items#folders": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shared_items#web_links": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_reports": {
    "queryParams": " query: {   \n/**\n* The ID of the shield information barrier.\n*/\n shield_information_barrier_id: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barrier_reports": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_reports/{shield_information_barrier_report_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segment_members": {
    "queryParams": " query: {   \n/**\n* The ID of the shield information barrier segment.\n*/\n shield_information_barrier_segment_id: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barrier_segment_members": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/shield_information_barrier_segment_members/{shield_information_barrier_segment_member_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segment_members/{shield_information_barrier_segment_member_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segment_restrictions": {
    "queryParams": " query: {   \n/**\n* The ID of the shield information barrier segment.\n*/\n shield_information_barrier_segment_id: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barrier_segment_restrictions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/shield_information_barrier_segment_restrictions/{shield_information_barrier_segment_restriction_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segment_restrictions/{shield_information_barrier_segment_restriction_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segments": {
    "queryParams": " query: {   \n/**\n* The ID of the shield information barrier.\n*/\n shield_information_barrier_id: string,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barrier_segments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/shield_information_barrier_segments/{shield_information_barrier_segment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barrier_segments/{shield_information_barrier_segment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/shield_information_barrier_segments/{shield_information_barrier_segment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barriers": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barriers": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/shield_information_barriers/change_status": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/shield_information_barriers/{shield_information_barrier_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/sign_requests": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/sign_requests": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/sign_requests/{sign_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/sign_requests/{sign_request_id}/cancel": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/sign_requests/{sign_request_id}/resend": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/skill_invocations/{skill_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/storage_policies": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/storage_policies/{storage_policy_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/storage_policy_assignments": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The target type to return assignments for\n*/\n resolved_for_type: \"user\" | \"enterprise\",  \n/**\n* The ID of the user or enterprise to return assignments for\n*/\n resolved_for_id: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/storage_policy_assignments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/storage_policy_assignments/{storage_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/storage_policy_assignments/{storage_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/storage_policy_assignments/{storage_policy_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/task_assignments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/task_assignments/{task_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/task_assignments/{task_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/task_assignments/{task_assignment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/tasks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/tasks/{task_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/tasks/{task_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/tasks/{task_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/tasks/{task_id}/assignments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/terms_of_service_user_statuses": {
    "queryParams": " query: {   \n/**\n* The ID of the terms of service.\n*/\n tos_id: string,  \n/**\n* Limits results to the given user ID.\n*/\n user_id?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/terms_of_service_user_statuses": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/terms_of_service_user_statuses/{terms_of_service_user_status_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/terms_of_services": {
    "queryParams": " query: {   \n/**\n* Limits the results to the terms of service of the given type.\n*/\n tos_type?: \"external\" | \"managed\", },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/terms_of_services": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/terms_of_services/{terms_of_service_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/terms_of_services/{terms_of_service_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users": {
    "queryParams": " query: {   \n/**\n* Limits the results to only users who's `name` or\n`login` start with the search term.\n\nFor externally managed users, the search term needs\nto completely match the in order to find the user, and\nit will only return one user at a time.\n*/\n filter_term?: string,  \n/**\n* Limits the results to the kind of user specified.\n\n* `all` returns every kind of user for whom the\n  `login` or `name` partially matches the\n  `filter_term`. It will only return an external user\n  if the login matches the `filter_term` completely,\n  and in that case it will only return that user.\n* `managed` returns all managed and app users for whom\n  the `login` or `name` partially matches the\n  `filter_term`.\n* `external` returns all external users for whom the\n  `login` matches the `filter_term` exactly.\n*/\n user_type?: \"all\" | \"managed\" | \"external\",  \n/**\n* Limits the results to app users with the given\n`external_app_user_id` value.\n\nWhen creating an app user, an\n`external_app_user_id` value can be set. This value can\nthen be used in this endpoint to find any users that\nmatch that `external_app_user_id` value.\n*/\n external_app_user_id?: string,  \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Specifies whether to use marker-based pagination instead of\noffset-based pagination. Only one pagination method can\nbe used at a time.\n\nBy setting this value to true, the API will return a `marker` field\nthat can be passed as a parameter to this endpoint to get the next\npage of the response.\n*/\n usemarker?: boolean,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/users": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users/me": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/users/terminate_sessions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/users/{user_id}": {
    "queryParams": " query: {   \n/**\n* Whether the user will receive email notification of\nthe deletion\n*/\n notify?: boolean,  \n/**\n* Whether the user should be deleted even if this user\nstill own files\n*/\n force?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users/{user_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/users/{user_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/users/{user_id}/avatar": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users/{user_id}/avatar": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/users/{user_id}/avatar": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users/{user_id}/email_aliases": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/users/{user_id}/email_aliases": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/users/{user_id}/email_aliases/{email_alias_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/users/{user_id}/folders/0": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[],  \n/**\n* Determines if users should receive email notification\nfor the action performed.\n*/\n notify?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/users/{user_id}/memberships": {
    "queryParams": " query: {   \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* The offset of the item at which to begin the response.\n\nQueries with offset parameter value\nexceeding 10000 will be rejected\nwith a 400 response.\n*/\n offset?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/web_links": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/web_links/{web_link_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/web_links/{web_link_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/web_links/{web_link_id}": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/web_links/{web_link_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/web_links/{web_link_id}#add_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/web_links/{web_link_id}#get_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/web_links/{web_link_id}#remove_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/web_links/{web_link_id}#update_shared_link": {
    "queryParams": " query: {   \n/**\n* Explicitly request the `shared_link` fields\nto be returned for this item.\n*/\n fields: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/web_links/{web_link_id}/trash": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/web_links/{web_link_id}/trash": {
    "queryParams": " query: {   \n/**\n* A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n*/\n fields?:   string[], },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/webhooks": {
    "queryParams": " query: {   \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/webhooks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/webhooks/{webhook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/webhooks/{webhook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/webhooks/{webhook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/workflows": {
    "queryParams": " query: {   \n/**\n* The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting this folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folder/123`\nthe `folder_id` is `123`.\n\nThe root folder of a Box account is\nalways represented by the ID `0`.\n*/\n folder_id: string,  \n/**\n* Type of trigger to search for.\n*/\n trigger_type?: string,  \n/**\n* The maximum number of items to return per page.\n*/\n limit?: number,  \n/**\n* Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.\n*/\n marker?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/workflows/{workflow_id}/start": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/zip_downloads": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/zip_downloads/{zip_download_id}/content": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/zip_downloads/{zip_download_id}/status": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  }
}
