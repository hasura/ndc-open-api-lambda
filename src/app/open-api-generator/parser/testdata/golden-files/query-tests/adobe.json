{
  "post_/.cqactions.html": {
    "params": " query: {    authorizableId: string,   changelog: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/com.adobe.granite.auth.saml.SamlAuthenticationHandler.config": {
    "params": " query: {    keyStorePassword?: string,   \"keyStorePassword@TypeHint\"?: string,   serviceRanking?: number,   serviceRankingTypeHint?: string,   idpHttpRedirect?: boolean,   \"idpHttpRedirect@TypeHint\"?: string,   createUser?: boolean,   \"createUser@TypeHint\"?: string,   defaultRedirectUrl?: string,   \"defaultRedirectUrl@TypeHint\"?: string,   userIDAttribute?: string,   \"userIDAttribute@TypeHint\"?: string,   defaultGroups?:   string[],   \"defaultGroups@TypeHint\"?: string,   idpCertAlias?: string,   \"idpCertAlias@TypeHint\"?: string,   addGroupMemberships?: boolean,   \"addGroupMemberships@TypeHint\"?: string,   path?:   string[],   \"path@TypeHint\"?: string,   synchronizeAttributes?:   string[],   \"synchronizeAttributes@TypeHint\"?: string,   clockTolerance?: number,   \"clockTolerance@TypeHint\"?: string,   groupMembershipAttribute?: string,   \"groupMembershipAttribute@TypeHint\"?: string,   idpUrl?: string,   \"idpUrl@TypeHint\"?: string,   logoutUrl?: string,   \"logoutUrl@TypeHint\"?: string,   serviceProviderEntityId?: string,   \"serviceProviderEntityId@TypeHint\"?: string,   assertionConsumerServiceURL?: string,   \"assertionConsumerServiceURL@TypeHint\"?: string,   handleLogout?: boolean,   \"handleLogout@TypeHint\"?: string,   spPrivateKeyAlias?: string,   \"spPrivateKeyAlias@TypeHint\"?: string,   useEncryption?: boolean,   \"useEncryption@TypeHint\"?: string,   nameIdFormat?: string,   \"nameIdFormat@TypeHint\"?: string,   digestMethod?: string,   \"digestMethod@TypeHint\"?: string,   signatureMethod?: string,   \"signatureMethod@TypeHint\"?: string,   userIntermediatePath?: string,   \"userIntermediatePath@TypeHint\"?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/com.shinesolutions.aem.passwordreset.Activator": {
    "params": " query: {    pwdresetAuthorizables?:   string[],   pwdresetAuthorizablesTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck": {
    "params": " query: {    bundlesIgnored?:   string[],   bundlesIgnoredTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/org.apache.felix.http": {
    "params": " query: {    orgApacheFelixHttpsNio?: boolean,   orgApacheFelixHttpsNioTypeHint?: string,   orgApacheFelixHttpsKeystore?: string,   orgApacheFelixHttpsKeystoreTypeHint?: string,   orgApacheFelixHttpsKeystorePassword?: string,   orgApacheFelixHttpsKeystorePasswordTypeHint?: string,   orgApacheFelixHttpsKeystoreKey?: string,   orgApacheFelixHttpsKeystoreKeyTypeHint?: string,   orgApacheFelixHttpsKeystoreKeyPassword?: string,   orgApacheFelixHttpsKeystoreKeyPasswordTypeHint?: string,   orgApacheFelixHttpsTruststore?: string,   orgApacheFelixHttpsTruststoreTypeHint?: string,   orgApacheFelixHttpsTruststorePassword?: string,   orgApacheFelixHttpsTruststorePasswordTypeHint?: string,   orgApacheFelixHttpsClientcertificate?: string,   orgApacheFelixHttpsClientcertificateTypeHint?: string,   orgApacheFelixHttpsEnable?: boolean,   orgApacheFelixHttpsEnableTypeHint?: string,   orgOsgiServiceHttpPortSecure?: string,   orgOsgiServiceHttpPortSecureTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/org.apache.http.proxyconfigurator.config": {
    "params": " query: {    proxyHost?: string,   proxyHostTypeHint?: string,   proxyPort?: number,   proxyPortTypeHint?: string,   proxyExceptions?:   string[],   proxyExceptionsTypeHint?: string,   proxyEnabled?: boolean,   proxyEnabledTypeHint?: string,   proxyUser?: string,   proxyUserTypeHint?: string,   proxyPassword?: string,   proxyPasswordTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet": {
    "params": " query: {    alias?: string,   \"alias@TypeHint\"?: string,   davCreateAbsoluteUri?: boolean,   davCreateAbsoluteUriTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/org.apache.sling.security.impl.ReferrerFilter": {
    "params": " query: {    allowEmpty?: boolean,   allowEmptyTypeHint?: string,   allowHosts?: string,   allowHostsTypeHint?: string,   allowHostsRegexp?: string,   allowHostsRegexpTypeHint?: string,   filterMethods?: string,   filterMethodsTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/org.apache.sling.servlets.get.DefaultGetServlet": {
    "params": " query: {    jsonMaximumresults?: string,   jsonMaximumresultsTypeHint?: string,   enableHtml?: boolean,   enableHtmlTypeHint?: string,   enableTxt?: boolean,   enableTxtTypeHint?: string,   enableXml?: boolean,   enableXmlTypeHint?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/apps/system/config/{configNodeName}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/bin/querybuilder.json": {
    "params": " query: {    path: string,   pLimit: number,   \"1_property\": string,   \"1PropertyValue\": string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/bin/querybuilder.json": {
    "params": " query: {    path: string,   pLimit: number,   \"1_property\": string,   \"1PropertyValue\": string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/crx/explorer/ui/setpassword.jsp": {
    "params": " query: {    old: string,   plain: string,   verify: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/crx/packmgr/installstatus.jsp": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/crx/packmgr/service.jsp": {
    "params": " query: {    cmd: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/crx/packmgr/service/.json/{path}": {
    "params": " query: {    cmd: string,   groupName?: string,   packageName?: string,   packageVersion?: string,   _charset_?: string,   force?: boolean,   recursive?: boolean, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/crx/packmgr/service/script.html": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/crx/packmgr/update.jsp": {
    "params": " query: {    groupName: string,   packageName: string,   version: string,   path: string,   filter?: string,   _charset_?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/crx/server/crx.default/jcr:root/.1.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/etc/packages/{group}/{name}-{version}.zip": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/etc/packages/{group}/{name}-{version}.zip/jcr:content/vlt:definition/filter.tidy.2.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/etc/replication/agents.{runmode}.-1.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "delete_/etc/replication/agents.{runmode}/{name}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/etc/replication/agents.{runmode}/{name}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/etc/replication/agents.{runmode}/{name}": {
    "params": " query: {    \"jcr:content/cq:distribute\"?: boolean,   \"jcr:content/cq:distribute@TypeHint\"?: string,   \"jcr:content/cq:name\"?: string,   \"jcr:content/cq:template\"?: string,   \"jcr:content/enabled\"?: boolean,   \"jcr:content/jcr:description\"?: string,   \"jcr:content/jcr:lastModified\"?: string,   \"jcr:content/jcr:lastModifiedBy\"?: string,   \"jcr:content/jcr:mixinTypes\"?: string,   \"jcr:content/jcr:title\"?: string,   \"jcr:content/logLevel\"?: string,   \"jcr:content/noStatusUpdate\"?: boolean,   \"jcr:content/noVersioning\"?: boolean,   \"jcr:content/protocolConnectTimeout\"?: number,   \"jcr:content/protocolHTTPConnectionClosed\"?: boolean,   \"jcr:content/protocolHTTPExpired\"?: string,   \"jcr:content/protocolHTTPHeaders\"?:   string[],   \"jcr:content/protocolHTTPHeaders@TypeHint\"?: string,   \"jcr:content/protocolHTTPMethod\"?: string,   \"jcr:content/protocolHTTPSRelaxed\"?: boolean,   \"jcr:content/protocolInterface\"?: string,   \"jcr:content/protocolSocketTimeout\"?: number,   \"jcr:content/protocolVersion\"?: string,   \"jcr:content/proxyNTLMDomain\"?: string,   \"jcr:content/proxyNTLMHost\"?: string,   \"jcr:content/proxyHost\"?: string,   \"jcr:content/proxyPassword\"?: string,   \"jcr:content/proxyPort\"?: number,   \"jcr:content/proxyUser\"?: string,   \"jcr:content/queueBatchMaxSize\"?: number,   \"jcr:content/queueBatchMode\"?: string,   \"jcr:content/queueBatchWaitTime\"?: number,   \"jcr:content/retryDelay\"?: string,   \"jcr:content/reverseReplication\"?: boolean,   \"jcr:content/serializationType\"?: string,   \"jcr:content/sling:resourceType\"?: string,   \"jcr:content/ssl\"?: string,   \"jcr:content/transportNTLMDomain\"?: string,   \"jcr:content/transportNTLMHost\"?: string,   \"jcr:content/transportPassword\"?: string,   \"jcr:content/transportUri\"?: string,   \"jcr:content/transportUser\"?: string,   \"jcr:content/triggerDistribute\"?: boolean,   \"jcr:content/triggerModified\"?: boolean,   \"jcr:content/triggerOnOffTime\"?: boolean,   \"jcr:content/triggerReceive\"?: boolean,   \"jcr:content/triggerSpecific\"?: boolean,   \"jcr:content/userId\"?: string,   \"jcr:primaryType\"?: string,   \":operation\"?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/etc/truststore": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/etc/truststore/truststore.p12": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/libs/granite/core/content/login.html": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/libs/granite/security/post/authorizables": {
    "params": " query: {    authorizableId: string,   intermediatePath: string,   createUser?: string,   createGroup?: string,   \"rep:password\"?: string,   \"profile/givenName\"?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/libs/granite/security/post/sslSetup.html": {
    "params": " query: {    keystorePassword: string,   keystorePasswordConfirm: string,   truststorePassword: string,   truststorePasswordConfirm: string,   httpsHostname: string,   httpsPort: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/libs/granite/security/post/truststore": {
    "params": " query: {    \":operation\"?: string,   newPassword?: string,   rePassword?: string,   keyStoreType?: string,   removeAlias?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/libs/granite/security/truststore.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/libs/replication/treeactivation.html": {
    "params": " query: {    ignoredeactivated: boolean,   onlymodified: boolean,   path: string,   cmd: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/system/console/bundles/{name}": {
    "params": " query: {    action: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/system/console/bundles/{name}.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/system/console/configMgr": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler": {
    "params": " query: {    post?: boolean,   apply?: boolean,   delete?: boolean,   action?: string,   $location?: string,   path?:   string[],   serviceRanking?: number,   idpUrl?: string,   idpCertAlias?: string,   idpHttpRedirect?: boolean,   serviceProviderEntityId?: string,   assertionConsumerServiceURL?: string,   spPrivateKeyAlias?: string,   keyStorePassword?: string,   defaultRedirectUrl?: string,   userIDAttribute?: string,   useEncryption?: boolean,   createUser?: boolean,   addGroupMemberships?: boolean,   groupMembershipAttribute?: string,   defaultGroups?:   string[],   nameIdFormat?: string,   synchronizeAttributes?:   string[],   handleLogout?: boolean,   logoutUrl?: string,   clockTolerance?: number,   digestMethod?: string,   signatureMethod?: string,   userIntermediatePath?: string,   propertylist?:   string[], },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/system/console/jmx/com.adobe.granite:type=Repository/op/{action}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/system/console/status-productinfo.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/system/health": {
    "params": " query: {    tags?: string,   combineTagsOr?: boolean, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/{intermediatePath}/{authorizableId}.ks.html": {
    "params": " query: {    \":operation\"?: string,   currentPassword?: string,   newPassword?: string,   rePassword?: string,   keyPassword?: string,   keyStorePass?: string,   alias?: string,   newAlias?: string,   removeAlias?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/{intermediatePath}/{authorizableId}.ks.json": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/{intermediatePath}/{authorizableId}/keystore/store.p12": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/{path}/": {
    "params": " query: {    \"jcr:primaryType\": string,   \":name\": string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "delete_/{path}/{name}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "get_/{path}/{name}": {
    "params": "null",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/{path}/{name}": {
    "params": " query: {    \":operation\"?: string,   deleteAuthorizable?: string, },",
    "requireRelaxedTypeAnnotation": false
  },
  "post_/{path}/{name}.rw.html": {
    "params": " query: {    addMembers?: string, },",
    "requireRelaxedTypeAnnotation": false
  }
}
