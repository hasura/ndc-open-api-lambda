{
  "get_/v3/application/settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/application/settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/ci/lint": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/deploy_keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/dockerfiles": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/dockerfiles/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/gitignores": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/gitignores/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/gitlab_ci_ymls": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/gitlab_ci_ymls/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups": {
    "queryParams": " query: {   \n/**\n* Include project statistics\n*/\n statistics?: boolean,  \n/**\n* Show all group that you have access to\n*/\n all_available?: boolean,  \n/**\n* Search for a specific group\n*/\n search?: string,  \n/**\n* Order by name or path\n*/\n order_by?: \"name\" | \"path\",  \n/**\n* Sort by asc (ascending) or desc (descending)\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/groups": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/owned": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Include project statistics\n*/\n statistics?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/groups/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/groups/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}/access_requests": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/groups/{id}/access_requests": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/groups/{id}/access_requests/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/groups/{id}/access_requests/{user_id}/approve": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}/issues": {
    "queryParams": " query: {   \n/**\n* Return opened, closed, or all issues\n*/\n state?: \"opened\" | \"closed\" | \"all\",  \n/**\n* Comma-separated list of label names\n*/\n labels?: string,  \n/**\n* Return issues for a specific milestone\n*/\n milestone?: string,  \n/**\n* Return issues ordered by `created_at` or `updated_at` fields.\n*/\n order_by?: \"created_at\" | \"updated_at\",  \n/**\n* Return issues sorted in `asc` or `desc` order.\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/groups/{id}/members": {
    "queryParams": " query: {   \n/**\n* A query string to search for members\n*/\n query?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/groups/{id}/members": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/groups/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/groups/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/groups/{id}/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/groups/{id}/projects": {
    "queryParams": " query: {   \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/groups/{id}/projects/{project_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/hooks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/hooks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/hooks/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/hooks/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/internal/allowed": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/internal/broadcast_message": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/internal/check": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/internal/discover": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/internal/lfs_authenticate": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/internal/merge_request_urls": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/internal/two_factor_recovery_codes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/issues": {
    "queryParams": " query: {   \n/**\n* Return opened, closed, or all issues\n*/\n state?: \"opened\" | \"closed\" | \"all\",  \n/**\n* Comma-separated list of label names\n*/\n labels?: string,  \n/**\n* Return issues for a specific milestone\n*/\n milestone?: string,  \n/**\n* Return issues ordered by `created_at` or `updated_at` fields.\n*/\n order_by?: \"created_at\" | \"updated_at\",  \n/**\n* Return issues sorted in `asc` or `desc` order.\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/keys/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/licenses": {
    "queryParams": " query: {   \n/**\n* If passed, returns only popular licenses\n*/\n popular?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/licenses/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/namespaces": {
    "queryParams": " query: {   \n/**\n* Search query for namespaces\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects": {
    "queryParams": " query: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/all": {
    "queryParams": " query: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean,  \n/**\n* Include project statistics\n*/\n statistics?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/fork/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/owned": {
    "queryParams": " query: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean,  \n/**\n* Include project statistics\n*/\n statistics?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/projects/search/{query}": {
    "queryParams": " queryParams: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/projects/starred": {
    "queryParams": " query: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/user/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/visible": {
    "queryParams": " query: {   \n/**\n* Return projects ordered by field\n*/\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",  \n/**\n* Return projects sorted in ascending and descending order\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Limit by archived status\n*/\n archived?: boolean,  \n/**\n* Limit by visibility\n*/\n visibility?: \"public\" | \"internal\" | \"private\",  \n/**\n* Return list of authorized projects matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Return only the ID, URL, name, and path of each project\n*/\n simple?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "delete_/v3/projects/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/(ref/{ref}/)trigger/builds": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/access_requests": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/access_requests": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/access_requests/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/access_requests/{user_id}/approve": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/archive": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/boards": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/boards/{board_id}/lists": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/boards/{board_id}/lists": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/builds": {
    "queryParams": " query: {   \n/**\n* The scope of builds to show\n*/\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/projects/{id}/builds/artifacts/{ref_name}/download": {
    "queryParams": " query: {   \n/**\n* The name for the build\n*/\n job: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/builds/{build_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/builds/{build_id}/artifacts": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/builds/{build_id}/artifacts/keep": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/builds/{build_id}/cancel": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/builds/{build_id}/erase": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/builds/{build_id}/play": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/builds/{build_id}/retry": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/builds/{build_id}/trace": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/deploy_keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/deploy_keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/deploy_keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/deploy_keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/deploy_keys/{key_id}/disable": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/deploy_keys/{key_id}/enable": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/deployments": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/deployments/{deployment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/environments": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/environments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/environments/{environment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/environments/{environment_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/events": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/fork": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/fork/{forked_from_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/hooks": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/hooks": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/hooks/{hook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/hooks/{hook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/hooks/{hook_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues": {
    "queryParams": " query: {   \n/**\n* Return opened, closed, or all issues\n*/\n state?: \"opened\" | \"closed\" | \"all\",  \n/**\n* Return the issue having the given `iid`\n*/\n iid?: number,  \n/**\n* Comma-separated list of label names\n*/\n labels?: string,  \n/**\n* Return issues for a specific milestone\n*/\n milestone?: string,  \n/**\n* Return issues ordered by `created_at` or `updated_at` fields.\n*/\n order_by?: \"created_at\" | \"updated_at\",  \n/**\n* Return issues sorted in `asc` or `desc` order.\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/{id}/issues": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/issues/{issue_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/issues/{issue_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/add_spent_time": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/move": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/reset_spent_time": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/reset_time_estimate": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/time_estimate": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{issue_id}/time_stats": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{issue_id}/todo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{noteable_id}/notes": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{noteable_id}/notes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/issues/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/issues/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/keys/{key_id}/disable": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/keys/{key_id}/enable": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/labels": {
    "queryParams": " query: {   \n/**\n* The name of the label to be deleted\n*/\n name: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/labels": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/labels": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/labels": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/labels/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/labels/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/members": {
    "queryParams": " query: {   \n/**\n* A query string to search for members\n*/\n query?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/members": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/members/{user_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_request/{merge_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/merge_request/{merge_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_request/{merge_request_id}/changes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_request/{merge_request_id}/closes_issues": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_request/{merge_request_id}/comments": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_request/{merge_request_id}/comments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_request/{merge_request_id}/commits": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/merge_request/{merge_request_id}/merge": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_request/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_request/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests": {
    "queryParams": " query: {   \n/**\n* Return opened, closed, merged, or all merge requests\n*/\n state?: \"opened\" | \"closed\" | \"merged\" | \"all\",  \n/**\n* Return merge requests ordered by `created_at` or `updated_at` fields.\n*/\n order_by?: \"created_at\" | \"updated_at\",  \n/**\n* Return merge requests sorted in `asc` or `desc` order.\n*/\n sort?: \"asc\" | \"desc\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/{id}/merge_requests": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/changes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/comments": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/comments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/commits": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/merge_requests/{merge_request_id}/merge": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/time_stats": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{merge_request_id}/todo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/versions": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{noteable_id}/notes": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{noteable_id}/notes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/merge_requests/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/merge_requests/{subscribable_id}/subscription": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/milestones": {
    "queryParams": " query: {   \n/**\n* Return \"active\", \"closed\", or \"all\" milestones\n*/\n state?: \"active\" | \"closed\" | \"all\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/{id}/milestones": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/milestones/{milestone_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/milestones/{milestone_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/milestones/{milestone_id}/issues": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/notification_settings": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/pipeline": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/pipelines": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number,  \n/**\n* Either running, branches, or tags\n*/\n scope?: \"running\" | \"branches\" | \"tags\", },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/projects/{id}/pipelines/{pipeline_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/pipelines/{pipeline_id}/cancel": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/pipelines/{pipeline_id}/retry": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/archive": {
    "queryParams": " query: {   \n/**\n* The commit sha of the archive to be downloaded\n*/\n sha?: string,  \n/**\n* The archive format\n*/\n format?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/blobs/{sha}": {
    "queryParams": " query: {   \n/**\n* The path to the file to display\n*/\n filepath: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/branches": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/branches": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/repository/branches/{branch}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/branches/{branch}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/repository/branches/{branch}/protect": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/repository/branches/{branch}/unprotect": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits": {
    "queryParams": " query: {   \n/**\n* The name of a repository branch or tag, if not given the default branch is used\n*/\n ref_name?: string,  \n/**\n* Only commits after or in this date will be returned\n*/\n since?: string,  \n/**\n* Only commits before or in this date will be returned\n*/\n until?: string,  \n/**\n* The page for pagination\n*/\n page?: number,  \n/**\n* The number of results per page\n*/\n per_page?: number,  \n/**\n* The file path\n*/\n path?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/commits": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}/blob": {
    "queryParams": " query: {   \n/**\n* The path to the file to display\n*/\n filepath: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}/builds": {
    "queryParams": " query: {   \n/**\n* The scope of builds to show\n*/\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/{id}/repository/commits/{sha}/cherry_pick": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}/comments": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/commits/{sha}/comments": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}/diff": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/commits/{sha}/statuses": {
    "queryParams": " query: {   \n/**\n* The ref\n*/\n ref?: string,  \n/**\n* The stage\n*/\n stage?: string,  \n/**\n* The name\n*/\n name?: string,  \n/**\n* Show all statuses, default: false\n*/\n all?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/compare": {
    "queryParams": " query: {   \n/**\n* The commit, branch name, or tag name to start comparison\n*/\n from: string,  \n/**\n* The commit, branch name, or tag name to stop comparison\n*/\n to: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/contributors": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/repository/files": {
    "queryParams": " query: {   \n/**\n* The path to new file. Ex. lib/class.rb\n*/\n file_path: string,  \n/**\n* The name of branch\n*/\n branch_name: string,  \n/**\n* Commit Message\n*/\n commit_message: string,  \n/**\n* The email of the author\n*/\n author_email?: string,  \n/**\n* The name of the author\n*/\n author_name?: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/files": {
    "queryParams": " query: {   \n/**\n* The path to the file. Ex. lib/class.rb\n*/\n file_path: string,  \n/**\n* The name of branch, tag, or commit\n*/\n ref: string, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/files": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/repository/files": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/repository/merged_branches": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/raw_blobs/{sha}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/tags": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/tags": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/repository/tags/{tag_name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/tags/{tag_name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/repository/tags/{tag_name}/release": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/repository/tags/{tag_name}/release": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/repository/tree": {
    "queryParams": " query: {   \n/**\n* The name of a repository branch or tag, if not given the default branch is used\n*/\n ref_name?: string,  \n/**\n* The path of the tree\n*/\n path?: string,  \n/**\n* Used to get a recursive tree\n*/\n recursive?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/runners": {
    "queryParams": " query: {   \n/**\n* The scope of specific runners to show\n*/\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "post_/v3/projects/{id}/runners": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/runners/{runner_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/asana": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/assembla": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/bamboo": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/bugzilla": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/buildkite": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/builds-email": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/campfire": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/custom-issue-tracker": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/drone-ci": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/emails-on-push": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/external-wiki": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/flowdock": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/gemnasium": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/hipchat": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/irker": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/jira": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/kubernetes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/mattermost": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/mattermost-slash-commands": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/services/mattermost_slash_commands/trigger": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/pipelines-email": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/pivotaltracker": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/pushover": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/redmine": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/slack": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/slack-slash-commands": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/services/slack_slash_commands/trigger": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/services/teamcity": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/services/{service_slug}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/services/{service_slug}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/share": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/share/{group_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/snippets": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{noteable_id}/notes": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/snippets/{noteable_id}/notes": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/snippets/{snippet_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/snippets/{snippet_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/snippets/{snippet_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/snippets/{snippet_id}/raw": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/star": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/star": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/statuses/{sha}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/triggers": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/triggers": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/triggers/{token}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/triggers/{token}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/unarchive": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/uploads": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/users": {
    "queryParams": " query: {   \n/**\n* Return list of users matching the search criteria\n*/\n search?: string,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/variables": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/projects/{id}/variables": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/projects/{id}/variables/{key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/projects/{id}/variables/{key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/projects/{id}/variables/{key}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/runners": {
    "queryParams": " query: {   \n/**\n* The scope of specific runners to show\n*/\n scope?: \"active\" | \"paused\" | \"online\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "get_/v3/runners/all": {
    "queryParams": " query: {   \n/**\n* The scope of specific runners to show\n*/\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\",  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": true
  },
  "delete_/v3/runners/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/runners/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/runners/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/session": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/sidekiq/compound_metrics": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/sidekiq/job_stats": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/sidekiq/process_metrics": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/sidekiq/queue_metrics": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/snippets": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/snippets": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/snippets/public": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/snippets/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/snippets/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/snippets/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/snippets/{id}/raw": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/dockerfiles": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/dockerfiles/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/gitignores": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/gitignores/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/gitlab_ci_ymls": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/gitlab_ci_ymls/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/licenses": {
    "queryParams": " query: {   \n/**\n* If passed, returns only popular licenses\n*/\n popular?: boolean, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/templates/licenses/{name}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/todos": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/todos": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/todos/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/user": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/user/emails": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/user/emails": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/user/emails/{email_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/user/emails/{email_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/user/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/user/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/user/keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/user/keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/users": {
    "queryParams": " query: {   \n/**\n* Get a single user with a specific username\n*/\n username?: string,  \n/**\n* Search for a username\n*/\n search?: string,  \n/**\n* Filters only active users\n*/\n active?: boolean,  \n/**\n* Filters only external users\n*/\n external?: boolean,  \n/**\n* Filters only blocked users\n*/\n blocked?: boolean,  \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/users": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/users/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/users/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/users/{id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/users/{id}/block": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/users/{id}/emails": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/users/{id}/emails": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/users/{id}/emails/{email_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/users/{id}/events": {
    "queryParams": " query: {   \n/**\n* Current page number\n*/\n page?: number,  \n/**\n* Number of items per page\n*/\n per_page?: number, },",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/users/{id}/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "post_/v3/users/{id}/keys": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "delete_/v3/users/{id}/keys/{key_id}": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "put_/v3/users/{id}/unblock": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  },
  "get_/v3/version": {
    "queryParams": "null",
    "queryParamsRequireRelaxedTypeAnnotation": false
  }
}
