{
    "post_/.cqactions.html": {
        "queryParams": " query: {    authorizableId: string,   changelog: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/com.adobe.granite.auth.saml.SamlAuthenticationHandler.config": {
        "queryParams": " query?: {    keyStorePassword?: string,   keyStorePassword@TypeHint?: string,   serviceRanking?: number,   serviceRankingTypeHint?: string,   idpHttpRedirect?: boolean,   idpHttpRedirect@TypeHint?: string,   createUser?: boolean,   createUser@TypeHint?: string,   defaultRedirectUrl?: string,   defaultRedirectUrl@TypeHint?: string,   userIDAttribute?: string,   userIDAttribute@TypeHint?: string,   defaultGroups?:   string[],   defaultGroups@TypeHint?: string,   idpCertAlias?: string,   idpCertAlias@TypeHint?: string,   addGroupMemberships?: boolean,   addGroupMemberships@TypeHint?: string,   path?:   string[],   path@TypeHint?: string,   synchronizeAttributes?:   string[],   synchronizeAttributes@TypeHint?: string,   clockTolerance?: number,   clockTolerance@TypeHint?: string,   groupMembershipAttribute?: string,   groupMembershipAttribute@TypeHint?: string,   idpUrl?: string,   idpUrl@TypeHint?: string,   logoutUrl?: string,   logoutUrl@TypeHint?: string,   serviceProviderEntityId?: string,   serviceProviderEntityId@TypeHint?: string,   assertionConsumerServiceURL?: string,   assertionConsumerServiceURL@TypeHint?: string,   handleLogout?: boolean,   handleLogout@TypeHint?: string,   spPrivateKeyAlias?: string,   spPrivateKeyAlias@TypeHint?: string,   useEncryption?: boolean,   useEncryption@TypeHint?: string,   nameIdFormat?: string,   nameIdFormat@TypeHint?: string,   digestMethod?: string,   digestMethod@TypeHint?: string,   signatureMethod?: string,   signatureMethod@TypeHint?: string,   userIntermediatePath?: string,   userIntermediatePath@TypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/com.shinesolutions.aem.passwordreset.Activator": {
        "queryParams": " query?: {    pwdresetAuthorizables?:   string[],   pwdresetAuthorizablesTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck": {
        "queryParams": " query?: {    bundlesIgnored?:   string[],   bundlesIgnoredTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/org.apache.felix.http": {
        "queryParams": " query?: {    orgApacheFelixHttpsNio?: boolean,   orgApacheFelixHttpsNioTypeHint?: string,   orgApacheFelixHttpsKeystore?: string,   orgApacheFelixHttpsKeystoreTypeHint?: string,   orgApacheFelixHttpsKeystorePassword?: string,   orgApacheFelixHttpsKeystorePasswordTypeHint?: string,   orgApacheFelixHttpsKeystoreKey?: string,   orgApacheFelixHttpsKeystoreKeyTypeHint?: string,   orgApacheFelixHttpsKeystoreKeyPassword?: string,   orgApacheFelixHttpsKeystoreKeyPasswordTypeHint?: string,   orgApacheFelixHttpsTruststore?: string,   orgApacheFelixHttpsTruststoreTypeHint?: string,   orgApacheFelixHttpsTruststorePassword?: string,   orgApacheFelixHttpsTruststorePasswordTypeHint?: string,   orgApacheFelixHttpsClientcertificate?: string,   orgApacheFelixHttpsClientcertificateTypeHint?: string,   orgApacheFelixHttpsEnable?: boolean,   orgApacheFelixHttpsEnableTypeHint?: string,   orgOsgiServiceHttpPortSecure?: string,   orgOsgiServiceHttpPortSecureTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/org.apache.http.proxyconfigurator.config": {
        "queryParams": " query?: {    proxyHost?: string,   proxyHostTypeHint?: string,   proxyPort?: number,   proxyPortTypeHint?: string,   proxyExceptions?:   string[],   proxyExceptionsTypeHint?: string,   proxyEnabled?: boolean,   proxyEnabledTypeHint?: string,   proxyUser?: string,   proxyUserTypeHint?: string,   proxyPassword?: string,   proxyPasswordTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet": {
        "queryParams": " query?: {    alias?: string,   alias@TypeHint?: string,   davCreateAbsoluteUri?: boolean,   davCreateAbsoluteUriTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/org.apache.sling.security.impl.ReferrerFilter": {
        "queryParams": " query?: {    allowEmpty?: boolean,   allowEmptyTypeHint?: string,   allowHosts?: string,   allowHostsTypeHint?: string,   allowHostsRegexp?: string,   allowHostsRegexpTypeHint?: string,   filterMethods?: string,   filterMethodsTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/org.apache.sling.servlets.get.DefaultGetServlet": {
        "queryParams": " query?: {    jsonMaximumresults?: string,   jsonMaximumresultsTypeHint?: string,   enableHtml?: boolean,   enableHtmlTypeHint?: string,   enableTxt?: boolean,   enableTxtTypeHint?: string,   enableXml?: boolean,   enableXmlTypeHint?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/apps/system/config/{configNodeName}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/bin/querybuilder.json": {
        "queryParams": " query: {    path: string,   pLimit: number,   1_property: string,   1PropertyValue: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/bin/querybuilder.json": {
        "queryParams": " query: {    path: string,   pLimit: number,   1_property: string,   1PropertyValue: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/crx/explorer/ui/setpassword.jsp": {
        "queryParams": " query: {    old: string,   plain: string,   verify: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/crx/packmgr/installstatus.jsp": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/crx/packmgr/service.jsp": {
        "queryParams": " query: {    cmd: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/crx/packmgr/service/.json/{path}": {
        "queryParams": " query: {    cmd: string,   groupName?: string,   packageName?: string,   packageVersion?: string,   _charset_?: string,   force?: boolean,   recursive?: boolean, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/crx/packmgr/service/script.html": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/crx/packmgr/update.jsp": {
        "queryParams": " query: {    groupName: string,   packageName: string,   version: string,   path: string,   filter?: string,   _charset_?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/crx/server/crx.default/jcr:root/.1.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/etc/packages/{group}/{name}-{version}.zip": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/etc/packages/{group}/{name}-{version}.zip/jcr:content/vlt:definition/filter.tidy.2.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/etc/replication/agents.{runmode}.-1.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "delete_/etc/replication/agents.{runmode}/{name}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/etc/replication/agents.{runmode}/{name}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/etc/replication/agents.{runmode}/{name}": {
        "queryParams": " query?: {    jcr:content/cq:distribute?: boolean,   jcr:content/cq:distribute@TypeHint?: string,   jcr:content/cq:name?: string,   jcr:content/cq:template?: string,   jcr:content/enabled?: boolean,   jcr:content/jcr:description?: string,   jcr:content/jcr:lastModified?: string,   jcr:content/jcr:lastModifiedBy?: string,   jcr:content/jcr:mixinTypes?: string,   jcr:content/jcr:title?: string,   jcr:content/logLevel?: string,   jcr:content/noStatusUpdate?: boolean,   jcr:content/noVersioning?: boolean,   jcr:content/protocolConnectTimeout?: number,   jcr:content/protocolHTTPConnectionClosed?: boolean,   jcr:content/protocolHTTPExpired?: string,   jcr:content/protocolHTTPHeaders?:   string[],   jcr:content/protocolHTTPHeaders@TypeHint?: string,   jcr:content/protocolHTTPMethod?: string,   jcr:content/protocolHTTPSRelaxed?: boolean,   jcr:content/protocolInterface?: string,   jcr:content/protocolSocketTimeout?: number,   jcr:content/protocolVersion?: string,   jcr:content/proxyNTLMDomain?: string,   jcr:content/proxyNTLMHost?: string,   jcr:content/proxyHost?: string,   jcr:content/proxyPassword?: string,   jcr:content/proxyPort?: number,   jcr:content/proxyUser?: string,   jcr:content/queueBatchMaxSize?: number,   jcr:content/queueBatchMode?: string,   jcr:content/queueBatchWaitTime?: number,   jcr:content/retryDelay?: string,   jcr:content/reverseReplication?: boolean,   jcr:content/serializationType?: string,   jcr:content/sling:resourceType?: string,   jcr:content/ssl?: string,   jcr:content/transportNTLMDomain?: string,   jcr:content/transportNTLMHost?: string,   jcr:content/transportPassword?: string,   jcr:content/transportUri?: string,   jcr:content/transportUser?: string,   jcr:content/triggerDistribute?: boolean,   jcr:content/triggerModified?: boolean,   jcr:content/triggerOnOffTime?: boolean,   jcr:content/triggerReceive?: boolean,   jcr:content/triggerSpecific?: boolean,   jcr:content/userId?: string,   jcr:primaryType?: string,   :operation?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/etc/truststore": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/etc/truststore/truststore.p12": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/libs/granite/core/content/login.html": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/libs/granite/security/post/authorizables": {
        "queryParams": " query: {    authorizableId: string,   intermediatePath: string,   createUser?: string,   createGroup?: string,   rep:password?: string,   profile/givenName?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/libs/granite/security/post/sslSetup.html": {
        "queryParams": " query: {    keystorePassword: string,   keystorePasswordConfirm: string,   truststorePassword: string,   truststorePasswordConfirm: string,   httpsHostname: string,   httpsPort: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/libs/granite/security/post/truststore": {
        "queryParams": " query?: {    :operation?: string,   newPassword?: string,   rePassword?: string,   keyStoreType?: string,   removeAlias?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/libs/granite/security/truststore.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/libs/replication/treeactivation.html": {
        "queryParams": " query: {    ignoredeactivated: boolean,   onlymodified: boolean,   path: string,   cmd: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/system/console/bundles/{name}": {
        "queryParams": " query: {    action: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/system/console/bundles/{name}.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/system/console/configMgr": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler": {
        "queryParams": " query?: {    post?: boolean,   apply?: boolean,   delete?: boolean,   action?: string,   $location?: string,   path?:   string[],   serviceRanking?: number,   idpUrl?: string,   idpCertAlias?: string,   idpHttpRedirect?: boolean,   serviceProviderEntityId?: string,   assertionConsumerServiceURL?: string,   spPrivateKeyAlias?: string,   keyStorePassword?: string,   defaultRedirectUrl?: string,   userIDAttribute?: string,   useEncryption?: boolean,   createUser?: boolean,   addGroupMemberships?: boolean,   groupMembershipAttribute?: string,   defaultGroups?:   string[],   nameIdFormat?: string,   synchronizeAttributes?:   string[],   handleLogout?: boolean,   logoutUrl?: string,   clockTolerance?: number,   digestMethod?: string,   signatureMethod?: string,   userIntermediatePath?: string,   propertylist?:   string[], },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/system/console/jmx/com.adobe.granite:type=Repository/op/{action}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/system/console/status-productinfo.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/system/health": {
        "queryParams": " query?: {    tags?: string,   combineTagsOr?: boolean, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/{intermediatePath}/{authorizableId}.ks.html": {
        "queryParams": " query?: {    :operation?: string,   currentPassword?: string,   newPassword?: string,   rePassword?: string,   keyPassword?: string,   keyStorePass?: string,   alias?: string,   newAlias?: string,   removeAlias?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/{intermediatePath}/{authorizableId}.ks.json": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/{intermediatePath}/{authorizableId}/keystore/store.p12": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/{path}/": {
        "queryParams": " query: {    jcr:primaryType: string,   :name: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "delete_/{path}/{name}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "get_/{path}/{name}": {
        "queryParams": "null",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/{path}/{name}": {
        "queryParams": " query?: {    :operation?: string,   deleteAuthorizable?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    },
    "post_/{path}/{name}.rw.html": {
        "queryParams": " query?: {    addMembers?: string, },",
        "pathParams": "null",
        "bodyParams": "null",
        "queryParamsRequireRelaxedTypeAnnotation": false
    }
}