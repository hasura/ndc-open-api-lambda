{
  "get__/v1/account": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Account",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/account_links": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The identifier of the account to create an account link for.\n   * @maxLength 5000\n   */\n    account: string,\n  /** Which information the platform needs to collect from the user. One of `currently_due` or `eventually_due`. Default is `currently_due`. */\n    collect?: \"currently_due\" | \"eventually_due\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user. */\n    refresh_url?: string,\n  /** The URL that the user will be redirected to upon leaving or completing the linked flow. */\n    return_url?: string,\n  /** The type of account link the user is requesting. Possible values are `account_onboarding` or `account_update`. */\n    type: \"account_onboarding\" | \"account_update\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "AccountLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Account)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/accounts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.\n   * @maxLength 5000\n   */\n    account_token?: string,\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /**\n   * business_profile_specs\n   * Business information about the account.\n   */\n    business_profile?: {\n  /** @maxLength 4 */\n    mcc?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 40000 */\n    product_description?: string,\n  /** address_specs */\n    support_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    support_email?: string,\n  /** @maxLength 5000 */\n    support_phone?: string,\n    support_url?: (string | \"\"),\n  /** @maxLength 5000 */\n    url?: string,\n\n},\n  /** The business type. */\n    business_type?: \"company\" | \"government_entity\" | \"individual\" | \"non_profit\",\n  /**\n   * capabilities_param\n   * Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.\n   */\n    capabilities?: {\n  /** capability_param */\n    acss_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    affirm_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    afterpay_clearpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    au_becs_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bacs_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bancontact_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bank_transfer_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    blik_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    boleto_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    card_issuing?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    card_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    cartes_bancaires_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    eps_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    fpx_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    giropay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    grabpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    ideal_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    india_international_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    jcb_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    klarna_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    konbini_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    legacy_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    link_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    oxxo_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"p24_payments\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    paynow_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    promptpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    sepa_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    sofort_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"tax_reporting_us_1099_k\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"tax_reporting_us_1099_misc\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    transfers?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    treasury?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    us_bank_account_ach_payments?: {\n    requested?: boolean,\n\n},\n\n},\n  /**\n   * company_specs\n   * Information about the company or business. This field is available for any `business_type`.\n   */\n    company?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    directors_provided?: boolean,\n    executives_provided?: boolean,\n  /** @maxLength 100 */\n    name?: string,\n  /** @maxLength 100 */\n    name_kana?: string,\n  /** @maxLength 100 */\n    name_kanji?: string,\n    owners_provided?: boolean,\n  /** company_ownership_declaration */\n    ownership_declaration?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    registration_number?: string,\n    structure?: \"\" | \"free_zone_establishment\" | \"free_zone_llc\" | \"government_instrumentality\" | \"governmental_unit\" | \"incorporated_non_profit\" | \"limited_liability_partnership\" | \"llc\" | \"multi_member_llc\" | \"private_company\" | \"private_corporation\" | \"private_partnership\" | \"public_company\" | \"public_corporation\" | \"public_partnership\" | \"single_member_llc\" | \"sole_establishment\" | \"sole_proprietorship\" | \"tax_exempt_government_instrumentality\" | \"unincorporated_association\" | \"unincorporated_non_profit\",\n  /** @maxLength 5000 */\n    tax_id?: string,\n  /** @maxLength 5000 */\n    tax_id_registrar?: string,\n  /** @maxLength 5000 */\n    vat_id?: string,\n  /** verification_specs */\n    verification?: {\n  /** verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /**\n   * The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.\n   * @maxLength 5000\n   */\n    country?: string,\n  /** Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts). */\n    default_currency?: string,\n  /**\n   * documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    bank_account_ownership_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_license?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_memorandum_of_association?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_ministerial_decree?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_registration_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_tax_id_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    proof_of_registration?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A card or bank account to attach to the account for receiving [payouts](https://stripe.com/docs/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary, as documented in the `external_account` parameter for [bank account](https://stripe.com/docs/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](https://stripe.com/docs/api#account_create_bank_account) or [card creation](https://stripe.com/docs/api#account_create_card) APIs.\n   * @maxLength 5000\n   */\n    external_account?: string,\n  /**\n   * individual_specs\n   * Information about the person represented by the account. This field is null unless `business_type` is set to `individual`.\n   */\n    individual?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n    email?: string,\n  /** @maxLength 100 */\n    first_name?: string,\n  /** @maxLength 5000 */\n    first_name_kana?: string,\n  /** @maxLength 5000 */\n    first_name_kanji?: string,\n    full_name_aliases?: ((string)[] | \"\"),\n    gender?: string,\n  /** @maxLength 5000 */\n    id_number?: string,\n  /** @maxLength 5000 */\n    id_number_secondary?: string,\n  /** @maxLength 100 */\n    last_name?: string,\n  /** @maxLength 5000 */\n    last_name_kana?: string,\n  /** @maxLength 5000 */\n    last_name_kanji?: string,\n  /** @maxLength 5000 */\n    maiden_name?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n    phone?: string,\n    political_exposure?: \"existing\" | \"none\",\n  /** address_specs */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    \"ssn_last_4\"?: string,\n  /** person_verification_specs */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * settings_specs\n   * Options for customizing how the account functions within Stripe.\n   */\n    settings?: {\n  /** branding_settings_specs */\n    branding?: {\n  /** @maxLength 5000 */\n    icon?: string,\n  /** @maxLength 5000 */\n    logo?: string,\n  /** @maxLength 5000 */\n    primary_color?: string,\n  /** @maxLength 5000 */\n    secondary_color?: string,\n\n},\n  /** card_issuing_settings_specs */\n    card_issuing?: {\n  /** settings_terms_of_service_specs */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n\n},\n  /** card_payments_settings_specs */\n    card_payments?: {\n  /** decline_charge_on_specs */\n    decline_on?: {\n    avs_failure?: boolean,\n    cvc_failure?: boolean,\n\n},\n  /** @maxLength 10 */\n    statement_descriptor_prefix?: string,\n    statement_descriptor_prefix_kana?: (string | \"\"),\n    statement_descriptor_prefix_kanji?: (string | \"\"),\n\n},\n  /** payments_settings_specs */\n    payments?: {\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n  /** @maxLength 22 */\n    statement_descriptor_kana?: string,\n  /** @maxLength 22 */\n    statement_descriptor_kanji?: string,\n\n},\n  /** payout_settings_specs */\n    payouts?: {\n    debit_negative_balances?: boolean,\n  /** transfer_schedule_specs */\n    schedule?: {\n    delay_days?: (\"minimum\" | number),\n  /** @maxLength 5000 */\n    interval?: \"daily\" | \"manual\" | \"monthly\" | \"weekly\",\n    monthly_anchor?: number,\n  /** @maxLength 5000 */\n    weekly_anchor?: \"friday\" | \"monday\" | \"saturday\" | \"sunday\" | \"thursday\" | \"tuesday\" | \"wednesday\",\n\n},\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n\n},\n  /** treasury_settings_specs */\n    treasury?: {\n  /** settings_terms_of_service_specs */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n\n},\n\n},\n  /**\n   * tos_acceptance_specs\n   * Details on the account's acceptance of the [Stripe Services Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).\n   */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    service_agreement?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** The type of Stripe account to create. May be one of `custom`, `express` or `standard`. */\n    type?: \"custom\" | \"express\" | \"standard\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Account",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/accounts/{account}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Account",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.\n   * @maxLength 5000\n   */\n    account_token?: string,\n  /**\n   * business_profile_specs\n   * Business information about the account.\n   */\n    business_profile?: {\n  /** @maxLength 4 */\n    mcc?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 40000 */\n    product_description?: string,\n  /** address_specs */\n    support_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    support_email?: string,\n  /** @maxLength 5000 */\n    support_phone?: string,\n    support_url?: (string | \"\"),\n  /** @maxLength 5000 */\n    url?: string,\n\n},\n  /** The business type. */\n    business_type?: \"company\" | \"government_entity\" | \"individual\" | \"non_profit\",\n  /**\n   * capabilities_param\n   * Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.\n   */\n    capabilities?: {\n  /** capability_param */\n    acss_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    affirm_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    afterpay_clearpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    au_becs_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bacs_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bancontact_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    bank_transfer_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    blik_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    boleto_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    card_issuing?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    card_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    cartes_bancaires_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    eps_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    fpx_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    giropay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    grabpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    ideal_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    india_international_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    jcb_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    klarna_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    konbini_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    legacy_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    link_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    oxxo_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"p24_payments\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    paynow_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    promptpay_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    sepa_debit_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    sofort_payments?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"tax_reporting_us_1099_k\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    \"tax_reporting_us_1099_misc\"?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    transfers?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    treasury?: {\n    requested?: boolean,\n\n},\n  /** capability_param */\n    us_bank_account_ach_payments?: {\n    requested?: boolean,\n\n},\n\n},\n  /**\n   * company_specs\n   * Information about the company or business. This field is available for any `business_type`.\n   */\n    company?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    directors_provided?: boolean,\n    executives_provided?: boolean,\n  /** @maxLength 100 */\n    name?: string,\n  /** @maxLength 100 */\n    name_kana?: string,\n  /** @maxLength 100 */\n    name_kanji?: string,\n    owners_provided?: boolean,\n  /** company_ownership_declaration */\n    ownership_declaration?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    registration_number?: string,\n    structure?: \"\" | \"free_zone_establishment\" | \"free_zone_llc\" | \"government_instrumentality\" | \"governmental_unit\" | \"incorporated_non_profit\" | \"limited_liability_partnership\" | \"llc\" | \"multi_member_llc\" | \"private_company\" | \"private_corporation\" | \"private_partnership\" | \"public_company\" | \"public_corporation\" | \"public_partnership\" | \"single_member_llc\" | \"sole_establishment\" | \"sole_proprietorship\" | \"tax_exempt_government_instrumentality\" | \"unincorporated_association\" | \"unincorporated_non_profit\",\n  /** @maxLength 5000 */\n    tax_id?: string,\n  /** @maxLength 5000 */\n    tax_id_registrar?: string,\n  /** @maxLength 5000 */\n    vat_id?: string,\n  /** verification_specs */\n    verification?: {\n  /** verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts). */\n    default_currency?: string,\n  /**\n   * documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    bank_account_ownership_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_license?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_memorandum_of_association?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_ministerial_decree?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_registration_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    company_tax_id_verification?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    proof_of_registration?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A card or bank account to attach to the account for receiving [payouts](https://stripe.com/docs/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary, as documented in the `external_account` parameter for [bank account](https://stripe.com/docs/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](https://stripe.com/docs/api#account_create_bank_account) or [card creation](https://stripe.com/docs/api#account_create_card) APIs.\n   * @maxLength 5000\n   */\n    external_account?: string,\n  /**\n   * individual_specs\n   * Information about the person represented by the account. This field is null unless `business_type` is set to `individual`.\n   */\n    individual?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n    email?: string,\n  /** @maxLength 100 */\n    first_name?: string,\n  /** @maxLength 5000 */\n    first_name_kana?: string,\n  /** @maxLength 5000 */\n    first_name_kanji?: string,\n    full_name_aliases?: ((string)[] | \"\"),\n    gender?: string,\n  /** @maxLength 5000 */\n    id_number?: string,\n  /** @maxLength 5000 */\n    id_number_secondary?: string,\n  /** @maxLength 100 */\n    last_name?: string,\n  /** @maxLength 5000 */\n    last_name_kana?: string,\n  /** @maxLength 5000 */\n    last_name_kanji?: string,\n  /** @maxLength 5000 */\n    maiden_name?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n    phone?: string,\n    political_exposure?: \"existing\" | \"none\",\n  /** address_specs */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    \"ssn_last_4\"?: string,\n  /** person_verification_specs */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * settings_specs_update\n   * Options for customizing how the account functions within Stripe.\n   */\n    settings?: {\n  /** branding_settings_specs */\n    branding?: {\n  /** @maxLength 5000 */\n    icon?: string,\n  /** @maxLength 5000 */\n    logo?: string,\n  /** @maxLength 5000 */\n    primary_color?: string,\n  /** @maxLength 5000 */\n    secondary_color?: string,\n\n},\n  /** card_issuing_settings_specs */\n    card_issuing?: {\n  /** settings_terms_of_service_specs */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n\n},\n  /** card_payments_settings_specs */\n    card_payments?: {\n  /** decline_charge_on_specs */\n    decline_on?: {\n    avs_failure?: boolean,\n    cvc_failure?: boolean,\n\n},\n  /** @maxLength 10 */\n    statement_descriptor_prefix?: string,\n    statement_descriptor_prefix_kana?: (string | \"\"),\n    statement_descriptor_prefix_kanji?: (string | \"\"),\n\n},\n  /** payments_settings_specs */\n    payments?: {\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n  /** @maxLength 22 */\n    statement_descriptor_kana?: string,\n  /** @maxLength 22 */\n    statement_descriptor_kanji?: string,\n\n},\n  /** payout_settings_specs */\n    payouts?: {\n    debit_negative_balances?: boolean,\n  /** transfer_schedule_specs */\n    schedule?: {\n    delay_days?: (\"minimum\" | number),\n  /** @maxLength 5000 */\n    interval?: \"daily\" | \"manual\" | \"monthly\" | \"weekly\",\n    monthly_anchor?: number,\n  /** @maxLength 5000 */\n    weekly_anchor?: \"friday\" | \"monday\" | \"saturday\" | \"sunday\" | \"thursday\" | \"tuesday\" | \"wednesday\",\n\n},\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n\n},\n  /** treasury_settings_specs */\n    treasury?: {\n  /** settings_terms_of_service_specs */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n\n},\n\n},\n  /**\n   * tos_acceptance_specs\n   * Details on the account's acceptance of the [Stripe Services Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).\n   */\n    tos_acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    service_agreement?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Account",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/bank_accounts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency. */\n    default_for_currency?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Please refer to full [documentation](https://stripe.com/docs/api) instead.\n   * @maxLength 5000\n   */\n    external_account?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/accounts/{account}/bank_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/bank_accounts/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/bank_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the person or business that owns the bank account.\n   * @maxLength 5000\n   */\n    account_holder_name?: string,\n  /**\n   * The type of entity that holds the account. This can be either `individual` or `company`.\n   * @maxLength 5000\n   */\n    account_holder_type?: \"\" | \"company\" | \"individual\",\n  /**\n   * The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.\n   * @maxLength 5000\n   */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /**\n   * City/District/Suburb/Town/Village.\n   * @maxLength 5000\n   */\n    address_city?: string,\n  /**\n   * Billing address country, if provided when creating card.\n   * @maxLength 5000\n   */\n    address_country?: string,\n  /**\n   * Address line 1 (Street address/PO Box/Company name).\n   * @maxLength 5000\n   */\n    \"address_line1\"?: string,\n  /**\n   * Address line 2 (Apartment/Suite/Unit/Building).\n   * @maxLength 5000\n   */\n    \"address_line2\"?: string,\n  /**\n   * State/County/Province/Region.\n   * @maxLength 5000\n   */\n    address_state?: string,\n  /**\n   * ZIP or postal code.\n   * @maxLength 5000\n   */\n    address_zip?: string,\n  /** When set to true, this becomes the default external account for its currency. */\n    default_for_currency?: boolean,\n  /**\n   * Two digit number representing the card’s expiration month.\n   * @maxLength 5000\n   */\n    exp_month?: string,\n  /**\n   * Four digit number representing the card’s expiration year.\n   * @maxLength 5000\n   */\n    exp_year?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Cardholder name.\n   * @maxLength 5000\n   */\n    name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/capabilities": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Capability)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/capabilities/{capability}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".capability": {
        "rendered": " capability: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Capability",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/capabilities/{capability}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays. */\n    requested?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".capability": {
        "rendered": " capability: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Capability",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/external_accounts": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards. */\n    data: ((BankAccount | Card))[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/external_accounts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** When set to true, or if this is the first external account added in this currency, this account becomes the default external account for its currency. */\n    default_for_currency?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Please refer to full [documentation](https://stripe.com/docs/api) instead.\n   * @maxLength 5000\n   */\n    external_account?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/accounts/{account}/external_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/external_accounts/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/external_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the person or business that owns the bank account.\n   * @maxLength 5000\n   */\n    account_holder_name?: string,\n  /**\n   * The type of entity that holds the account. This can be either `individual` or `company`.\n   * @maxLength 5000\n   */\n    account_holder_type?: \"\" | \"company\" | \"individual\",\n  /**\n   * The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.\n   * @maxLength 5000\n   */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /**\n   * City/District/Suburb/Town/Village.\n   * @maxLength 5000\n   */\n    address_city?: string,\n  /**\n   * Billing address country, if provided when creating card.\n   * @maxLength 5000\n   */\n    address_country?: string,\n  /**\n   * Address line 1 (Street address/PO Box/Company name).\n   * @maxLength 5000\n   */\n    \"address_line1\"?: string,\n  /**\n   * Address line 2 (Apartment/Suite/Unit/Building).\n   * @maxLength 5000\n   */\n    \"address_line2\"?: string,\n  /**\n   * State/County/Province/Region.\n   * @maxLength 5000\n   */\n    address_state?: string,\n  /**\n   * ZIP or postal code.\n   * @maxLength 5000\n   */\n    address_zip?: string,\n  /** When set to true, this becomes the default external account for its currency. */\n    default_for_currency?: boolean,\n  /**\n   * Two digit number representing the card’s expiration month.\n   * @maxLength 5000\n   */\n    exp_month?: string,\n  /**\n   * Four digit number representing the card’s expiration year.\n   * @maxLength 5000\n   */\n    exp_year?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Cardholder name.\n   * @maxLength 5000\n   */\n    name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExternalAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/login_links": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "LoginLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/people": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Filters on the list of people returned based on the person's relationship to the account's company. */\n relationship?: {  director?: boolean,  executive?: boolean,  owner?: boolean,  representative?: boolean, }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship": {
        "rendered": "\n/** Filters on the list of people returned based on the person's relationship to the account's company. */\n relationship?: {  director?: boolean,  executive?: boolean,  owner?: boolean,  representative?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.director": {
        "rendered": " director?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.executive": {
        "rendered": " executive?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.owner": {
        "rendered": " owner?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.representative": {
        "rendered": " representative?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Person)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/people": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * address_specs\n   * The person's address.\n   */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * japan_address_kana_specs\n   * The Kana variation of the person's address (Japan only).\n   */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /**\n   * japan_address_kanji_specs\n   * The Kanji variation of the person's address (Japan only).\n   */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** The person's date of birth. */\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n  /**\n   * person_documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    company_authorization?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    passport?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    visa?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The person's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The person's first name.\n   * @maxLength 5000\n   */\n    first_name?: string,\n  /**\n   * The Kana variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kana?: string,\n  /**\n   * The Kanji variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kanji?: string,\n  /** A list of alternate names or aliases that the person is known by. */\n    full_name_aliases?: ((string)[] | \"\"),\n  /** The person's gender (International regulations require either \"male\" or \"female\"). */\n    gender?: string,\n  /**\n   * The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number?: string,\n  /**\n   * The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number_secondary?: string,\n  /**\n   * The person's last name.\n   * @maxLength 5000\n   */\n    last_name?: string,\n  /**\n   * The Kana variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kana?: string,\n  /**\n   * The Kanji variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kanji?: string,\n  /**\n   * The person's maiden name.\n   * @maxLength 5000\n   */\n    maiden_name?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.\n   * @maxLength 5000\n   */\n    nationality?: string,\n  /**\n   * A [person token](https://stripe.com/docs/connect/account-tokens), used to securely provide details to the person.\n   * @maxLength 5000\n   */\n    person_token?: string,\n  /** The person's phone number. */\n    phone?: string,\n  /**\n   * Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.\n   * @maxLength 5000\n   */\n    political_exposure?: string,\n  /**\n   * address_specs\n   * The person's registered address.\n   */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * relationship_specs\n   * The relationship that this person has with the account's legal entity.\n   */\n    relationship?: {\n    director?: boolean,\n    executive?: boolean,\n    owner?: boolean,\n    percent_ownership?: (number | \"\"),\n    representative?: boolean,\n  /** @maxLength 5000 */\n    title?: string,\n\n},\n  /** The last four digits of the person's Social Security number (U.S. only). */\n    \"ssn_last_4\"?: string,\n  /**\n   * person_verification_specs\n   * The person's verification status.\n   */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/accounts/{account}/people/{person}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedPerson",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/people/{person}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/people/{person}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * address_specs\n   * The person's address.\n   */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * japan_address_kana_specs\n   * The Kana variation of the person's address (Japan only).\n   */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /**\n   * japan_address_kanji_specs\n   * The Kanji variation of the person's address (Japan only).\n   */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** The person's date of birth. */\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n  /**\n   * person_documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    company_authorization?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    passport?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    visa?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The person's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The person's first name.\n   * @maxLength 5000\n   */\n    first_name?: string,\n  /**\n   * The Kana variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kana?: string,\n  /**\n   * The Kanji variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kanji?: string,\n  /** A list of alternate names or aliases that the person is known by. */\n    full_name_aliases?: ((string)[] | \"\"),\n  /** The person's gender (International regulations require either \"male\" or \"female\"). */\n    gender?: string,\n  /**\n   * The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number?: string,\n  /**\n   * The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number_secondary?: string,\n  /**\n   * The person's last name.\n   * @maxLength 5000\n   */\n    last_name?: string,\n  /**\n   * The Kana variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kana?: string,\n  /**\n   * The Kanji variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kanji?: string,\n  /**\n   * The person's maiden name.\n   * @maxLength 5000\n   */\n    maiden_name?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.\n   * @maxLength 5000\n   */\n    nationality?: string,\n  /**\n   * A [person token](https://stripe.com/docs/connect/account-tokens), used to securely provide details to the person.\n   * @maxLength 5000\n   */\n    person_token?: string,\n  /** The person's phone number. */\n    phone?: string,\n  /**\n   * Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.\n   * @maxLength 5000\n   */\n    political_exposure?: string,\n  /**\n   * address_specs\n   * The person's registered address.\n   */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * relationship_specs\n   * The relationship that this person has with the account's legal entity.\n   */\n    relationship?: {\n    director?: boolean,\n    executive?: boolean,\n    owner?: boolean,\n    percent_ownership?: (number | \"\"),\n    representative?: boolean,\n  /** @maxLength 5000 */\n    title?: string,\n\n},\n  /** The last four digits of the person's Social Security number (U.S. only). */\n    \"ssn_last_4\"?: string,\n  /**\n   * person_verification_specs\n   * The person's verification status.\n   */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/persons": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Filters on the list of people returned based on the person's relationship to the account's company. */\n relationship?: {  director?: boolean,  executive?: boolean,  owner?: boolean,  representative?: boolean, }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship": {
        "rendered": "\n/** Filters on the list of people returned based on the person's relationship to the account's company. */\n relationship?: {  director?: boolean,  executive?: boolean,  owner?: boolean,  representative?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.director": {
        "rendered": " director?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.executive": {
        "rendered": " executive?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.owner": {
        "rendered": " owner?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.relationship.representative": {
        "rendered": " representative?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Person)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/persons": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * address_specs\n   * The person's address.\n   */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * japan_address_kana_specs\n   * The Kana variation of the person's address (Japan only).\n   */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /**\n   * japan_address_kanji_specs\n   * The Kanji variation of the person's address (Japan only).\n   */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** The person's date of birth. */\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n  /**\n   * person_documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    company_authorization?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    passport?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    visa?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The person's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The person's first name.\n   * @maxLength 5000\n   */\n    first_name?: string,\n  /**\n   * The Kana variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kana?: string,\n  /**\n   * The Kanji variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kanji?: string,\n  /** A list of alternate names or aliases that the person is known by. */\n    full_name_aliases?: ((string)[] | \"\"),\n  /** The person's gender (International regulations require either \"male\" or \"female\"). */\n    gender?: string,\n  /**\n   * The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number?: string,\n  /**\n   * The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number_secondary?: string,\n  /**\n   * The person's last name.\n   * @maxLength 5000\n   */\n    last_name?: string,\n  /**\n   * The Kana variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kana?: string,\n  /**\n   * The Kanji variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kanji?: string,\n  /**\n   * The person's maiden name.\n   * @maxLength 5000\n   */\n    maiden_name?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.\n   * @maxLength 5000\n   */\n    nationality?: string,\n  /**\n   * A [person token](https://stripe.com/docs/connect/account-tokens), used to securely provide details to the person.\n   * @maxLength 5000\n   */\n    person_token?: string,\n  /** The person's phone number. */\n    phone?: string,\n  /**\n   * Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.\n   * @maxLength 5000\n   */\n    political_exposure?: string,\n  /**\n   * address_specs\n   * The person's registered address.\n   */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * relationship_specs\n   * The relationship that this person has with the account's legal entity.\n   */\n    relationship?: {\n    director?: boolean,\n    executive?: boolean,\n    owner?: boolean,\n    percent_ownership?: (number | \"\"),\n    representative?: boolean,\n  /** @maxLength 5000 */\n    title?: string,\n\n},\n  /** The last four digits of the person's Social Security number (U.S. only). */\n    \"ssn_last_4\"?: string,\n  /**\n   * person_verification_specs\n   * The person's verification status.\n   */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/accounts/{account}/persons/{person}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedPerson",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/accounts/{account}/persons/{person}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/persons/{person}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * address_specs\n   * The person's address.\n   */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * japan_address_kana_specs\n   * The Kana variation of the person's address (Japan only).\n   */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /**\n   * japan_address_kanji_specs\n   * The Kanji variation of the person's address (Japan only).\n   */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** The person's date of birth. */\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n  /**\n   * person_documents_specs\n   * Documents that may be submitted to satisfy various informational requests.\n   */\n    documents?: {\n  /** documents_param */\n    company_authorization?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    passport?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    visa?: {\n    files?: (string)[],\n\n},\n\n},\n  /** The person's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The person's first name.\n   * @maxLength 5000\n   */\n    first_name?: string,\n  /**\n   * The Kana variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kana?: string,\n  /**\n   * The Kanji variation of the person's first name (Japan only).\n   * @maxLength 5000\n   */\n    first_name_kanji?: string,\n  /** A list of alternate names or aliases that the person is known by. */\n    full_name_aliases?: ((string)[] | \"\"),\n  /** The person's gender (International regulations require either \"male\" or \"female\"). */\n    gender?: string,\n  /**\n   * The person's ID number, as appropriate for their country. For example, a social security number in the U.S., social insurance number in Canada, etc. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number?: string,\n  /**\n   * The person's secondary ID number, as appropriate for their country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token provided by Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).\n   * @maxLength 5000\n   */\n    id_number_secondary?: string,\n  /**\n   * The person's last name.\n   * @maxLength 5000\n   */\n    last_name?: string,\n  /**\n   * The Kana variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kana?: string,\n  /**\n   * The Kanji variation of the person's last name (Japan only).\n   * @maxLength 5000\n   */\n    last_name_kanji?: string,\n  /**\n   * The person's maiden name.\n   * @maxLength 5000\n   */\n    maiden_name?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The country where the person is a national. Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)), or \"XX\" if unavailable.\n   * @maxLength 5000\n   */\n    nationality?: string,\n  /**\n   * A [person token](https://stripe.com/docs/connect/account-tokens), used to securely provide details to the person.\n   * @maxLength 5000\n   */\n    person_token?: string,\n  /** The person's phone number. */\n    phone?: string,\n  /**\n   * Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.\n   * @maxLength 5000\n   */\n    political_exposure?: string,\n  /**\n   * address_specs\n   * The person's registered address.\n   */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * relationship_specs\n   * The relationship that this person has with the account's legal entity.\n   */\n    relationship?: {\n    director?: boolean,\n    executive?: boolean,\n    owner?: boolean,\n    percent_ownership?: (number | \"\"),\n    representative?: boolean,\n  /** @maxLength 5000 */\n    title?: string,\n\n},\n  /** The last four digits of the person's Social Security number (U.S. only). */\n    \"ssn_last_4\"?: string,\n  /**\n   * person_verification_specs\n   * The person's verification status.\n   */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".person": {
        "rendered": " person: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Person",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/accounts/{account}/reject": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The reason for rejecting the account. Can be `fraud`, `terms_of_service`, or `other`.\n   * @maxLength 5000\n   */\n    reason: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Account",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/apple_pay/domains": {
    "query": {
      ".query": {
        "rendered": " query: {  domain_name?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.domain_name": {
        "rendered": " domain_name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ApplePayDomain)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/apple_pay/domains\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/apple_pay/domains": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n    domain_name: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "ApplePayDomain",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/apple_pay/domains/{domain}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".domain": {
        "rendered": " domain: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedApplePayDomain",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/apple_pay/domains/{domain}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".domain": {
        "rendered": " domain: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ApplePayDomain",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/application_fees": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return application fees for the charge specified by this charge ID. */\n charge?: string,  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.charge": {
        "rendered": "\n/** Only return application fees for the charge specified by this charge ID. */\n charge?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ApplicationFee)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/application_fees\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/application_fees/{fee}/refunds/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".fee": {
        "rendered": " fee: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FeeRefund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/application_fees/{fee}/refunds/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".fee": {
        "rendered": " fee: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FeeRefund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/application_fees/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ApplicationFee",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/application_fees/{id}/refund": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n    amount?: number,\n  /** @maxLength 5000 */\n    directive?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ApplicationFee",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/application_fees/{id}/refunds": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FeeRefund)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/application_fees/{id}/refunds": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer, in _cents (or local equivalent)_, representing how much of this fee to refund. Can refund only up to the remaining unrefunded amount of the fee. */\n    amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FeeRefund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/apps/secrets": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user. */\n scope: {  type?: \"account\" | \"user\",  user?: string, }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.scope": {
        "rendered": "\n/** Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user. */\n scope: {  type?: \"account\" | \"user\",  user?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope.type": {
        "rendered": " type?: \"account\" | \"user\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope.user": {
        "rendered": " user?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (AppsSecret)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/apps/secrets\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/apps/secrets": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The Unix timestamp for the expiry time of the secret, after which the secret deletes.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /**\n   * A name for the secret that's unique within the scope.\n   * @maxLength 5000\n   */\n    name: string,\n  /**\n   * The plaintext secret value to be stored.\n   * @maxLength 5000\n   */\n    payload: string,\n  /**\n   * scope_param\n   * Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n   */\n    scope: {\n    type: \"account\" | \"user\",\n  /** @maxLength 5000 */\n    user?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "AppsSecret",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/apps/secrets/delete": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A name for the secret that's unique within the scope.\n   * @maxLength 5000\n   */\n    name: string,\n  /**\n   * scope_param\n   * Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n   */\n    scope: {\n    type: \"account\" | \"user\",\n  /** @maxLength 5000 */\n    user?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "AppsSecret",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/apps/secrets/find": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A name for the secret that's unique within the scope. */\n name: string, \n/** Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user. */\n scope: {  type?: \"account\" | \"user\",  user?: string, }, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.name": {
        "rendered": "\n/** A name for the secret that's unique within the scope. */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.scope": {
        "rendered": "\n/** Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user. */\n scope: {  type?: \"account\" | \"user\",  user?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope.type": {
        "rendered": " type?: \"account\" | \"user\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope.user": {
        "rendered": " user?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "AppsSecret",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/balance": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Balance",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/balance/history": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n currency?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID. */\n payout?: string, \n/** Only returns the original transaction. */\n source?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. */\n type?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.currency": {
        "rendered": "\n/** Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payout": {
        "rendered": "\n/** For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID. */\n payout?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.source": {
        "rendered": "\n/** Only returns the original transaction. */\n source?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. */\n type?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (BalanceTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/balance_transactions\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/balance/history/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/balance_transactions": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n currency?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID. */\n payout?: string, \n/** Only returns the original transaction. */\n source?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. */\n type?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.currency": {
        "rendered": "\n/** Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payout": {
        "rendered": "\n/** For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID. */\n payout?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.source": {
        "rendered": "\n/** Only returns the original transaction. */\n source?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. */\n type?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (BalanceTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/balance_transactions\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/balance_transactions/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/billing_portal/configurations": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations). */\n active?: boolean, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration). */\n is_default?: boolean, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.active": {
        "rendered": "\n/** Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.is_default": {
        "rendered": "\n/** Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration). */\n is_default?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (BillingPortalConfiguration)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/billing_portal/configurations\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/billing_portal/configurations": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * business_profile_create_param\n   * The business information shown to customers in the portal.\n   */\n    business_profile: {\n  /** @maxLength 60 */\n    headline?: string,\n    privacy_policy_url?: string,\n    terms_of_service_url?: string,\n\n},\n  /** The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session. */\n    default_return_url?: (string | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * features_creation_param\n   * Information about the features available in the portal.\n   */\n    features: {\n  /** customer_update_creation_param */\n    customer_update?: {\n    allowed_updates?: ((\"address\" | \"email\" | \"name\" | \"phone\" | \"shipping\" | \"tax_id\")[] | \"\"),\n    enabled: boolean,\n\n},\n  /** invoice_list_param */\n    invoice_history?: {\n    enabled: boolean,\n\n},\n  /** payment_method_update_param */\n    payment_method_update?: {\n    enabled: boolean,\n\n},\n  /** subscription_cancel_creation_param */\n    subscription_cancel?: {\n  /** subscription_cancellation_reason_creation_param */\n    cancellation_reason?: {\n    enabled: boolean,\n    options: ((\"customer_service\" | \"low_quality\" | \"missing_features\" | \"other\" | \"switched_service\" | \"too_complex\" | \"too_expensive\" | \"unused\")[] | \"\"),\n\n},\n    enabled: boolean,\n    mode?: \"at_period_end\" | \"immediately\",\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n\n},\n  /** subscription_pause_param */\n    subscription_pause?: {\n    enabled?: boolean,\n\n},\n  /** subscription_update_creation_param */\n    subscription_update?: {\n    default_allowed_updates: ((\"price\" | \"promotion_code\" | \"quantity\")[] | \"\"),\n    enabled: boolean,\n    products: (({\n    prices: (string)[],\n  /** @maxLength 5000 */\n    product: string,\n\n})[] | \"\"),\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n\n},\n\n},\n  /**\n   * login_page_create_param\n   * The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).\n   */\n    login_page?: {\n    enabled: boolean,\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BillingPortalConfiguration",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/billing_portal/configurations/{configuration}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".configuration": {
        "rendered": " configuration: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BillingPortalConfiguration",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/billing_portal/configurations/{configuration}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the configuration is active and can be used to create portal sessions. */\n    active?: boolean,\n  /**\n   * business_profile_update_param\n   * The business information shown to customers in the portal.\n   */\n    business_profile?: {\n  /** @maxLength 60 */\n    headline?: string,\n    privacy_policy_url?: (string | \"\"),\n    terms_of_service_url?: (string | \"\"),\n\n},\n  /** The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session. */\n    default_return_url?: (string | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * features_updating_param\n   * Information about the features available in the portal.\n   */\n    features?: {\n  /** customer_update_updating_param */\n    customer_update?: {\n    allowed_updates?: ((\"address\" | \"email\" | \"name\" | \"phone\" | \"shipping\" | \"tax_id\")[] | \"\"),\n    enabled?: boolean,\n\n},\n  /** invoice_list_param */\n    invoice_history?: {\n    enabled: boolean,\n\n},\n  /** payment_method_update_param */\n    payment_method_update?: {\n    enabled: boolean,\n\n},\n  /** subscription_cancel_updating_param */\n    subscription_cancel?: {\n  /** subscription_cancellation_reason_updating_param */\n    cancellation_reason?: {\n    enabled: boolean,\n    options?: ((\"customer_service\" | \"low_quality\" | \"missing_features\" | \"other\" | \"switched_service\" | \"too_complex\" | \"too_expensive\" | \"unused\")[] | \"\"),\n\n},\n    enabled?: boolean,\n    mode?: \"at_period_end\" | \"immediately\",\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n\n},\n  /** subscription_pause_param */\n    subscription_pause?: {\n    enabled?: boolean,\n\n},\n  /** subscription_update_updating_param */\n    subscription_update?: {\n    default_allowed_updates?: ((\"price\" | \"promotion_code\" | \"quantity\")[] | \"\"),\n    enabled?: boolean,\n    products?: (({\n    prices: (string)[],\n  /** @maxLength 5000 */\n    product: string,\n\n})[] | \"\"),\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n\n},\n\n},\n  /**\n   * login_page_update_param\n   * The hosted login page for this configuration. Learn more about the portal login page in our [integration docs](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal#share).\n   */\n    login_page?: {\n    enabled: boolean,\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".configuration": {
        "rendered": " configuration: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BillingPortalConfiguration",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/billing_portal/sessions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of an existing [configuration](https://stripe.com/docs/api/customer_portal/configuration) to use for this session, describing its functionality and features. If not specified, the session uses the default configuration.\n   * @maxLength 5000\n   */\n    configuration?: string,\n  /**\n   * The ID of an existing customer.\n   * @maxLength 5000\n   */\n    customer: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * flow_data_param\n   * Information about a specific flow for the customer to go through. See the [docs](https://stripe.com/docs/customer-management/portal-deep-links) to learn more about using customer portal deep links and flows.\n   */\n    flow_data?: {\n  /** flow_data_after_completion_param */\n    after_completion?: {\n  /** after_completion_hosted_confirmation_param */\n    hosted_confirmation?: {\n  /** @maxLength 500 */\n    custom_message?: string,\n\n},\n  /** after_completion_redirect_param */\n    redirect?: {\n    return_url: string,\n\n},\n    type: \"hosted_confirmation\" | \"portal_homepage\" | \"redirect\",\n\n},\n  /** flow_data_subscription_cancel_param */\n    subscription_cancel?: {\n  /** @maxLength 5000 */\n    subscription: string,\n\n},\n    type: \"payment_method_update\" | \"subscription_cancel\",\n\n},\n  /** The IETF language tag of the locale Customer Portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used. */\n    locale?: \"auto\" | \"bg\" | \"cs\" | \"da\" | \"de\" | \"el\" | \"en\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IE\" | \"en-IN\" | \"en-NZ\" | \"en-SG\" | \"es\" | \"es-419\" | \"et\" | \"fi\" | \"fil\" | \"fr\" | \"fr-CA\" | \"hr\" | \"hu\" | \"id\" | \"it\" | \"ja\" | \"ko\" | \"lt\" | \"lv\" | \"ms\" | \"mt\" | \"nb\" | \"nl\" | \"pl\" | \"pt\" | \"pt-BR\" | \"ro\" | \"ru\" | \"sk\" | \"sl\" | \"sv\" | \"th\" | \"tr\" | \"vi\" | \"zh\" | \"zh-HK\" | \"zh-TW\",\n  /** The `on_behalf_of` account to use for this session. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/charges-transfers#on-behalf-of). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays. */\n    on_behalf_of?: string,\n  /** The default URL to redirect customers to when they click on the portal's link to return to your website. */\n    return_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BillingPortalSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return charges for the customer specified by this customer ID. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return charges for this transfer group. */\n transfer_group?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return charges for the customer specified by this customer ID. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_intent": {
        "rendered": "\n/** Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.transfer_group": {
        "rendered": "\n/** Only return charges for this transfer group. */\n transfer_group?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Charge)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/charges\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99). */\n    amount?: number,\n    application_fee?: number,\n  /** A fee in cents (or local equivalent) that will be applied to the charge and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the `Stripe-Account` header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees). */\n    application_fee_amount?: number,\n  /** Whether to immediately capture the charge. Defaults to `true`. When `false`, the charge issues an authorization (or pre-authorization), and will need to be [captured](https://stripe.com/docs/api#capture_charge) later. Uncaptured charges expire after a set number of days (7 by default). For more information, see the [authorizing charges and settling later](https://stripe.com/docs/charges/placing-a-hold) documentation. */\n    capture?: boolean,\n  /** A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js). */\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n  /** @maxLength 5000 */\n    object?: \"card\",\n\n} | string),\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * The ID of an existing customer that will be charged in this request.\n   * @maxLength 500\n   */\n    customer?: string,\n  /**\n   * An arbitrary string which you can attach to a `Charge` object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.\n   * @maxLength 40000\n   */\n    description?: string,\n    destination?: ({\n  /** @maxLength 5000 */\n    account: string,\n    amount?: number,\n\n} | string),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The Stripe account ID for which these funds are intended. Automatically set if you use the `destination` parameter. For details, see [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/charges-transfers#on-behalf-of).\n   * @maxLength 5000\n   */\n    on_behalf_of?: string,\n  /**\n   * radar_options\n   * Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.\n   */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** The email address to which this charge's [receipt](https://stripe.com/docs/dashboard/receipts) will be sent. The receipt will not be sent until the charge is paid, and no receipts will be sent for test mode charges. If this charge is for a [Customer](https://stripe.com/docs/api/customers/object), the email address specified here will override the customer's email address. If `receipt_email` is specified for a charge in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails). */\n    receipt_email?: string,\n  /**\n   * optional_fields_shipping\n   * Shipping information for the charge. Helps prevent fraud on charges for physical goods.\n   */\n    shipping?: {\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n  /**\n   * A payment source to be charged. This can be the ID of a [card](https://stripe.com/docs/api#cards) (i.e., credit or debit card), a [bank account](https://stripe.com/docs/api#bank_accounts), a [source](https://stripe.com/docs/api#sources), a [token](https://stripe.com/docs/api#tokens), or a [connected account](https://stripe.com/docs/connect/account-debits#charging-a-connected-account). For certain sources---namely, [cards](https://stripe.com/docs/api#cards), [bank accounts](https://stripe.com/docs/api#bank_accounts), and attached [sources](https://stripe.com/docs/api#sources)---you must also pass the ID of the associated customer.\n   * @maxLength 5000\n   */\n    source?: string,\n  /**\n   * For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.\n   * @maxLength 22\n   */\n    statement_descriptor_suffix?: string,\n  /**\n   * transfer_data_specs\n   * An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.\n   */\n    transfer_data?: {\n    amount?: number,\n  /** @maxLength 5000 */\n    destination: string,\n\n},\n  /** A string that identifies this transaction as part of a group. For details, see [Grouping transactions](https://stripe.com/docs/connect/charges-transfers#transfer-options). */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Charge",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for charges](https://stripe.com/docs/search#query-fields-for-charges). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for charges](https://stripe.com/docs/search#query-fields-for-charges). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Charge)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges/{charge}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Charge",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The ID of an existing customer that will be associated with this request. This field may only be updated if there is no existing associated customer with this charge.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string which you can attach to a charge object. It is displayed when in the web interface alongside the charge. Note that if you use Stripe to send automatic email receipts to your customers, your receipt emails will include the `description` of the charge(s) that they are describing.\n   * @maxLength 40000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * fraud_details\n   * A set of key-value pairs you can attach to a charge giving information about its riskiness. If you believe a charge is fraudulent, include a `user_report` key with a value of `fraudulent`. If you believe a charge is safe, include a `user_report` key with a value of `safe`. Stripe will use the information you send to improve our fraud detection algorithms.\n   */\n    fraud_details?: {\n  /** @maxLength 5000 */\n    user_report: \"\" | \"fraudulent\" | \"safe\",\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * This is the email address that the receipt for this charge will be sent to. If this field is updated, then a new email receipt will be sent to the updated address.\n   * @maxLength 5000\n   */\n    receipt_email?: string,\n  /**\n   * optional_fields_shipping\n   * Shipping information for the charge. Helps prevent fraud on charges for physical goods.\n   */\n    shipping?: {\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n  /** A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details. */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Charge",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/capture": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The amount to capture, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. */\n    amount?: number,\n  /** An application fee to add on to this charge. */\n    application_fee?: number,\n  /** An application fee amount to add on to this charge, which must be less than or equal to the original amount. */\n    application_fee_amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The email address to send this charge's receipt to. This will override the previously-specified email address for this charge, if one was set. Receipts will not be sent in test mode. */\n    receipt_email?: string,\n  /**\n   * For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.\n   * @maxLength 22\n   */\n    statement_descriptor_suffix?: string,\n  /**\n   * transfer_data_specs\n   * An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.\n   */\n    transfer_data?: {\n    amount?: number,\n\n},\n  /** A string that identifies this transaction as part of a group. `transfer_group` may only be provided if it has not been set. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details. */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Charge",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges/{charge}/dispute": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/dispute": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * dispute_evidence_params\n   * Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.\n   */\n    evidence?: {\n  /** @maxLength 20000 */\n    access_activity_log?: string,\n  /** @maxLength 5000 */\n    billing_address?: string,\n    cancellation_policy?: string,\n  /** @maxLength 20000 */\n    cancellation_policy_disclosure?: string,\n  /** @maxLength 20000 */\n    cancellation_rebuttal?: string,\n    customer_communication?: string,\n  /** @maxLength 5000 */\n    customer_email_address?: string,\n  /** @maxLength 5000 */\n    customer_name?: string,\n  /** @maxLength 5000 */\n    customer_purchase_ip?: string,\n    customer_signature?: string,\n    duplicate_charge_documentation?: string,\n  /** @maxLength 20000 */\n    duplicate_charge_explanation?: string,\n  /** @maxLength 5000 */\n    duplicate_charge_id?: string,\n  /** @maxLength 20000 */\n    product_description?: string,\n    receipt?: string,\n    refund_policy?: string,\n  /** @maxLength 20000 */\n    refund_policy_disclosure?: string,\n  /** @maxLength 20000 */\n    refund_refusal_explanation?: string,\n  /** @maxLength 5000 */\n    service_date?: string,\n    service_documentation?: string,\n  /** @maxLength 5000 */\n    shipping_address?: string,\n  /** @maxLength 5000 */\n    shipping_carrier?: string,\n  /** @maxLength 5000 */\n    shipping_date?: string,\n    shipping_documentation?: string,\n  /** @maxLength 5000 */\n    shipping_tracking_number?: string,\n    uncategorized_file?: string,\n  /** @maxLength 20000 */\n    uncategorized_text?: string,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default). */\n    submit?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/dispute/close": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/refund": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n    amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n    instructions_email?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** @maxLength 5000 */\n    payment_intent?: string,\n  /** @maxLength 5000 */\n    reason?: \"duplicate\" | \"fraudulent\" | \"requested_by_customer\",\n    refund_application_fee?: boolean,\n    reverse_transfer?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Charge",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges/{charge}/refunds": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Refund)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/refunds": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer representing how much to refund. */\n    amount?: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * Customer whose customer balance to refund from.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Address to send refund email, use customer email if not specified */\n    instructions_email?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Origin of the refund */\n    origin?: \"customer_balance\",\n  /** @maxLength 5000 */\n    payment_intent?: string,\n  /** @maxLength 5000 */\n    reason?: \"duplicate\" | \"fraudulent\" | \"requested_by_customer\",\n    refund_application_fee?: boolean,\n    reverse_transfer?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/charges/{charge}/refunds/{refund}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/charges/{charge}/refunds/{refund}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".charge": {
        "rendered": " charge: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/checkout/sessions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return the Checkout Sessions for the Customer specified. */\n customer?: string, \n/** Only return the Checkout Sessions for the Customer details specified. */\n customer_details: {  email?: string, }, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return the Checkout Session for the PaymentIntent specified. */\n payment_intent?: string, \n/** Only return the Checkout Sessions for the Payment Link specified. */\n payment_link?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return the Checkout Session for the subscription specified. */\n subscription?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer": {
        "rendered": "\n/** Only return the Checkout Sessions for the Customer specified. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer_details": {
        "rendered": "\n/** Only return the Checkout Sessions for the Customer details specified. */\n customer_details: {  email?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer_details.email": {
        "rendered": " email?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_intent": {
        "rendered": "\n/** Only return the Checkout Session for the PaymentIntent specified. */\n payment_intent?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_link": {
        "rendered": "\n/** Only return the Checkout Sessions for the Payment Link specified. */\n payment_link?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription": {
        "rendered": "\n/** Only return the Checkout Session for the subscription specified. */\n subscription?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (CheckoutSession)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/checkout/sessions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * after_expiration_params\n   * Configure actions after a Checkout Session has expired.\n   */\n    after_expiration?: {\n  /** recovery_params */\n    recovery?: {\n    allow_promotion_codes?: boolean,\n    enabled: boolean,\n\n},\n\n},\n  /** Enables user redeemable promotion codes. */\n    allow_promotion_codes?: boolean,\n  /**\n   * automatic_tax_params\n   * Settings for automatic tax lookup for this session and resulting payments, invoices, and subscriptions.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Specify whether Checkout should collect the customer's billing address. */\n    billing_address_collection?: \"auto\" | \"required\",\n  /**\n   * If set, Checkout displays a back button and customers will be directed to this URL if they decide to cancel payment and return to your website.\n   * @maxLength 5000\n   */\n    cancel_url?: string,\n  /**\n   * A unique string to reference the Checkout Session. This can be a\n   * customer ID, a cart ID, or similar, and can be used to reconcile the\n   * session with your internal systems.\n   * @maxLength 200\n   */\n    client_reference_id?: string,\n  /**\n   * consent_collection_params\n   * Configure fields for the Checkout Session to gather active consent from customers.\n   */\n    consent_collection?: {\n    promotions?: \"auto\" | \"none\",\n    terms_of_service?: \"none\" | \"required\",\n\n},\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /** Collect additional information from your customer using custom fields. Up to 2 fields are supported. */\n    custom_fields?: ({\n  /** custom_field_dropdown_param */\n    dropdown?: {\n    options: ({\n  /** @maxLength 100 */\n    label: string,\n  /** @maxLength 100 */\n    value: string,\n\n})[],\n\n},\n  /** @maxLength 200 */\n    key: string,\n  /** custom_field_label_param */\n    label: {\n  /** @maxLength 50 */\n    custom: string,\n    type: \"custom\",\n\n},\n    optional?: boolean,\n    type: \"dropdown\" | \"numeric\" | \"text\",\n\n})[],\n  /**\n   * custom_text_param\n   * Display additional text for your customers using custom text.\n   */\n    custom_text?: {\n    shipping_address?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n    submit?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n\n},\n  /**\n   * ID of an existing Customer, if one exists. In `payment` mode, the customer’s most recent card\n   * payment method will be used to prefill the email, name, card details, and billing address\n   * on the Checkout page. In `subscription` mode, the customer’s [default payment method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method)\n   * will be used if it’s a card, and otherwise the most recent card will be used. A valid billing address, billing name and billing email are required on the payment method for Checkout to prefill the customer's card details.\n   * \n   * If the Customer already has a valid [email](https://stripe.com/docs/api/customers/object#customer_object-email) set, the email will be prefilled and not editable in Checkout.\n   * If the Customer does not have a valid `email`, Checkout will set the email entered during the session on the Customer.\n   * \n   * If blank for Checkout Sessions in `payment` or `subscription` mode, Checkout will create a new Customer object based on information provided during the payment flow.\n   * \n   * You can set [`payment_intent_data.setup_future_usage`](https://stripe.com/docs/api/checkout/sessions/create#create_checkout_session-payment_intent_data-setup_future_usage) to have Checkout automatically attach the payment method to the Customer you pass in for future reuse.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * Configure whether a Checkout Session creates a [Customer](https://stripe.com/docs/api/customers) during Session confirmation.\n   * \n   * When a Customer is not created, you can still retrieve email, address, and other customer data entered in Checkout\n   * with [customer_details](https://stripe.com/docs/api/checkout/sessions/object#checkout_session_object-customer_details).\n   * \n   * Sessions that don't create Customers instead are grouped by [guest customers](https://stripe.com/docs/payments/checkout/guest-customers)\n   * in the Dashboard. Promotion codes limited to first time customers will return invalid for these Sessions.\n   * \n   * Can only be set in `payment` and `setup` mode.\n   */\n    customer_creation?: \"always\" | \"if_required\",\n  /**\n   * If provided, this value will be used when the Customer object is created.\n   * If not provided, customers will be asked to enter their email address.\n   * Use this parameter to prefill customer data if you already have an email\n   * on file. To access information about the customer once a session is\n   * complete, use the `customer` field.\n   */\n    customer_email?: string,\n  /**\n   * customer_update_params\n   * Controls what fields on Customer can be updated by the Checkout Session. Can only be provided when `customer` is provided.\n   */\n    customer_update?: {\n    address?: \"auto\" | \"never\",\n    name?: \"auto\" | \"never\",\n    shipping?: \"auto\" | \"never\",\n\n},\n  /** The coupon or promotion code to apply to this Session. Currently, only up to one may be specified. */\n    discounts?: ({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    promotion_code?: string,\n\n})[],\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The Epoch time in seconds at which the Checkout Session will expire. It can be anywhere from 30 minutes to 24 hours after Checkout Session creation. By default, this value is 24 hours from creation.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /**\n   * invoice_creation_params\n   * Generate a post-purchase Invoice for one-time payments.\n   */\n    invoice_creation?: {\n    enabled: boolean,\n  /** invoice_data_params */\n    invoice_data?: {\n    account_tax_ids?: ((string)[] | \"\"),\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** @maxLength 1500 */\n    description?: string,\n  /** @maxLength 5000 */\n    footer?: string,\n    metadata?: hasuraSdk.JSONValue,\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n\n},\n\n},\n  /**\n   * A list of items the customer is purchasing. Use this parameter to pass one-time or recurring [Prices](https://stripe.com/docs/api/prices).\n   * \n   * For `payment` mode, there is a maximum of 100 line items, however it is recommended to consolidate line items if there are more than a few dozen.\n   * \n   * For `subscription` mode, there is a maximum of 20 line items with recurring Prices and 20 line items with one-time Prices. Line items with one-time Prices will be on the initial invoice only.\n   */\n    line_items?: ({\n  /** adjustable_quantity_params */\n    adjustable_quantity?: {\n    enabled: boolean,\n    maximum?: number,\n    minimum?: number,\n\n},\n    dynamic_tax_rates?: (string)[],\n  /** @maxLength 5000 */\n    price?: string,\n  /** price_data_with_product_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product?: string,\n  /** product_data */\n    product_data?: {\n  /** @maxLength 40000 */\n    description?: string,\n    images?: (string)[],\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    tax_code?: string,\n\n},\n  /** recurring_adhoc */\n    recurring?: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: (string)[],\n\n})[],\n  /** The IETF language tag of the locale Checkout is displayed in. If blank or `auto`, the browser's locale is used. */\n    locale?: \"auto\" | \"bg\" | \"cs\" | \"da\" | \"de\" | \"el\" | \"en\" | \"en-GB\" | \"es\" | \"es-419\" | \"et\" | \"fi\" | \"fil\" | \"fr\" | \"fr-CA\" | \"hr\" | \"hu\" | \"id\" | \"it\" | \"ja\" | \"ko\" | \"lt\" | \"lv\" | \"ms\" | \"mt\" | \"nb\" | \"nl\" | \"pl\" | \"pt\" | \"pt-BR\" | \"ro\" | \"ru\" | \"sk\" | \"sl\" | \"sv\" | \"th\" | \"tr\" | \"vi\" | \"zh\" | \"zh-HK\" | \"zh-TW\",\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The mode of the Checkout Session. Pass `subscription` if the Checkout Session includes at least one recurring item. */\n    mode?: \"payment\" | \"setup\" | \"subscription\",\n  /**\n   * payment_intent_data_params\n   * A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.\n   */\n    payment_intent_data?: {\n    application_fee_amount?: number,\n    capture_method?: \"automatic\" | \"manual\",\n  /** @maxLength 1000 */\n    description?: string,\n    metadata?: hasuraSdk.JSONValue,\n    on_behalf_of?: string,\n    receipt_email?: string,\n    setup_future_usage?: \"off_session\" | \"on_session\",\n  /** shipping */\n    shipping?: {\n  /** address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n  /** @maxLength 22 */\n    statement_descriptor_suffix?: string,\n  /** transfer_data_params */\n    transfer_data?: {\n    amount?: number,\n    destination: string,\n\n},\n    transfer_group?: string,\n\n},\n  /**\n   * Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.\n   * This may occur if the Checkout Session includes a free trial or a discount.\n   * \n   * Can only be set in `subscription` mode.\n   * \n   * If you'd like information on how to collect a payment method outside of Checkout, read the guide on configuring [subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).\n   */\n    payment_method_collection?: \"always\" | \"if_required\",\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration.\n   */\n    payment_method_options?: {\n  /** payment_method_options_param */\n    acss_debit?: {\n    currency?: \"cad\" | \"usd\",\n  /** mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n    default_for?: (\"invoice\" | \"subscription\")[],\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    setup_future_usage?: \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n  /** payment_method_options_param */\n    affirm?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    afterpay_clearpay?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    alipay?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    au_becs_debit?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    bacs_debit?: {\n    setup_future_usage?: \"none\" | \"off_session\" | \"on_session\",\n\n},\n  /** payment_method_options_param */\n    bancontact?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    boleto?: {\n    expires_after_days?: number,\n    setup_future_usage?: \"none\" | \"off_session\" | \"on_session\",\n\n},\n  /** payment_method_options_param */\n    card?: {\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n\n},\n    setup_future_usage?: \"off_session\" | \"on_session\",\n  /** @maxLength 22 */\n    statement_descriptor_suffix_kana?: string,\n  /** @maxLength 17 */\n    statement_descriptor_suffix_kanji?: string,\n\n},\n  /** payment_method_options_param */\n    customer_balance?: {\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_params */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    requested_address_types?: (\"iban\" | \"sepa\" | \"sort_code\" | \"spei\" | \"zengin\")[],\n    type: \"eu_bank_transfer\" | \"gb_bank_transfer\" | \"jp_bank_transfer\" | \"mx_bank_transfer\",\n\n},\n    funding_type?: \"bank_transfer\",\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    eps?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    fpx?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    giropay?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    grabpay?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    ideal?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    klarna?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    konbini?: {\n    expires_after_days?: number,\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    oxxo?: {\n    expires_after_days?: number,\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    \"p24\"?: {\n    setup_future_usage?: \"none\",\n    tos_shown_and_accepted?: boolean,\n\n},\n  /** payment_method_options_param */\n    paynow?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    pix?: {\n    expires_after_seconds?: number,\n\n},\n  /** payment_method_options_param */\n    sepa_debit?: {\n    setup_future_usage?: \"none\" | \"off_session\" | \"on_session\",\n\n},\n  /** payment_method_options_param */\n    sofort?: {\n    setup_future_usage?: \"none\",\n\n},\n  /** payment_method_options_param */\n    us_bank_account?: {\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    setup_future_usage?: \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\",\n\n},\n  /** payment_method_options_param */\n    wechat_pay?: {\n  /** @maxLength 5000 */\n    app_id?: string,\n    client: \"android\" | \"ios\" | \"web\",\n    setup_future_usage?: \"none\",\n\n},\n\n},\n  /**\n   * A list of the types of payment methods (e.g., `card`) this Checkout Session can accept.\n   * \n   * In `payment` and `subscription` mode, you can omit this attribute to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).\n   * It is required in `setup` mode.\n   * \n   * Read more about the supported payment methods and their requirements in our [payment\n   * method details guide](/docs/payments/checkout/payment-methods).\n   * \n   * If multiple payment methods are passed, Checkout will dynamically reorder them to\n   * prioritize the most relevant payment methods based on the customer's location and\n   * other characteristics.\n   */\n    payment_method_types?: (\"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[],\n  /**\n   * phone_number_collection_params\n   * Controls phone number collection settings for the session.\n   * \n   * We recommend that you review your privacy policy and check with your legal contacts\n   * before using this feature. Learn more about [collecting phone numbers with Checkout](https://stripe.com/docs/payments/checkout/phone-numbers).\n   */\n    phone_number_collection?: {\n    enabled: boolean,\n\n},\n  /**\n   * setup_intent_data_param\n   * A subset of parameters to be passed to SetupIntent creation for Checkout Sessions in `setup` mode.\n   */\n    setup_intent_data?: {\n  /** @maxLength 1000 */\n    description?: string,\n    metadata?: hasuraSdk.JSONValue,\n    on_behalf_of?: string,\n\n},\n  /**\n   * shipping_address_collection_params\n   * When set, provides configuration for Checkout to collect a shipping address from a customer.\n   */\n    shipping_address_collection?: {\n    allowed_countries: (\"AC\" | \"AD\" | \"AE\" | \"AF\" | \"AG\" | \"AI\" | \"AL\" | \"AM\" | \"AO\" | \"AQ\" | \"AR\" | \"AT\" | \"AU\" | \"AW\" | \"AX\" | \"AZ\" | \"BA\" | \"BB\" | \"BD\" | \"BE\" | \"BF\" | \"BG\" | \"BH\" | \"BI\" | \"BJ\" | \"BL\" | \"BM\" | \"BN\" | \"BO\" | \"BQ\" | \"BR\" | \"BS\" | \"BT\" | \"BV\" | \"BW\" | \"BY\" | \"BZ\" | \"CA\" | \"CD\" | \"CF\" | \"CG\" | \"CH\" | \"CI\" | \"CK\" | \"CL\" | \"CM\" | \"CN\" | \"CO\" | \"CR\" | \"CV\" | \"CW\" | \"CY\" | \"CZ\" | \"DE\" | \"DJ\" | \"DK\" | \"DM\" | \"DO\" | \"DZ\" | \"EC\" | \"EE\" | \"EG\" | \"EH\" | \"ER\" | \"ES\" | \"ET\" | \"FI\" | \"FJ\" | \"FK\" | \"FO\" | \"FR\" | \"GA\" | \"GB\" | \"GD\" | \"GE\" | \"GF\" | \"GG\" | \"GH\" | \"GI\" | \"GL\" | \"GM\" | \"GN\" | \"GP\" | \"GQ\" | \"GR\" | \"GS\" | \"GT\" | \"GU\" | \"GW\" | \"GY\" | \"HK\" | \"HN\" | \"HR\" | \"HT\" | \"HU\" | \"ID\" | \"IE\" | \"IL\" | \"IM\" | \"IN\" | \"IO\" | \"IQ\" | \"IS\" | \"IT\" | \"JE\" | \"JM\" | \"JO\" | \"JP\" | \"KE\" | \"KG\" | \"KH\" | \"KI\" | \"KM\" | \"KN\" | \"KR\" | \"KW\" | \"KY\" | \"KZ\" | \"LA\" | \"LB\" | \"LC\" | \"LI\" | \"LK\" | \"LR\" | \"LS\" | \"LT\" | \"LU\" | \"LV\" | \"LY\" | \"MA\" | \"MC\" | \"MD\" | \"ME\" | \"MF\" | \"MG\" | \"MK\" | \"ML\" | \"MM\" | \"MN\" | \"MO\" | \"MQ\" | \"MR\" | \"MS\" | \"MT\" | \"MU\" | \"MV\" | \"MW\" | \"MX\" | \"MY\" | \"MZ\" | \"NA\" | \"NC\" | \"NE\" | \"NG\" | \"NI\" | \"NL\" | \"NO\" | \"NP\" | \"NR\" | \"NU\" | \"NZ\" | \"OM\" | \"PA\" | \"PE\" | \"PF\" | \"PG\" | \"PH\" | \"PK\" | \"PL\" | \"PM\" | \"PN\" | \"PR\" | \"PS\" | \"PT\" | \"PY\" | \"QA\" | \"RE\" | \"RO\" | \"RS\" | \"RU\" | \"RW\" | \"SA\" | \"SB\" | \"SC\" | \"SE\" | \"SG\" | \"SH\" | \"SI\" | \"SJ\" | \"SK\" | \"SL\" | \"SM\" | \"SN\" | \"SO\" | \"SR\" | \"SS\" | \"ST\" | \"SV\" | \"SX\" | \"SZ\" | \"TA\" | \"TC\" | \"TD\" | \"TF\" | \"TG\" | \"TH\" | \"TJ\" | \"TK\" | \"TL\" | \"TM\" | \"TN\" | \"TO\" | \"TR\" | \"TT\" | \"TV\" | \"TW\" | \"TZ\" | \"UA\" | \"UG\" | \"US\" | \"UY\" | \"UZ\" | \"VA\" | \"VC\" | \"VE\" | \"VG\" | \"VN\" | \"VU\" | \"WF\" | \"WS\" | \"XK\" | \"YE\" | \"YT\" | \"ZA\" | \"ZM\" | \"ZW\" | \"ZZ\")[],\n\n},\n  /** The shipping rate options to apply to this Session. */\n    shipping_options?: ({\n  /** @maxLength 5000 */\n    shipping_rate?: string,\n  /** method_params */\n    shipping_rate_data?: {\n  /** delivery_estimate */\n    delivery_estimate?: {\n  /** delivery_estimate_bound */\n    maximum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n  /** delivery_estimate_bound */\n    minimum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n\n},\n  /** @maxLength 100 */\n    display_name: string,\n  /** fixed_amount */\n    fixed_amount?: {\n    amount: number,\n    currency: string,\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n    metadata?: hasuraSdk.JSONValue,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    tax_code?: string,\n    type?: \"fixed_amount\",\n\n},\n\n})[],\n  /**\n   * Describes the type of transaction being performed by Checkout in order to customize\n   * relevant text on the page, such as the submit button. `submit_type` can only be\n   * specified on Checkout Sessions in `payment` mode, but not Checkout Sessions\n   * in `subscription` or `setup` mode.\n   */\n    submit_type?: \"auto\" | \"book\" | \"donate\" | \"pay\",\n  /**\n   * subscription_data_params\n   * A subset of parameters to be passed to subscription creation for Checkout Sessions in `subscription` mode.\n   */\n    subscription_data?: {\n    application_fee_percent?: number,\n    default_tax_rates?: (string)[],\n  /** @maxLength 500 */\n    description?: string,\n    metadata?: hasuraSdk.JSONValue,\n    on_behalf_of?: string,\n  /** transfer_data_specs */\n    transfer_data?: {\n    amount_percent?: number,\n    destination: string,\n\n},\n  /** @format unix-time */\n    trial_end?: number,\n    trial_period_days?: number,\n  /** trial_settings_config */\n    trial_settings?: {\n  /** end_behavior */\n    end_behavior: {\n    missing_payment_method: \"cancel\" | \"create_invoice\" | \"pause\",\n\n},\n\n},\n\n},\n  /**\n   * The URL to which Stripe should send customers when payment or setup\n   * is complete.\n   * If you’d like to use information from the successful Checkout Session on your page,\n   * read the guide on [customizing your success page](https://stripe.com/docs/payments/checkout/custom-success-page).\n   * @maxLength 5000\n   */\n    success_url: string,\n  /**\n   * tax_id_collection_params\n   * Controls tax ID collection settings for the session.\n   */\n    tax_id_collection?: {\n    enabled: boolean,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "CheckoutSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/checkout/sessions/{session}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CheckoutSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/checkout/sessions/{session}/expire": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CheckoutSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/checkout/sessions/{session}/line_items": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Item)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/country_specs": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (CountrySpec)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/country_specs\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/country_specs/{country}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".country": {
        "rendered": " country: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CountrySpec",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/coupons": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Coupon)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/coupons\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/coupons": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer representing the amount to subtract from an invoice total (required if `percent_off` is not passed). */\n    amount_off?: number,\n  /**\n   * applies_to_params\n   * A hash containing directions for what this Coupon will apply discounts to.\n   */\n    applies_to?: {\n    products?: (string)[],\n\n},\n  /** Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the `amount_off` parameter (required if `amount_off` is passed). */\n    currency?: string,\n  /** Coupons defined in each available currency option (only supported if `amount_off` is passed). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies). */\n    currency_options?: hasuraSdk.JSONValue,\n  /** Specifies how long the discount will be in effect if used on a subscription. Defaults to `once`. */\n    duration?: \"forever\" | \"once\" | \"repeating\",\n  /** Required only if `duration` is `repeating`, in which case it must be a positive integer that specifies the number of months the discount will be in effect. */\n    duration_in_months?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don't want to specify a particular code, you can leave the ID blank and we'll generate a random code for you.\n   * @maxLength 5000\n   */\n    id?: string,\n  /** A positive integer specifying the number of times the coupon can be redeemed before it's no longer valid. For example, you might have a 50% off coupon that the first 20 readers of your blog can use. */\n    max_redemptions?: number,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.\n   * @maxLength 40\n   */\n    name?: string,\n  /** A positive float larger than 0, and smaller or equal to 100, that represents the discount the coupon will apply (required if `amount_off` is not passed). */\n    percent_off?: number,\n  /**\n   * Unix timestamp specifying the last time at which the coupon can be redeemed. After the redeem_by date, the coupon can no longer be applied to new customers.\n   * @format unix-time\n   */\n    redeem_by?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Coupon",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/coupons/{coupon}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".coupon": {
        "rendered": " coupon: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedCoupon",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/coupons/{coupon}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".coupon": {
        "rendered": " coupon: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Coupon",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/coupons/{coupon}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Coupons defined in each available currency option (only supported if the coupon is amount-based). Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies). */\n    currency_options?: hasuraSdk.JSONValue,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Name of the coupon displayed to customers on, for instance invoices, or receipts. By default the `id` is shown if `name` is not set.\n   * @maxLength 40\n   */\n    name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".coupon": {
        "rendered": " coupon: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Coupon",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/credit_notes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return credit notes for the customer specified by this customer ID. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Only return credit notes for the invoice specified by this invoice ID. */\n invoice?: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer": {
        "rendered": "\n/** Only return credit notes for the customer specified by this customer ID. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice": {
        "rendered": "\n/** Only return credit notes for the invoice specified by this invoice ID. */\n invoice?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (CreditNote)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/credit_notes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The integer amount in cents (or local equivalent) representing the total amount of the credit note. */\n    amount?: number,\n  /** The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice. */\n    credit_amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * ID of the invoice.\n   * @maxLength 5000\n   */\n    invoice: string,\n  /** Line items that make up the credit note. */\n    lines?: ({\n    amount?: number,\n  /** @maxLength 5000 */\n    description?: string,\n  /** @maxLength 5000 */\n    invoice_line_item?: string,\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n    type: \"custom_line_item\" | \"invoice_line_item\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n})[],\n  /**\n   * The credit note's memo appears on the credit note PDF.\n   * @maxLength 5000\n   */\n    memo?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe. */\n    out_of_band_amount?: number,\n  /** Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` */\n    reason?: \"duplicate\" | \"fraudulent\" | \"order_change\" | \"product_unsatisfactory\",\n  /** ID of an existing refund to link this credit note to. */\n    refund?: string,\n  /** The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. */\n    refund_amount?: number,\n  /**\n   * credit_note_shipping_cost\n   * When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note.\n   */\n    shipping_cost?: {\n  /** @maxLength 5000 */\n    shipping_rate?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "CreditNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/credit_notes/preview": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The integer amount in cents (or local equivalent) representing the total amount of the credit note. */\n amount?: number, \n/** The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice. */\n credit_amount?: number, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** ID of the invoice. */\n invoice: string, \n/** Line items that make up the credit note. */\n lines?: ({  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, })[], \n/** The credit note's memo appears on the credit note PDF. */\n memo?: string, \n/** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n metadata?: object, \n/** The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe. */\n out_of_band_amount?: number, \n/** Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` */\n reason?: \"duplicate\" | \"fraudulent\" | \"order_change\" | \"product_unsatisfactory\", \n/** ID of an existing refund to link this credit note to. */\n refund?: string, \n/** The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. */\n refund_amount?: number, \n/** When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note. */\n shipping_cost?: {  shipping_rate?: string, }, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the total amount of the credit note. */\n amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.credit_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice. */\n credit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice": {
        "rendered": "\n/** ID of the invoice. */\n invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines": {
        "rendered": "\n/** Line items that make up the credit note. */\n lines?: ({  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name": {
        "rendered": "{  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.amount": {
        "rendered": " amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.invoice_line_item": {
        "rendered": " invoice_line_item?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.type": {
        "rendered": " type?: \"custom_line_item\" | \"invoice_line_item\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.memo": {
        "rendered": "\n/** The credit note's memo appears on the credit note PDF. */\n memo?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.metadata": {
        "rendered": "\n/** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n metadata?: object,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.out_of_band_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe. */\n out_of_band_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.reason": {
        "rendered": "\n/** Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` */\n reason?: \"duplicate\" | \"fraudulent\" | \"order_change\" | \"product_unsatisfactory\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.refund": {
        "rendered": "\n/** ID of an existing refund to link this credit note to. */\n refund?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.refund_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. */\n refund_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.shipping_cost": {
        "rendered": "\n/** When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note. */\n shipping_cost?: {  shipping_rate?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.shipping_cost.shipping_rate": {
        "rendered": " shipping_rate?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "CreditNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/credit_notes/preview/lines": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The integer amount in cents (or local equivalent) representing the total amount of the credit note. */\n amount?: number, \n/** The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice. */\n credit_amount?: number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** ID of the invoice. */\n invoice: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Line items that make up the credit note. */\n lines?: ({  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, })[], \n/** The credit note's memo appears on the credit note PDF. */\n memo?: string, \n/** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n metadata?: object, \n/** The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe. */\n out_of_band_amount?: number, \n/** Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` */\n reason?: \"duplicate\" | \"fraudulent\" | \"order_change\" | \"product_unsatisfactory\", \n/** ID of an existing refund to link this credit note to. */\n refund?: string, \n/** The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. */\n refund_amount?: number, \n/** When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note. */\n shipping_cost?: {  shipping_rate?: string, }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the total amount of the credit note. */\n amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.credit_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount to credit the customer's balance, which will be automatically applied to their next invoice. */\n credit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice": {
        "rendered": "\n/** ID of the invoice. */\n invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines": {
        "rendered": "\n/** Line items that make up the credit note. */\n lines?: ({  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name": {
        "rendered": "{  amount?: number,  description?: string,  invoice_line_item?: string,  quantity?: number,  tax_rates?: | (string)[] | \"\",  type?: \"custom_line_item\" | \"invoice_line_item\",  unit_amount?: number,  unit_amount_decimal?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.amount": {
        "rendered": " amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.invoice_line_item": {
        "rendered": " invoice_line_item?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.type": {
        "rendered": " type?: \"custom_line_item\" | \"invoice_line_item\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.lines.__no_name.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lines.__no_name.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.memo": {
        "rendered": "\n/** The credit note's memo appears on the credit note PDF. */\n memo?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.metadata": {
        "rendered": "\n/** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n metadata?: object,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.out_of_band_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount that is credited outside of Stripe. */\n out_of_band_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.reason": {
        "rendered": "\n/** Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory` */\n reason?: \"duplicate\" | \"fraudulent\" | \"order_change\" | \"product_unsatisfactory\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.refund": {
        "rendered": "\n/** ID of an existing refund to link this credit note to. */\n refund?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.refund_amount": {
        "rendered": "\n/** The integer amount in cents (or local equivalent) representing the amount to refund. If set, a refund will be created for the charge associated with the invoice. */\n refund_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.shipping_cost": {
        "rendered": "\n/** When shipping_cost contains the shipping_rate from the invoice, the shipping_cost is included in the credit note. */\n shipping_cost?: {  shipping_rate?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.shipping_cost.shipping_rate": {
        "rendered": " shipping_rate?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (CreditNoteLineItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/credit_notes/{credit_note}/lines": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".creditNote": {
        "rendered": " creditNote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (CreditNoteLineItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/credit_notes/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CreditNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/credit_notes/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Credit note memo.\n   * @maxLength 5000\n   */\n    memo?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CreditNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/credit_notes/{id}/void": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CreditNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A case-sensitive filter on the list based on the customer's `email` field. The value must be a string. */\n email?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Provides a list of customers that are associated with the specified test clock. The response will not include customers with test clocks if this parameter is not set. */\n test_clock?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.email": {
        "rendered": "\n/** A case-sensitive filter on the list based on the customer's `email` field. The value must be a string. */\n email?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.test_clock": {
        "rendered": "\n/** Provides a list of customers that are associated with the specified test clock. The response will not include customers with test clocks if this parameter is not set. */\n test_clock?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Customer)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/customers\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The customer's address. */\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n  /** An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice. */\n    balance?: number,\n  /**\n   * cash_balance_param\n   * Balance information and default balance settings for this customer.\n   */\n    cash_balance?: {\n  /** balance_settings_param */\n    settings?: {\n    reconciliation_mode?: \"automatic\" | \"manual\" | \"merchant_default\",\n\n},\n\n},\n  /** @maxLength 5000 */\n    coupon?: string,\n  /**\n   * An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.\n   * @maxLength 512\n   */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.\n   * @maxLength 5000\n   */\n    invoice_prefix?: string,\n  /**\n   * customer_param\n   * Default invoice settings for this customer.\n   */\n    invoice_settings?: {\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n  /** @maxLength 5000 */\n    footer?: string,\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The customer's full name or business name.\n   * @maxLength 256\n   */\n    name?: string,\n  /** The sequence to be used on the customer's next invoice. Defaults to 1. */\n    next_invoice_sequence?: number,\n  /** @maxLength 5000 */\n    payment_method?: string,\n  /**\n   * The customer's phone number.\n   * @maxLength 20\n   */\n    phone?: string,\n  /** Customer's preferred languages, ordered by preference. */\n    preferred_locales?: (string)[],\n  /**\n   * The API ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** The customer's shipping information. Appears on invoices emailed to this customer. */\n    shipping?: ({\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n} | \"\"),\n  /** @maxLength 5000 */\n    source?: string,\n  /**\n   * tax_param\n   * Tax details about the customer.\n   */\n    tax?: {\n    ip_address?: (string | \"\"),\n\n},\n  /** The customer's tax exemption. One of `none`, `exempt`, or `reverse`. */\n    tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",\n  /** The customer's tax IDs. */\n    tax_id_data?: ({\n  /** @maxLength 5000 */\n    type: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",\n    value: string,\n\n})[],\n  /**\n   * ID of the test clock to attach to the customer.\n   * @maxLength 5000\n   */\n    test_clock?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Customer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for customers](https://stripe.com/docs/search#query-fields-for-customers). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for customers](https://stripe.com/docs/search#query-fields-for-customers). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Customer)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedCustomer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(Customer | DeletedCustomer)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The customer's address. */\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n  /** An integer amount in cents (or local equivalent) that represents the customer's current balance, which affect the customer's future invoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases the amount due on an invoice. */\n    balance?: number,\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js). */\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n  /** @maxLength 5000 */\n    object?: \"card\",\n\n} | string),\n  /**\n   * cash_balance_param\n   * Balance information and default balance settings for this customer.\n   */\n    cash_balance?: {\n  /** balance_settings_param */\n    settings?: {\n    reconciliation_mode?: \"automatic\" | \"manual\" | \"merchant_default\",\n\n},\n\n},\n  /** @maxLength 5000 */\n    coupon?: string,\n  /**\n   * ID of Alipay account to make the customer's new default for invoice payments.\n   * @maxLength 500\n   */\n    default_alipay_account?: string,\n  /**\n   * ID of bank account to make the customer's new default for invoice payments.\n   * @maxLength 500\n   */\n    default_bank_account?: string,\n  /**\n   * ID of card to make the customer's new default for invoice payments.\n   * @maxLength 500\n   */\n    default_card?: string,\n  /**\n   * If you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/update#update_customer-invoice_settings-default_payment_method) parameter.\n   * \n   * Provide the ID of a payment source already attached to this customer to make it this customer's default payment source.\n   * \n   * If you want to add a new payment source and make it the default, see the [source](https://stripe.com/docs/api/customers/update#update_customer-source) property.\n   * @maxLength 500\n   */\n    default_source?: string,\n  /**\n   * An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * Customer's email address. It's displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to *512 characters*.\n   * @maxLength 512\n   */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.\n   * @maxLength 5000\n   */\n    invoice_prefix?: string,\n  /**\n   * customer_param\n   * Default invoice settings for this customer.\n   */\n    invoice_settings?: {\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n  /** @maxLength 5000 */\n    footer?: string,\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The customer's full name or business name.\n   * @maxLength 256\n   */\n    name?: string,\n  /** The sequence to be used on the customer's next invoice. Defaults to 1. */\n    next_invoice_sequence?: number,\n  /**\n   * The customer's phone number.\n   * @maxLength 20\n   */\n    phone?: string,\n  /** Customer's preferred languages, ordered by preference. */\n    preferred_locales?: (string)[],\n  /**\n   * The API ID of a promotion code to apply to the customer. The customer will have a discount applied on all recurring payments. Charges you create through the API will not have the discount.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** The customer's shipping information. Appears on invoices emailed to this customer. */\n    shipping?: ({\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n} | \"\"),\n  /** @maxLength 5000 */\n    source?: string,\n  /**\n   * tax_param\n   * Tax details about the customer.\n   */\n    tax?: {\n    ip_address?: (string | \"\"),\n\n},\n  /** The customer's tax exemption. One of `none`, `exempt`, or `reverse`. */\n    tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Customer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/balance_transactions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (CustomerBalanceTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/balance_transactions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The integer amount in **cents (or local equivalent)** to apply to the customer's credit balance. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Specifies the [`invoice_credit_balance`](https://stripe.com/docs/api/customers/object#customer_object-invoice_credit_balance) that this transaction will apply to. If the customer's `currency` is not set, it will be updated to this value. */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 350\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CustomerBalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/balance_transactions/{transaction}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".transaction": {
        "rendered": " transaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CustomerBalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/balance_transactions/{transaction}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 350\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".transaction": {
        "rendered": " transaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CustomerBalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/bank_accounts": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (BankAccount)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/bank_accounts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.\n   * @maxLength 5000\n   */\n    alipay_account?: string,\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js). */\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n  /** @maxLength 5000 */\n    object?: \"card\",\n\n} | string),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Please refer to full [documentation](https://stripe.com/docs/api) instead.\n   * @maxLength 5000\n   */\n    source?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentSource",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/bank_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(PaymentSource | DeletedPaymentSource)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/bank_accounts/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BankAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/bank_accounts/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the person or business that owns the bank account.\n   * @maxLength 5000\n   */\n    account_holder_name?: string,\n  /**\n   * The type of entity that holds the account. This can be either `individual` or `company`.\n   * @maxLength 5000\n   */\n    account_holder_type?: \"company\" | \"individual\",\n  /**\n   * City/District/Suburb/Town/Village.\n   * @maxLength 5000\n   */\n    address_city?: string,\n  /**\n   * Billing address country, if provided when creating card.\n   * @maxLength 5000\n   */\n    address_country?: string,\n  /**\n   * Address line 1 (Street address/PO Box/Company name).\n   * @maxLength 5000\n   */\n    \"address_line1\"?: string,\n  /**\n   * Address line 2 (Apartment/Suite/Unit/Building).\n   * @maxLength 5000\n   */\n    \"address_line2\"?: string,\n  /**\n   * State/County/Province/Region.\n   * @maxLength 5000\n   */\n    address_state?: string,\n  /**\n   * ZIP or postal code.\n   * @maxLength 5000\n   */\n    address_zip?: string,\n  /**\n   * Two digit number representing the card’s expiration month.\n   * @maxLength 5000\n   */\n    exp_month?: string,\n  /**\n   * Four digit number representing the card’s expiration year.\n   * @maxLength 5000\n   */\n    exp_year?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Cardholder name.\n   * @maxLength 5000\n   */\n    name?: string,\n  /** owner */\n    owner?: {\n  /** source_address */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(Card | BankAccount | Source)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/bank_accounts/{id}/verify": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account. */\n    amounts?: (number)[],\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BankAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/cards": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Card)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/cards": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.\n   * @maxLength 5000\n   */\n    alipay_account?: string,\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js). */\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n  /** @maxLength 5000 */\n    object?: \"card\",\n\n} | string),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Please refer to full [documentation](https://stripe.com/docs/api) instead.\n   * @maxLength 5000\n   */\n    source?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentSource",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/cards/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(PaymentSource | DeletedPaymentSource)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/cards/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Card",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/cards/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the person or business that owns the bank account.\n   * @maxLength 5000\n   */\n    account_holder_name?: string,\n  /**\n   * The type of entity that holds the account. This can be either `individual` or `company`.\n   * @maxLength 5000\n   */\n    account_holder_type?: \"company\" | \"individual\",\n  /**\n   * City/District/Suburb/Town/Village.\n   * @maxLength 5000\n   */\n    address_city?: string,\n  /**\n   * Billing address country, if provided when creating card.\n   * @maxLength 5000\n   */\n    address_country?: string,\n  /**\n   * Address line 1 (Street address/PO Box/Company name).\n   * @maxLength 5000\n   */\n    \"address_line1\"?: string,\n  /**\n   * Address line 2 (Apartment/Suite/Unit/Building).\n   * @maxLength 5000\n   */\n    \"address_line2\"?: string,\n  /**\n   * State/County/Province/Region.\n   * @maxLength 5000\n   */\n    address_state?: string,\n  /**\n   * ZIP or postal code.\n   * @maxLength 5000\n   */\n    address_zip?: string,\n  /**\n   * Two digit number representing the card’s expiration month.\n   * @maxLength 5000\n   */\n    exp_month?: string,\n  /**\n   * Four digit number representing the card’s expiration year.\n   * @maxLength 5000\n   */\n    exp_year?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Cardholder name.\n   * @maxLength 5000\n   */\n    name?: string,\n  /** owner */\n    owner?: {\n  /** source_address */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(Card | BankAccount | Source)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/cash_balance": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CashBalance",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/cash_balance": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * balance_settings_param\n   * A hash of settings for this cash balance.\n   */\n    settings?: {\n    reconciliation_mode?: \"automatic\" | \"manual\" | \"merchant_default\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CashBalance",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/cash_balance_transactions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (CustomerCashBalanceTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/cash_balance_transactions/{transaction}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".transaction": {
        "rendered": " transaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CustomerCashBalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/discount": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedDiscount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/discount": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Discount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/funding_instructions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * bank_transfer_params\n   * Additional parameters for `bank_transfer` funding types\n   */\n    bank_transfer: {\n  /** eu_bank_account_params */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    requested_address_types?: (\"iban\" | \"sort_code\" | \"spei\" | \"zengin\")[],\n    type: \"eu_bank_transfer\" | \"gb_bank_transfer\" | \"jp_bank_transfer\" | \"mx_bank_transfer\",\n\n},\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The `funding_type` to get the instructions for. */\n    funding_type: \"bank_transfer\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FundingInstructions",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/payment_methods": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request. */\n type?: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request. */\n type?: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PaymentMethod)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/payment_methods/{payment_method}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".paymentMethod": {
        "rendered": " paymentMethod: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/sources": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Filter sources according to a particular object type. */\n object?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.object": {
        "rendered": "\n/** Filter sources according to a particular object type. */\n object?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: ((BankAccount | Card | Source))[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/sources": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * A token returned by [Stripe.js](https://stripe.com/docs/js) representing the user’s Alipay account details.\n   * @maxLength 5000\n   */\n    alipay_account?: string,\n  /** Either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary containing a user's bank account details. */\n    bank_account?: ({\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    object?: \"bank_account\",\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n} | string),\n  /** A token, like the ones returned by [Stripe.js](https://stripe.com/docs/js). */\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n  /** @maxLength 5000 */\n    object?: \"card\",\n\n} | string),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Please refer to full [documentation](https://stripe.com/docs/api) instead.\n   * @maxLength 5000\n   */\n    source?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentSource",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/sources/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(PaymentSource | DeletedPaymentSource)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/sources/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentSource",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/sources/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the person or business that owns the bank account.\n   * @maxLength 5000\n   */\n    account_holder_name?: string,\n  /**\n   * The type of entity that holds the account. This can be either `individual` or `company`.\n   * @maxLength 5000\n   */\n    account_holder_type?: \"company\" | \"individual\",\n  /**\n   * City/District/Suburb/Town/Village.\n   * @maxLength 5000\n   */\n    address_city?: string,\n  /**\n   * Billing address country, if provided when creating card.\n   * @maxLength 5000\n   */\n    address_country?: string,\n  /**\n   * Address line 1 (Street address/PO Box/Company name).\n   * @maxLength 5000\n   */\n    \"address_line1\"?: string,\n  /**\n   * Address line 2 (Apartment/Suite/Unit/Building).\n   * @maxLength 5000\n   */\n    \"address_line2\"?: string,\n  /**\n   * State/County/Province/Region.\n   * @maxLength 5000\n   */\n    address_state?: string,\n  /**\n   * ZIP or postal code.\n   * @maxLength 5000\n   */\n    address_zip?: string,\n  /**\n   * Two digit number representing the card’s expiration month.\n   * @maxLength 5000\n   */\n    exp_month?: string,\n  /**\n   * Four digit number representing the card’s expiration year.\n   * @maxLength 5000\n   */\n    exp_year?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * Cardholder name.\n   * @maxLength 5000\n   */\n    name?: string,\n  /** owner */\n    owner?: {\n  /** source_address */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(Card | BankAccount | Source)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/sources/{id}/verify": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account. */\n    amounts?: (number)[],\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "BankAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/subscriptions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Subscription)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/subscriptions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items. */\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions). */\n    application_fee_percent?: number,\n  /**\n   * automatic_tax_config\n   * Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /**\n   * For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.\n   * @format unix-time\n   */\n    backdate_start_date?: number,\n  /**\n   * A future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.\n   * @format unix-time\n   */\n    billing_cycle_anchor?: number,\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n  /**\n   * A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.\n   * @format unix-time\n   */\n    cancel_at?: number,\n  /** Boolean indicating whether this subscription should cancel at the end of the current period. */\n    cancel_at_period_end?: boolean,\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    coupon?: string,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /** Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A list of up to 20 subscription items, each with an attached price. */\n    items?: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. */\n    off_session?: boolean,\n  /**\n   * Only applies to subscriptions with `collection_method=charge_automatically`.\n   * \n   * Use `allow_incomplete` to create subscriptions with `status=incomplete` if the first invoice cannot be paid. Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the payment intent on the first invoice. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the payment intent is not confirmed within 23 hours subscriptions transition to `status=incomplete_expired`, which is a terminal state.\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not create a subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   * \n   * `pending_if_incomplete` is only used with updates and cannot be passed when creating a subscription.\n   * \n   * Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first invoice status.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * payment_settings\n   * Payment settings to pass to invoices created by the subscription.\n   */\n    payment_settings?: {\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    amount?: number,\n    amount_type?: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n    save_default_payment_method?: \"off\" | \"on_subscription\",\n\n},\n  /** Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval. */\n    pending_invoice_item_interval?: ({\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n} | \"\"),\n  /**\n   * The API ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * transfer_data_specs\n   * If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.\n   */\n    transfer_data?: {\n    amount_percent?: number,\n    destination: string,\n\n},\n  /** Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_end?: (\"now\" | number),\n  /** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_from_plan?: boolean,\n  /** Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_period_days?: number,\n  /**\n   * trial_settings_config\n   * Settings related to subscription trials.\n   */\n    trial_settings?: {\n  /** end_behavior */\n    end_behavior: {\n    missing_payment_method: \"cancel\" | \"create_invoice\" | \"pause\",\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/subscriptions/{subscription_exposed_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Can be set to `true` if `at_period_end` is not set to `true`. Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items. */\n    invoice_now?: boolean,\n  /** Can be set to `true` if `at_period_end` is not set to `true`. Will generate a proration invoice item that credits remaining unused time until the subscription period end. */\n    prorate?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/subscriptions/{subscription_exposed_id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/subscriptions/{subscription_exposed_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items. */\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions). */\n    application_fee_percent?: number,\n  /**\n   * automatic_tax_config\n   * Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /**\n   * Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).\n   * @maxLength 5000\n   */\n    billing_cycle_anchor?: \"now\" | \"unchanged\",\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n  /** A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. */\n    cancel_at?: (number | \"\"),\n  /** Boolean indicating whether this subscription should cancel at the end of the current period. */\n    cancel_at_period_end?: boolean,\n  /**\n   * cancellation_details_param\n   * Details about why this subscription was cancelled\n   */\n    cancellation_details?: {\n  /** @maxLength 5000 */\n    comment?: string,\n    feedback?: \"\" | \"customer_service\" | \"low_quality\" | \"missing_features\" | \"other\" | \"switched_service\" | \"too_complex\" | \"too_expensive\" | \"unused\",\n\n},\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    coupon?: string,\n  /** Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A list of up to 20 subscription items, each with an attached price. */\n    items?: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    clear_usage?: boolean,\n    deleted?: boolean,\n  /** @maxLength 5000 */\n    id?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. */\n    off_session?: boolean,\n  /** If specified, payment collection for this subscription will be paused. */\n    pause_collection?: ({\n    behavior: \"keep_as_draft\" | \"mark_uncollectible\" | \"void\",\n  /** @format unix-time */\n    resumes_at?: number,\n\n} | \"\"),\n  /**\n   * Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n   * \n   * Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * payment_settings\n   * Payment settings to pass to invoices created by the subscription.\n   */\n    payment_settings?: {\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    amount?: number,\n    amount_type?: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n    save_default_payment_method?: \"off\" | \"on_subscription\",\n\n},\n  /** Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval. */\n    pending_invoice_item_interval?: ({\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n} | \"\"),\n  /**\n   * The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.\n   * @format unix-time\n   */\n    proration_date?: number,\n  /** If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value. */\n    transfer_data?: ({\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n  /** Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. */\n    trial_end?: (\"now\" | number),\n  /** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_from_plan?: boolean,\n  /**\n   * trial_settings_config\n   * Settings related to subscription trials.\n   */\n    trial_settings?: {\n  /** end_behavior */\n    end_behavior: {\n    missing_payment_method: \"cancel\" | \"create_invoice\" | \"pause\",\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedDiscount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Discount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/tax_ids": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TaxId)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/customers/{customer}/tax_ids": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ph_tin`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`\n   * @maxLength 5000\n   */\n    type: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",\n  /** Value of the tax ID. */\n    value: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TaxId",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/customers/{customer}/tax_ids/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedTaxId",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/customers/{customer}/tax_ids/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TaxId",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/disputes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return disputes associated to the charge specified by this charge ID. */\n charge?: string,  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return disputes associated to the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.charge": {
        "rendered": "\n/** Only return disputes associated to the charge specified by this charge ID. */\n charge?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_intent": {
        "rendered": "\n/** Only return disputes associated to the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Dispute)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/disputes\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/disputes/{dispute}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/disputes/{dispute}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * dispute_evidence_params\n   * Evidence to upload, to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review. The combined character count of all fields is limited to 150,000.\n   */\n    evidence?: {\n  /** @maxLength 20000 */\n    access_activity_log?: string,\n  /** @maxLength 5000 */\n    billing_address?: string,\n    cancellation_policy?: string,\n  /** @maxLength 20000 */\n    cancellation_policy_disclosure?: string,\n  /** @maxLength 20000 */\n    cancellation_rebuttal?: string,\n    customer_communication?: string,\n  /** @maxLength 5000 */\n    customer_email_address?: string,\n  /** @maxLength 5000 */\n    customer_name?: string,\n  /** @maxLength 5000 */\n    customer_purchase_ip?: string,\n    customer_signature?: string,\n    duplicate_charge_documentation?: string,\n  /** @maxLength 20000 */\n    duplicate_charge_explanation?: string,\n  /** @maxLength 5000 */\n    duplicate_charge_id?: string,\n  /** @maxLength 20000 */\n    product_description?: string,\n    receipt?: string,\n    refund_policy?: string,\n  /** @maxLength 20000 */\n    refund_policy_disclosure?: string,\n  /** @maxLength 20000 */\n    refund_refusal_explanation?: string,\n  /** @maxLength 5000 */\n    service_date?: string,\n    service_documentation?: string,\n  /** @maxLength 5000 */\n    shipping_address?: string,\n  /** @maxLength 5000 */\n    shipping_carrier?: string,\n  /** @maxLength 5000 */\n    shipping_date?: string,\n    shipping_documentation?: string,\n  /** @maxLength 5000 */\n    shipping_tracking_number?: string,\n    uncategorized_file?: string,\n  /** @maxLength 20000 */\n    uncategorized_text?: string,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Whether to immediately submit evidence to the bank. If `false`, evidence is staged on the dispute. Staged evidence is visible in the API and Dashboard, and can be submitted to the bank by making another request with this attribute set to `true` (the default). */\n    submit?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/disputes/{dispute}/close": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Dispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/ephemeral_keys": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The ID of the Customer you'd like to modify using the resulting ephemeral key.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The ID of the Issuing Card you'd like to access using the resulting ephemeral key.\n   * @maxLength 5000\n   */\n    issuing_card?: string,\n  /**\n   * The ID of the Identity VerificationSession you'd like to access using the resulting ephemeral key\n   * @maxLength 5000\n   */\n    verification_session?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "EphemeralKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/ephemeral_keys/{key}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".key": {
        "rendered": " key: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "EphemeralKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/events": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned. */\n delivery_success?: boolean, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property. */\n type?: string, \n/** An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both. */\n types?: (string)[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.delivery_success": {
        "rendered": "\n/** Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned. */\n delivery_success?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property. */\n type?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.types": {
        "rendered": "\n/** An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both. */\n types?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.types.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Event)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/events\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/events/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Event",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/exchange_rates": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ExchangeRate)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/exchange_rates\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/exchange_rates/{rate_id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".rateId": {
        "rendered": " rateId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ExchangeRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/file_links": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Filter links by their expiration status. By default, all links are returned. */\n expired?: boolean, \n/** Only return links for the given file. */\n file?: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expired": {
        "rendered": "\n/** Filter links by their expiration status. By default, all links are returned. */\n expired?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.file": {
        "rendered": "\n/** Only return links for the given file. */\n file?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FileLink)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/file_links\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/file_links": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A future timestamp after which the link will no longer be usable.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /**\n   * The ID of the file. The file's `purpose` must be one of the following: `business_icon`, `business_logo`, `customer_signature`, `dispute_evidence`, `finance_report_run`, `identity_document_downloadable`, `pci_document`, `selfie`, `sigma_scheduled_query`, `tax_document_user_upload`, or `terminal_reader_splashscreen`.\n   * @maxLength 5000\n   */\n    file: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "FileLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/file_links/{link}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".link": {
        "rendered": " link: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FileLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/file_links/{link}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A future timestamp after which the link will no longer be usable, or `now` to expire the link immediately. */\n    expires_at?: (\"now\" | number | \"\"),\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".link": {
        "rendered": " link: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FileLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/files": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The file purpose to filter queries by. If none is provided, files will not be filtered by purpose. */\n purpose?: \"account_requirement\" | \"additional_verification\" | \"business_icon\" | \"business_logo\" | \"customer_signature\" | \"dispute_evidence\" | \"document_provider_identity_document\" | \"finance_report_run\" | \"identity_document\" | \"identity_document_downloadable\" | \"pci_document\" | \"selfie\" | \"sigma_scheduled_query\" | \"tax_document_user_upload\" | \"terminal_reader_splashscreen\", \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.purpose": {
        "rendered": "\n/** The file purpose to filter queries by. If none is provided, files will not be filtered by purpose. */\n purpose?: \"account_requirement\" | \"additional_verification\" | \"business_icon\" | \"business_logo\" | \"customer_signature\" | \"dispute_evidence\" | \"document_provider_identity_document\" | \"finance_report_run\" | \"identity_document\" | \"identity_document_downloadable\" | \"pci_document\" | \"selfie\" | \"sigma_scheduled_query\" | \"tax_document_user_upload\" | \"terminal_reader_splashscreen\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (File)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/files\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/files": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A file to upload. The file should follow the specifications of RFC 2388 (which defines file transfers for the `multipart/form-data` protocol). */\n    file: string,\n  /**\n   * file_link_creation_params\n   * Optional parameters to automatically create a [file link](https://stripe.com/docs/api#file_links) for the newly created file.\n   */\n    file_link_data?: {\n    create: boolean,\n  /** @format unix-time */\n    expires_at?: number,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},\n  /** The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file. */\n    purpose: \"account_requirement\" | \"additional_verification\" | \"business_icon\" | \"business_logo\" | \"customer_signature\" | \"dispute_evidence\" | \"identity_document\" | \"pci_document\" | \"tax_document_user_upload\" | \"terminal_reader_splashscreen\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "File",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/files/{file}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".file": {
        "rendered": " file: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "File",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/financial_connections/accounts": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive. */\n account_holder?: {  account?: string,  customer?: string, }, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** If present, only return accounts that were collected as part of the given session. */\n session?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder": {
        "rendered": "\n/** If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive. */\n account_holder?: {  account?: string,  customer?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder.account": {
        "rendered": " account?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder.customer": {
        "rendered": " customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.session": {
        "rendered": "\n/** If present, only return accounts that were collected as part of the given session. */\n session?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FinancialConnectionsAccount)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/financial_connections/accounts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/financial_connections/accounts/{account}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/financial_connections/accounts/{account}/disconnect": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/financial_connections/accounts/{account}/owners": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The ID of the ownership object to fetch owners from. */\n ownership: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ownership": {
        "rendered": "\n/** The ID of the ownership object to fetch owners from. */\n ownership: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FinancialConnectionsAccountOwner)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/financial_connections/accounts/{account}/refresh": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The list of account features that you would like to refresh. */\n    features: (\"balance\" | \"ownership\")[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/financial_connections/sessions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * accountholder_params\n   * The account holder to link accounts for.\n   */\n    account_holder: {\n  /** @maxLength 5000 */\n    account?: string,\n  /** @maxLength 5000 */\n    customer?: string,\n    type: \"account\" | \"customer\",\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * filters_params\n   * Filters to restrict the kinds of accounts to collect.\n   */\n    filters?: {\n    countries: (string)[],\n\n},\n  /**\n   * List of data features that you would like to request access to.\n   * \n   * Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.\n   */\n    permissions: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /**\n   * For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.\n   * @maxLength 5000\n   */\n    return_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/financial_connections/sessions/{session}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/identity/verification_reports": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return VerificationReports of this type */\n type?: \"document\" | \"id_number\", \n/** Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID. */\n verification_session?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** Only return VerificationReports of this type */\n type?: \"document\" | \"id_number\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.verification_session": {
        "rendered": "\n/** Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID. */\n verification_session?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IdentityVerificationReport)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/identity/verification_reports\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/identity/verification_reports/{report}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".report": {
        "rendered": " report: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationReport",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/identity/verification_sessions": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work). */\n status?: \"canceled\" | \"processing\" | \"requires_input\" | \"verified\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return VerificationSessions with this status. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work). */\n status?: \"canceled\" | \"processing\" | \"requires_input\" | \"verified\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IdentityVerificationSession)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/identity/verification_sessions\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/identity/verification_sessions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * session_options_param\n   * A set of options for the session’s verification checks.\n   */\n    options?: {\n    document?: ({\n    allowed_types?: (\"driving_license\" | \"id_card\" | \"passport\")[],\n    require_id_number?: boolean,\n    require_live_capture?: boolean,\n    require_matching_selfie?: boolean,\n\n} | \"\"),\n\n},\n  /** The URL that the user will be redirected to upon completing the verification flow. */\n    return_url?: string,\n  /** The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed. */\n    type: \"document\" | \"id_number\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/identity/verification_sessions/{session}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/identity/verification_sessions/{session}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * session_options_param\n   * A set of options for the session’s verification checks.\n   */\n    options?: {\n    document?: ({\n    allowed_types?: (\"driving_license\" | \"id_card\" | \"passport\")[],\n    require_id_number?: boolean,\n    require_live_capture?: boolean,\n    require_matching_selfie?: boolean,\n\n} | \"\"),\n\n},\n  /** The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed. */\n    type?: \"document\" | \"id_number\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/identity/verification_sessions/{session}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/identity/verification_sessions/{session}/redact": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IdentityVerificationSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoiceitems": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed. */\n invoice?: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied. */\n pending?: boolean, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice": {
        "rendered": "\n/** Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed. */\n invoice?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pending": {
        "rendered": "\n/** Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied. */\n pending?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Invoiceitem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/invoiceitems\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoiceitems": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. Passing in a negative `amount` will reduce the `amount_due` on the invoice. */\n    amount?: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * The ID of the customer who will be billed when this invoice item is billed.\n   * @maxLength 5000\n   */\n    customer: string,\n  /**\n   * An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. */\n    discountable?: boolean,\n  /** The coupons to redeem into discounts for the invoice item or invoice line item. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The ID of an existing invoice to add this invoice item to. When left blank, the invoice item will be added to the next upcoming scheduled invoice. This is useful when adding invoice items in response to an invoice.created webhook. You can only add invoice items to draft invoices and there is a maximum of 250 items per invoice.\n   * @maxLength 5000\n   */\n    invoice?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * period\n   * The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.\n   */\n    period?: {\n  /** @format unix-time */\n    end: number,\n  /** @format unix-time */\n    start: number,\n\n},\n  /**\n   * The ID of the price object.\n   * @maxLength 5000\n   */\n    price?: string,\n  /**\n   * one_time_price_data\n   * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.\n   */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n  /** Non-negative integer. The quantity of units for the invoice item. */\n    quantity?: number,\n  /**\n   * The ID of a subscription to add this invoice item to. When left blank, the invoice item will be be added to the next upcoming scheduled invoice. When set, scheduled invoices for subscriptions other than the specified subscription will ignore the invoice item. Use this when you want to express that an invoice item has been accrued within the context of a particular subscription.\n   * @maxLength 5000\n   */\n    subscription?: string,\n  /** Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n  /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */\n    tax_code?: (string | \"\"),\n  /** The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. */\n    tax_rates?: (string)[],\n  /** The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This `unit_amount` will be multiplied by the quantity to get the full amount. Passing in a negative `unit_amount` will reduce the `amount_due` on the invoice. */\n    unit_amount?: number,\n  /**\n   * Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.\n   * @format decimal\n   */\n    unit_amount_decimal?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Invoiceitem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/invoiceitems/{invoiceitem}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoiceitem": {
        "rendered": " invoiceitem: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedInvoiceitem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoiceitems/{invoiceitem}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoiceitem": {
        "rendered": " invoiceitem: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoiceitem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoiceitems/{invoiceitem}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount. */\n    amount?: number,\n  /**\n   * An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations. */\n    discountable?: boolean,\n  /** The coupons & existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * period\n   * The period associated with this invoice item. When set to different values, the period will be rendered on the invoice. If you have [Stripe Revenue Recognition](https://stripe.com/docs/revenue-recognition) enabled, the period will be used to recognize and defer revenue. See the [Revenue Recognition documentation](https://stripe.com/docs/revenue-recognition/methodology/subscriptions-and-invoicing) for details.\n   */\n    period?: {\n  /** @format unix-time */\n    end: number,\n  /** @format unix-time */\n    start: number,\n\n},\n  /**\n   * The ID of the price object.\n   * @maxLength 5000\n   */\n    price?: string,\n  /**\n   * one_time_price_data\n   * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.\n   */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n  /** Non-negative integer. The quantity of units for the invoice item. */\n    quantity?: number,\n  /** Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n  /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */\n    tax_code?: (string | \"\"),\n  /** The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates. */\n    tax_rates?: ((string)[] | \"\"),\n  /** The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount. */\n    unit_amount?: number,\n  /**\n   * Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.\n   * @format decimal\n   */\n    unit_amount_decimal?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoiceitem": {
        "rendered": " invoiceitem: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoiceitem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`. */\n collection_method?: \"charge_automatically\" | \"send_invoice\",  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return invoices for the customer specified by this customer ID. */\n customer?: string,  due_date?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview) */\n status?: \"draft\" | \"open\" | \"paid\" | \"uncollectible\" | \"void\", \n/** Only return invoices for the subscription specified by this subscription ID. */\n subscription?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.collection_method": {
        "rendered": "\n/** The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`. */\n collection_method?: \"charge_automatically\" | \"send_invoice\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return invoices for the customer specified by this customer ID. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.due_date": {
        "rendered": " due_date?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview) */\n status?: \"draft\" | \"open\" | \"paid\" | \"uncollectible\" | \"void\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription": {
        "rendered": "\n/** Only return invoices for the subscription specified by this subscription ID. */\n subscription?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Invoice)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/invoices\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The account tax IDs associated with the invoice. Only editable when the invoice is a draft. */\n    account_tax_ids?: ((string)[] | \"\"),\n  /** A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees). */\n    application_fee_amount?: number,\n  /** Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action. */\n    auto_advance?: boolean,\n  /**\n   * automatic_tax_param\n   * Settings for automatic tax lookup for this invoice.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** The currency to create this invoice in. Defaults to that of `customer` if not specified. */\n    currency?: string,\n  /** A list of up to 4 custom fields to be displayed on the invoice. */\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /**\n   * The ID of the customer who will be billed.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** The number of days from when the invoice is created until it is due. Valid only for invoices where `collection_method=send_invoice`. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any line item that does not have `tax_rates` set. */\n    default_tax_rates?: (string)[],\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.\n   * @maxLength 1500\n   */\n    description?: string,\n  /** The coupons to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice's customer. Pass an empty string to avoid inheriting any discounts. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /**\n   * The date on which payment for this invoice is due. Valid only for invoices where `collection_method=send_invoice`.\n   * @format unix-time\n   */\n    due_date?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Footer to be displayed on the invoice.\n   * @maxLength 5000\n   */\n    footer?: string,\n  /**\n   * from_invoice\n   * Revise an existing invoice. The new invoice will be created in `status=draft`. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.\n   */\n    from_invoice?: {\n  /** @maxLength 5000 */\n    action: \"revision\",\n  /** @maxLength 5000 */\n    invoice: string,\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details. */\n    on_behalf_of?: string,\n  /**\n   * payment_settings\n   * Configuration settings for the PaymentIntent that is generated when the invoice is finalized.\n   */\n    payment_settings?: {\n  /** @maxLength 5000 */\n    default_mandate?: string,\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n    plan?: ({\n    count: number,\n    interval: \"month\",\n    type: \"fixed_count\",\n\n} | \"\"),\n\n},\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n\n},\n  /** How to handle pending invoice items on invoice creation. One of `include` or `exclude`. `include` will include any pending invoice items, and will create an empty draft invoice if no pending invoice items exist. `exclude` will always create an empty invoice draft regardless if there are pending invoice items or not. Defaults to `exclude` if the parameter is omitted. */\n    pending_invoice_items_behavior?: \"exclude\" | \"include\" | \"include_and_require\",\n  /** Options for invoice PDF rendering. */\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n  /**\n   * shipping_cost\n   * Settings for the cost of shipping for this invoice.\n   */\n    shipping_cost?: {\n  /** @maxLength 5000 */\n    shipping_rate?: string,\n  /** method_params */\n    shipping_rate_data?: {\n  /** delivery_estimate */\n    delivery_estimate?: {\n  /** delivery_estimate_bound */\n    maximum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n  /** delivery_estimate_bound */\n    minimum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n\n},\n  /** @maxLength 100 */\n    display_name: string,\n  /** fixed_amount */\n    fixed_amount?: {\n    amount: number,\n    currency: string,\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n    metadata?: hasuraSdk.JSONValue,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    tax_code?: string,\n    type?: \"fixed_amount\",\n\n},\n\n},\n  /**\n   * recipient_shipping_with_optional_fields_address\n   * Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer.\n   */\n    shipping_details?: {\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /**\n   * Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription. The subscription's billing cycle and regular subscription events won't be affected.\n   * @maxLength 5000\n   */\n    subscription?: string,\n  /**\n   * transfer_data_specs\n   * If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge.\n   */\n    transfer_data?: {\n    amount?: number,\n    destination: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Invoice)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices/upcoming": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Settings for automatic tax lookup for this invoice preview. */\n automatic_tax: {  enabled?: boolean, }, \n/** The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string. */\n coupon?: string, \n/** The currency to preview this invoice in. Defaults to that of `customer` if not specified. */\n currency?: string, \n/** The identifier of the customer whose upcoming invoice you'd like to retrieve. */\n customer?: string, \n/** Details about the customer you want to invoice or overrides for an existing customer. */\n customer_details?: {  address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",  shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",  tax?: {  ip_address?: | string | \"\", },  tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",  tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[], }, \n/** The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead. */\n discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\", \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** List of invoice items to add or update in the upcoming invoice preview. */\n invoice_items?: ({  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, })[], \n/** The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields. */\n schedule?: string, \n/** The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions. */\n subscription?: string, \n/** For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. */\n subscription_billing_cycle_anchor?: | \"now\" | \"unchanged\" | number, \n/** Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`. */\n subscription_cancel_at?: | number | \"\", \n/** Boolean indicating whether this subscription should cancel at the end of the current period. */\n subscription_cancel_at_period_end?: boolean, \n/** This simulates the subscription being canceled or expired immediately. */\n subscription_cancel_now?: boolean, \n/** If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. */\n subscription_default_tax_rates?: | (string)[] | \"\", \n/** A list of up to 20 subscription items, each with an attached price. */\n subscription_items?: ({  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", })[], \n/** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n subscription_proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\", \n/** If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. */\n subscription_proration_date?: number, \n/** For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. */\n subscription_resume_at?: \"now\", \n/** Date a subscription is intended to start (can be future or past) */\n subscription_start_date?: number, \n/** If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. */\n subscription_trial_end?: | \"now\" | number, \n/** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n subscription_trial_from_plan?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.automatic_tax": {
        "rendered": "\n/** Settings for automatic tax lookup for this invoice preview. */\n automatic_tax: {  enabled?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.automatic_tax.enabled": {
        "rendered": " enabled?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.coupon": {
        "rendered": "\n/** The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string. */\n coupon?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.currency": {
        "rendered": "\n/** The currency to preview this invoice in. Defaults to that of `customer` if not specified. */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer": {
        "rendered": "\n/** The identifier of the customer whose upcoming invoice you'd like to retrieve. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer_details": {
        "rendered": "\n/** Details about the customer you want to invoice or overrides for an existing customer. */\n customer_details?: {  address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",  shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",  tax?: {  ip_address?: | string | \"\", },  tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",  tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.address": {
        "rendered": " address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.shipping": {
        "rendered": " shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax": {
        "rendered": " tax?: {  ip_address?: | string | \"\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax.ip_address": {
        "rendered": " ip_address?: | string | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_exempt": {
        "rendered": " tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids": {
        "rendered": " tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name": {
        "rendered": "{  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name.type": {
        "rendered": " type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name.value": {
        "rendered": " value?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.discounts": {
        "rendered": "\n/** The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead. */\n discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items": {
        "rendered": "\n/** List of invoice items to add or update in the upcoming invoice preview. */\n invoice_items?: ({  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name": {
        "rendered": "{  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.amount": {
        "rendered": " amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.discountable": {
        "rendered": " discountable?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.discounts": {
        "rendered": " discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.invoiceitem": {
        "rendered": " invoiceitem?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.metadata": {
        "rendered": " metadata?: | object | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.period": {
        "rendered": " period: {  end?: number,  start?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.period.end": {
        "rendered": " end?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.period.start": {
        "rendered": " start?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price": {
        "rendered": " price?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data": {
        "rendered": " price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.price_data.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.product": {
        "rendered": " product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.price_data.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.tax_code": {
        "rendered": " tax_code?: | string | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.schedule": {
        "rendered": "\n/** The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields. */\n schedule?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription": {
        "rendered": "\n/** The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions. */\n subscription?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_billing_cycle_anchor": {
        "rendered": "\n/** For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. */\n subscription_billing_cycle_anchor?: | \"now\" | \"unchanged\" | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_cancel_at": {
        "rendered": "\n/** Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`. */\n subscription_cancel_at?: | number | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_cancel_at_period_end": {
        "rendered": "\n/** Boolean indicating whether this subscription should cancel at the end of the current period. */\n subscription_cancel_at_period_end?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_cancel_now": {
        "rendered": "\n/** This simulates the subscription being canceled or expired immediately. */\n subscription_cancel_now?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_default_tax_rates": {
        "rendered": "\n/** If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. */\n subscription_default_tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items": {
        "rendered": "\n/** A list of up to 20 subscription items, each with an attached price. */\n subscription_items?: ({  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name": {
        "rendered": "{  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.billing_thresholds": {
        "rendered": " billing_thresholds?: | {  usage_gte?: number, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.clear_usage": {
        "rendered": " clear_usage?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.deleted": {
        "rendered": " deleted?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.metadata": {
        "rendered": " metadata?: | object | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price": {
        "rendered": " price?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data": {
        "rendered": " price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.product": {
        "rendered": " product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.recurring": {
        "rendered": " recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.recurring.interval": {
        "rendered": " interval?: \"day\" | \"month\" | \"week\" | \"year\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.recurring.interval_count": {
        "rendered": " interval_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_proration_behavior": {
        "rendered": "\n/** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n subscription_proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_proration_date": {
        "rendered": "\n/** If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. */\n subscription_proration_date?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_resume_at": {
        "rendered": "\n/** For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. */\n subscription_resume_at?: \"now\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_start_date": {
        "rendered": "\n/** Date a subscription is intended to start (can be future or past) */\n subscription_start_date?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_trial_end": {
        "rendered": "\n/** If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. */\n subscription_trial_end?: | \"now\" | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_trial_from_plan": {
        "rendered": "\n/** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n subscription_trial_from_plan?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices/upcoming/lines": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Settings for automatic tax lookup for this invoice preview. */\n automatic_tax: {  enabled?: boolean, }, \n/** The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string. */\n coupon?: string, \n/** The currency to preview this invoice in. Defaults to that of `customer` if not specified. */\n currency?: string, \n/** The identifier of the customer whose upcoming invoice you'd like to retrieve. */\n customer?: string, \n/** Details about the customer you want to invoice or overrides for an existing customer. */\n customer_details?: {  address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",  shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",  tax?: {  ip_address?: | string | \"\", },  tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",  tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[], }, \n/** The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead. */\n discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\", \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** List of invoice items to add or update in the upcoming invoice preview. */\n invoice_items?: ({  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, })[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields. */\n schedule?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions. */\n subscription?: string, \n/** For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. */\n subscription_billing_cycle_anchor?: | \"now\" | \"unchanged\" | number, \n/** Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`. */\n subscription_cancel_at?: | number | \"\", \n/** Boolean indicating whether this subscription should cancel at the end of the current period. */\n subscription_cancel_at_period_end?: boolean, \n/** This simulates the subscription being canceled or expired immediately. */\n subscription_cancel_now?: boolean, \n/** If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. */\n subscription_default_tax_rates?: | (string)[] | \"\", \n/** A list of up to 20 subscription items, each with an attached price. */\n subscription_items?: ({  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", })[], \n/** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n subscription_proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\", \n/** If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. */\n subscription_proration_date?: number, \n/** For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. */\n subscription_resume_at?: \"now\", \n/** Date a subscription is intended to start (can be future or past) */\n subscription_start_date?: number, \n/** If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. */\n subscription_trial_end?: | \"now\" | number, \n/** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n subscription_trial_from_plan?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.automatic_tax": {
        "rendered": "\n/** Settings for automatic tax lookup for this invoice preview. */\n automatic_tax: {  enabled?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.automatic_tax.enabled": {
        "rendered": " enabled?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.coupon": {
        "rendered": "\n/** The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string. */\n coupon?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.currency": {
        "rendered": "\n/** The currency to preview this invoice in. Defaults to that of `customer` if not specified. */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer": {
        "rendered": "\n/** The identifier of the customer whose upcoming invoice you'd like to retrieve. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.customer_details": {
        "rendered": "\n/** Details about the customer you want to invoice or overrides for an existing customer. */\n customer_details?: {  address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",  shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",  tax?: {  ip_address?: | string | \"\", },  tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",  tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.address": {
        "rendered": " address?: | {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.shipping": {
        "rendered": " shipping?: | {  address?: {  city?: string,  country?: string,  line1?: string,  line2?: string,  postal_code?: string,  state?: string, },  name?: string,  phone?: string, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax": {
        "rendered": " tax?: {  ip_address?: | string | \"\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax.ip_address": {
        "rendered": " ip_address?: | string | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_exempt": {
        "rendered": " tax_exempt?: \"\" | \"exempt\" | \"none\" | \"reverse\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids": {
        "rendered": " tax_ids?: ({  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name": {
        "rendered": "{  type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",  value?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name.type": {
        "rendered": " type?: \"ae_trn\" | \"au_abn\" | \"au_arn\" | \"bg_uic\" | \"br_cnpj\" | \"br_cpf\" | \"ca_bn\" | \"ca_gst_hst\" | \"ca_pst_bc\" | \"ca_pst_mb\" | \"ca_pst_sk\" | \"ca_qst\" | \"ch_vat\" | \"cl_tin\" | \"eg_tin\" | \"es_cif\" | \"eu_oss_vat\" | \"eu_vat\" | \"gb_vat\" | \"ge_vat\" | \"hk_br\" | \"hu_tin\" | \"id_npwp\" | \"il_vat\" | \"in_gst\" | \"is_vat\" | \"jp_cn\" | \"jp_rn\" | \"jp_trn\" | \"ke_pin\" | \"kr_brn\" | \"li_uid\" | \"mx_rfc\" | \"my_frp\" | \"my_itn\" | \"my_sst\" | \"no_vat\" | \"nz_gst\" | \"ph_tin\" | \"ru_inn\" | \"ru_kpp\" | \"sa_vat\" | \"sg_gst\" | \"sg_uen\" | \"si_tin\" | \"th_vat\" | \"tr_tin\" | \"tw_vat\" | \"ua_vat\" | \"us_ein\" | \"za_vat\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer_details.tax_ids.__no_name.value": {
        "rendered": " value?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.discounts": {
        "rendered": "\n/** The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead. */\n discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items": {
        "rendered": "\n/** List of invoice items to add or update in the upcoming invoice preview. */\n invoice_items?: ({  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name": {
        "rendered": "{  amount?: number,  currency?: string,  description?: string,  discountable?: boolean,  discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",  invoiceitem?: string,  metadata?: | object | \"\",  period: {  end?: number,  start?: number, },  price?: string,  price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  tax_code?: | string | \"\",  tax_rates?: | (string)[] | \"\",  unit_amount?: number,  unit_amount_decimal?: string, }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.amount": {
        "rendered": " amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.discountable": {
        "rendered": " discountable?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.discounts": {
        "rendered": " discounts?: | ({  coupon?: string,  discount?: string, })[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.invoiceitem": {
        "rendered": " invoiceitem?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.metadata": {
        "rendered": " metadata?: | object | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.period": {
        "rendered": " period: {  end?: number,  start?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.period.end": {
        "rendered": " end?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.period.start": {
        "rendered": " start?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price": {
        "rendered": " price?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data": {
        "rendered": " price_data: {  currency?: string,  product?: string,  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.price_data.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.product": {
        "rendered": " product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.price_data.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.price_data.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.tax_code": {
        "rendered": " tax_code?: | string | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.invoice_items.__no_name.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.invoice_items.__no_name.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.schedule": {
        "rendered": "\n/** The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields. */\n schedule?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription": {
        "rendered": "\n/** The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions. */\n subscription?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_billing_cycle_anchor": {
        "rendered": "\n/** For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`. */\n subscription_billing_cycle_anchor?: | \"now\" | \"unchanged\" | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_cancel_at": {
        "rendered": "\n/** Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`. */\n subscription_cancel_at?: | number | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_cancel_at_period_end": {
        "rendered": "\n/** Boolean indicating whether this subscription should cancel at the end of the current period. */\n subscription_cancel_at_period_end?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_cancel_now": {
        "rendered": "\n/** This simulates the subscription being canceled or expired immediately. */\n subscription_cancel_now?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_default_tax_rates": {
        "rendered": "\n/** If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set. */\n subscription_default_tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items": {
        "rendered": "\n/** A list of up to 20 subscription items, each with an attached price. */\n subscription_items?: ({  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", })[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name": {
        "rendered": "{  billing_thresholds?: | {  usage_gte?: number, } | \"\",  clear_usage?: boolean,  deleted?: boolean,  id?: string,  metadata?: | object | \"\",  price?: string,  price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },  quantity?: number,  tax_rates?: | (string)[] | \"\", }",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.billing_thresholds": {
        "rendered": " billing_thresholds?: | {  usage_gte?: number, } | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.clear_usage": {
        "rendered": " clear_usage?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.deleted": {
        "rendered": " deleted?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.metadata": {
        "rendered": " metadata?: | object | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price": {
        "rendered": " price?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data": {
        "rendered": " price_data: {  currency?: string,  product?: string,  recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },  tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",  unit_amount?: number,  unit_amount_decimal?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.currency": {
        "rendered": " currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.product": {
        "rendered": " product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.recurring": {
        "rendered": " recurring: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  interval_count?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.recurring.interval": {
        "rendered": " interval?: \"day\" | \"month\" | \"week\" | \"year\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.recurring.interval_count": {
        "rendered": " interval_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.tax_behavior": {
        "rendered": " tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_items.__no_name.price_data.unit_amount": {
        "rendered": " unit_amount?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.price_data.unit_amount_decimal": {
        "rendered": " unit_amount_decimal?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.quantity": {
        "rendered": " quantity?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_items.__no_name.tax_rates": {
        "rendered": " tax_rates?: | (string)[] | \"\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_proration_behavior": {
        "rendered": "\n/** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n subscription_proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_proration_date": {
        "rendered": "\n/** If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period and within the current phase of the schedule backing this subscription, if the schedule exists. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'. */\n subscription_proration_date?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_resume_at": {
        "rendered": "\n/** For paused subscriptions, setting `subscription_resume_at` to `now` will preview the invoice that will be generated if the subscription is resumed. */\n subscription_resume_at?: \"now\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_start_date": {
        "rendered": "\n/** Date a subscription is intended to start (can be future or past) */\n subscription_start_date?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription_trial_end": {
        "rendered": "\n/** If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required. */\n subscription_trial_end?: | \"now\" | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.subscription_trial_from_plan": {
        "rendered": "\n/** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n subscription_trial_from_plan?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (LineItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/invoices/{invoice}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedInvoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices/{invoice}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The account tax IDs associated with the invoice. Only editable when the invoice is a draft. */\n    account_tax_ids?: ((string)[] | \"\"),\n  /** A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees). */\n    application_fee_amount?: number,\n  /** Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. */\n    auto_advance?: boolean,\n  /**\n   * automatic_tax_param\n   * Settings for automatic tax lookup for this invoice.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Either `charge_automatically` or `send_invoice`. This field can be updated only on `draft` invoices. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** A list of up to 4 custom fields to be displayed on the invoice. If a value for `custom_fields` is specified, the list specified will replace the existing custom field list on this invoice. Pass an empty string to remove previously-defined fields. */\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** The number of days from which the invoice is created until it is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any line item that does not have `tax_rates` set. Pass an empty string to remove previously-defined tax rates. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.\n   * @maxLength 1500\n   */\n    description?: string,\n  /** The discounts that will apply to the invoice. Pass an empty string to remove previously-defined discounts. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /**\n   * The date on which payment for this invoice is due. Only valid for invoices where `collection_method=send_invoice`. This field can only be updated on `draft` invoices.\n   * @format unix-time\n   */\n    due_date?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Footer to be displayed on the invoice.\n   * @maxLength 5000\n   */\n    footer?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details. */\n    on_behalf_of?: (string | \"\"),\n  /**\n   * payment_settings\n   * Configuration settings for the PaymentIntent that is generated when the invoice is finalized.\n   */\n    payment_settings?: {\n  /** @maxLength 5000 */\n    default_mandate?: string,\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n    plan?: ({\n    count: number,\n    interval: \"month\",\n    type: \"fixed_count\",\n\n} | \"\"),\n\n},\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n\n},\n  /** Options for invoice PDF rendering. */\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n  /** Settings for the cost of shipping for this invoice. */\n    shipping_cost?: ({\n  /** @maxLength 5000 */\n    shipping_rate?: string,\n  /** method_params */\n    shipping_rate_data?: {\n  /** delivery_estimate */\n    delivery_estimate?: {\n  /** delivery_estimate_bound */\n    maximum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n  /** delivery_estimate_bound */\n    minimum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n\n},\n  /** @maxLength 100 */\n    display_name: string,\n  /** fixed_amount */\n    fixed_amount?: {\n    amount: number,\n    currency: string,\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n    metadata?: hasuraSdk.JSONValue,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    tax_code?: string,\n    type?: \"fixed_amount\",\n\n},\n\n} | \"\"),\n  /** Shipping details for the invoice. The Invoice PDF will use the `shipping_details` value if it is set, otherwise the PDF will render the shipping address from the customer. */\n    shipping_details?: ({\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n} | \"\"),\n  /**\n   * Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /** If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge. This will be unset if you POST an empty value. */\n    transfer_data?: ({\n    amount?: number,\n    destination: string,\n\n} | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}/finalize": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/invoicing/automatic-charging) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action. */\n    auto_advance?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/invoices/{invoice}/lines": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (LineItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}/mark_uncollectible": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}/pay": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * In cases where the source used to pay the invoice has insufficient funds, passing `forgive=true` controls whether a charge should be attempted for the full amount available on the source, up to the amount to fully pay the invoice. This effectively forgives the difference between the amount available on the source and the amount due. \n   * \n   * Passing `forgive=false` will fail the charge if the source hasn't been pre-funded with the right amount. An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the difference. Defaults to `false`.\n   */\n    forgive?: boolean,\n  /**\n   * ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the payment_method param or the invoice's default_payment_method or default_source, if set.\n   * @maxLength 5000\n   */\n    mandate?: string,\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. Defaults to `true` (off-session). */\n    off_session?: boolean,\n  /** Boolean representing whether an invoice is paid outside of Stripe. This will result in no charge being made. Defaults to `false`. */\n    paid_out_of_band?: boolean,\n  /**\n   * A PaymentMethod to be charged. The PaymentMethod must be the ID of a PaymentMethod belonging to the customer associated with the invoice being paid.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * A payment source to be charged. The source must be the ID of a source belonging to the customer associated with the invoice being paid.\n   * @maxLength 5000\n   */\n    source?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}/send": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/invoices/{invoice}/void": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".invoice": {
        "rendered": " invoice: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Invoice",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/authorizations": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return authorizations that belong to the given card. */\n card?: string, \n/** Only return authorizations that belong to the given cardholder. */\n cardholder?: string, \n/** Only return authorizations that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`. */\n status?: \"closed\" | \"pending\" | \"reversed\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.card": {
        "rendered": "\n/** Only return authorizations that belong to the given card. */\n card?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.cardholder": {
        "rendered": "\n/** Only return authorizations that belong to the given cardholder. */\n cardholder?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** Only return authorizations that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`. */\n status?: \"closed\" | \"pending\" | \"reversed\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingAuthorization)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/authorizations\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/authorizations/{authorization}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".authorization": {
        "rendered": " authorization: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingAuthorization",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/authorizations/{authorization}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".authorization": {
        "rendered": " authorization: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingAuthorization",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/authorizations/{authorization}/approve": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** If the authorization's `pending_request.is_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization. Must be positive (use [`decline`](https://stripe.com/docs/api/issuing/authorizations/decline) to decline an authorization request). */\n    amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".authorization": {
        "rendered": " authorization: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingAuthorization",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/authorizations/{authorization}/decline": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".authorization": {
        "rendered": " authorization: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingAuthorization",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/cardholders": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return cardholders that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return cardholders that have the given email address. */\n email?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return cardholders that have the given phone number. */\n phone_number?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`. */\n status?: \"active\" | \"blocked\" | \"inactive\", \n/** Only return cardholders that have the given type. One of `individual` or `company`. */\n type?: \"company\" | \"individual\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** Only return cardholders that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.email": {
        "rendered": "\n/** Only return cardholders that have the given email address. */\n email?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.phone_number": {
        "rendered": "\n/** Only return cardholders that have the given phone number. */\n phone_number?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`. */\n status?: \"active\" | \"blocked\" | \"inactive\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.type": {
        "rendered": "\n/** Only return cardholders that have the given type. One of `individual` or `company`. */\n type?: \"company\" | \"individual\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingCardholder)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/cardholders\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/cardholders": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * billing_specs\n   * The cardholder's billing address.\n   */\n    billing: {\n  /** required_address */\n    address: {\n  /** @maxLength 5000 */\n    city: string,\n  /** @maxLength 5000 */\n    country: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n\n},\n  /**\n   * company_param\n   * Additional information about a `company` cardholder.\n   */\n    company?: {\n  /** @maxLength 5000 */\n    tax_id?: string,\n\n},\n  /** The cardholder's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * individual_param\n   * Additional information about an `individual` cardholder.\n   */\n    individual?: {\n  /** date_of_birth_specs */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n    first_name?: string,\n    last_name?: string,\n  /** person_verification_param */\n    verification?: {\n  /** person_verification_document_param */\n    document?: {\n  /** @maxLength 5000 */\n    back?: string,\n  /** @maxLength 5000 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The cardholder's name. This will be printed on cards issued to them. The maximum length of this field is 24 characters. This field cannot contain any special characters or numbers. */\n    name: string,\n  /** The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied) for more details. */\n    phone_number?: string,\n  /**\n   * authorization_controls_param_v2\n   * Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.\n   */\n    spending_controls?: {\n    allowed_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    blocked_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    spending_limits?: ({\n    amount: number,\n    categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    interval: \"all_time\" | \"daily\" | \"monthly\" | \"per_authorization\" | \"weekly\" | \"yearly\",\n\n})[],\n    spending_limits_currency?: string,\n\n},\n  /** Specifies whether to permit authorizations on this cardholder's cards. Defaults to `active`. */\n    status?: \"active\" | \"inactive\",\n  /** One of `individual` or `company`. See [Choose a cardholder type](https://stripe.com/docs/issuing/other/choose-cardholder) for more details. */\n    type: \"company\" | \"individual\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "IssuingCardholder",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/cardholders/{cardholder}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".cardholder": {
        "rendered": " cardholder: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCardholder",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/cardholders/{cardholder}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * billing_specs\n   * The cardholder's billing address.\n   */\n    billing?: {\n  /** required_address */\n    address: {\n  /** @maxLength 5000 */\n    city: string,\n  /** @maxLength 5000 */\n    country: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n\n},\n  /**\n   * company_param\n   * Additional information about a `company` cardholder.\n   */\n    company?: {\n  /** @maxLength 5000 */\n    tax_id?: string,\n\n},\n  /** The cardholder's email address. */\n    email?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * individual_param\n   * Additional information about an `individual` cardholder.\n   */\n    individual?: {\n  /** date_of_birth_specs */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n    first_name?: string,\n    last_name?: string,\n  /** person_verification_param */\n    verification?: {\n  /** person_verification_document_param */\n    document?: {\n  /** @maxLength 5000 */\n    back?: string,\n  /** @maxLength 5000 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The cardholder's phone number. This is required for all cardholders who will be creating EU cards. See the [3D Secure documentation](https://stripe.com/docs/issuing/3d-secure) for more details. */\n    phone_number?: string,\n  /**\n   * authorization_controls_param_v2\n   * Rules that control spending across this cardholder's cards. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.\n   */\n    spending_controls?: {\n    allowed_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    blocked_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    spending_limits?: ({\n    amount: number,\n    categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    interval: \"all_time\" | \"daily\" | \"monthly\" | \"per_authorization\" | \"weekly\" | \"yearly\",\n\n})[],\n    spending_limits_currency?: string,\n\n},\n  /** Specifies whether to permit authorizations on this cardholder's cards. */\n    status?: \"active\" | \"inactive\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".cardholder": {
        "rendered": " cardholder: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCardholder",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/cards": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return cards belonging to the Cardholder with the provided ID. */\n cardholder?: string, \n/** Only return cards that were issued during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Only return cards that have the given expiration month. */\n exp_month?: number, \n/** Only return cards that have the given expiration year. */\n exp_year?: number, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Only return cards that have the given last four digits. */\n last4?: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return cards that have the given status. One of `active`, `inactive`, or `canceled`. */\n status?: \"active\" | \"canceled\" | \"inactive\", \n/** Only return cards that have the given type. One of `virtual` or `physical`. */\n type?: \"physical\" | \"virtual\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.cardholder": {
        "rendered": "\n/** Only return cards belonging to the Cardholder with the provided ID. */\n cardholder?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** Only return cards that were issued during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.exp_month": {
        "rendered": "\n/** Only return cards that have the given expiration month. */\n exp_month?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.exp_year": {
        "rendered": "\n/** Only return cards that have the given expiration year. */\n exp_year?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.last4": {
        "rendered": "\n/** Only return cards that have the given last four digits. */\n last4?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return cards that have the given status. One of `active`, `inactive`, or `canceled`. */\n status?: \"active\" | \"canceled\" | \"inactive\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.type": {
        "rendered": "\n/** Only return cards that have the given type. One of `virtual` or `physical`. */\n type?: \"physical\" | \"virtual\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingCard)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/cards\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/cards": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) object with which the card will be associated.\n   * @maxLength 5000\n   */\n    cardholder?: string,\n  /** The currency for the card. */\n    currency: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n    financial_account?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The card this is meant to be a replacement for (if any).\n   * @maxLength 5000\n   */\n    replacement_for?: string,\n  /** If `replacement_for` is specified, this should indicate why that card is being replaced. */\n    replacement_reason?: \"damaged\" | \"expired\" | \"lost\" | \"stolen\",\n  /**\n   * shipping_specs\n   * The address where the card will be shipped.\n   */\n    shipping?: {\n  /** required_address */\n    address: {\n  /** @maxLength 5000 */\n    city: string,\n  /** @maxLength 5000 */\n    country: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** customs_param */\n    customs?: {\n  /** @maxLength 5000 */\n    eori_number?: string,\n\n},\n  /** @maxLength 5000 */\n    name: string,\n    phone_number?: string,\n    require_signature?: boolean,\n    service?: \"express\" | \"priority\" | \"standard\",\n    type?: \"bulk\" | \"individual\",\n\n},\n  /**\n   * authorization_controls_param\n   * Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.\n   */\n    spending_controls?: {\n    allowed_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    blocked_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    spending_limits?: ({\n    amount: number,\n    categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    interval: \"all_time\" | \"daily\" | \"monthly\" | \"per_authorization\" | \"weekly\" | \"yearly\",\n\n})[],\n\n},\n  /** Whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. */\n    status?: \"active\" | \"inactive\",\n  /** The type of card to issue. Possible values are `physical` or `virtual`. */\n    type: \"physical\" | \"virtual\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/cards/{card}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/cards/{card}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Reason why the `status` of this card is `canceled`. */\n    cancellation_reason?: \"lost\" | \"stolen\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * encrypted_pin_param\n   * The desired new PIN for this card.\n   */\n    pin?: {\n  /** @maxLength 5000 */\n    encrypted_number?: string,\n\n},\n  /**\n   * authorization_controls_param\n   * Rules that control spending for this card. Refer to our [documentation](https://stripe.com/docs/issuing/controls/spending-controls) for more details.\n   */\n    spending_controls?: {\n    allowed_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    blocked_categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    spending_limits?: ({\n    amount: number,\n    categories?: (\"ac_refrigeration_repair\" | \"accounting_bookkeeping_services\" | \"advertising_services\" | \"agricultural_cooperative\" | \"airlines_air_carriers\" | \"airports_flying_fields\" | \"ambulance_services\" | \"amusement_parks_carnivals\" | \"antique_reproductions\" | \"antique_shops\" | \"aquariums\" | \"architectural_surveying_services\" | \"art_dealers_and_galleries\" | \"artists_supply_and_craft_shops\" | \"auto_and_home_supply_stores\" | \"auto_body_repair_shops\" | \"auto_paint_shops\" | \"auto_service_shops\" | \"automated_cash_disburse\" | \"automated_fuel_dispensers\" | \"automobile_associations\" | \"automotive_parts_and_accessories_stores\" | \"automotive_tire_stores\" | \"bail_and_bond_payments\" | \"bakeries\" | \"bands_orchestras\" | \"barber_and_beauty_shops\" | \"betting_casino_gambling\" | \"bicycle_shops\" | \"billiard_pool_establishments\" | \"boat_dealers\" | \"boat_rentals_and_leases\" | \"book_stores\" | \"books_periodicals_and_newspapers\" | \"bowling_alleys\" | \"bus_lines\" | \"business_secretarial_schools\" | \"buying_shopping_services\" | \"cable_satellite_and_other_pay_television_and_radio\" | \"camera_and_photographic_supply_stores\" | \"candy_nut_and_confectionery_stores\" | \"car_and_truck_dealers_new_used\" | \"car_and_truck_dealers_used_only\" | \"car_rental_agencies\" | \"car_washes\" | \"carpentry_services\" | \"carpet_upholstery_cleaning\" | \"caterers\" | \"charitable_and_social_service_organizations_fundraising\" | \"chemicals_and_allied_products\" | \"child_care_services\" | \"childrens_and_infants_wear_stores\" | \"chiropodists_podiatrists\" | \"chiropractors\" | \"cigar_stores_and_stands\" | \"civic_social_fraternal_associations\" | \"cleaning_and_maintenance\" | \"clothing_rental\" | \"colleges_universities\" | \"commercial_equipment\" | \"commercial_footwear\" | \"commercial_photography_art_and_graphics\" | \"commuter_transport_and_ferries\" | \"computer_network_services\" | \"computer_programming\" | \"computer_repair\" | \"computer_software_stores\" | \"computers_peripherals_and_software\" | \"concrete_work_services\" | \"construction_materials\" | \"consulting_public_relations\" | \"correspondence_schools\" | \"cosmetic_stores\" | \"counseling_services\" | \"country_clubs\" | \"courier_services\" | \"court_costs\" | \"credit_reporting_agencies\" | \"cruise_lines\" | \"dairy_products_stores\" | \"dance_hall_studios_schools\" | \"dating_escort_services\" | \"dentists_orthodontists\" | \"department_stores\" | \"detective_agencies\" | \"digital_goods_applications\" | \"digital_goods_games\" | \"digital_goods_large_volume\" | \"digital_goods_media\" | \"direct_marketing_catalog_merchant\" | \"direct_marketing_combination_catalog_and_retail_merchant\" | \"direct_marketing_inbound_telemarketing\" | \"direct_marketing_insurance_services\" | \"direct_marketing_other\" | \"direct_marketing_outbound_telemarketing\" | \"direct_marketing_subscription\" | \"direct_marketing_travel\" | \"discount_stores\" | \"doctors\" | \"door_to_door_sales\" | \"drapery_window_covering_and_upholstery_stores\" | \"drinking_places\" | \"drug_stores_and_pharmacies\" | \"drugs_drug_proprietaries_and_druggist_sundries\" | \"dry_cleaners\" | \"durable_goods\" | \"duty_free_stores\" | \"eating_places_restaurants\" | \"educational_services\" | \"electric_razor_stores\" | \"electric_vehicle_charging\" | \"electrical_parts_and_equipment\" | \"electrical_services\" | \"electronics_repair_shops\" | \"electronics_stores\" | \"elementary_secondary_schools\" | \"emergency_services_gcas_visa_use_only\" | \"employment_temp_agencies\" | \"equipment_rental\" | \"exterminating_services\" | \"family_clothing_stores\" | \"fast_food_restaurants\" | \"financial_institutions\" | \"fines_government_administrative_entities\" | \"fireplace_fireplace_screens_and_accessories_stores\" | \"floor_covering_stores\" | \"florists\" | \"florists_supplies_nursery_stock_and_flowers\" | \"freezer_and_locker_meat_provisioners\" | \"fuel_dealers_non_automotive\" | \"funeral_services_crematories\" | \"furniture_home_furnishings_and_equipment_stores_except_appliances\" | \"furniture_repair_refinishing\" | \"furriers_and_fur_shops\" | \"general_services\" | \"gift_card_novelty_and_souvenir_shops\" | \"glass_paint_and_wallpaper_stores\" | \"glassware_crystal_stores\" | \"golf_courses_public\" | \"government_licensed_horse_dog_racing_us_region_only\" | \"government_licensed_online_casions_online_gambling_us_region_only\" | \"government_owned_lotteries_non_us_region\" | \"government_owned_lotteries_us_region_only\" | \"government_services\" | \"grocery_stores_supermarkets\" | \"hardware_equipment_and_supplies\" | \"hardware_stores\" | \"health_and_beauty_spas\" | \"hearing_aids_sales_and_supplies\" | \"heating_plumbing_a_c\" | \"hobby_toy_and_game_shops\" | \"home_supply_warehouse_stores\" | \"hospitals\" | \"hotels_motels_and_resorts\" | \"household_appliance_stores\" | \"industrial_supplies\" | \"information_retrieval_services\" | \"insurance_default\" | \"insurance_underwriting_premiums\" | \"intra_company_purchases\" | \"jewelry_stores_watches_clocks_and_silverware_stores\" | \"landscaping_services\" | \"laundries\" | \"laundry_cleaning_services\" | \"legal_services_attorneys\" | \"luggage_and_leather_goods_stores\" | \"lumber_building_materials_stores\" | \"manual_cash_disburse\" | \"marinas_service_and_supplies\" | \"marketplaces\" | \"masonry_stonework_and_plaster\" | \"massage_parlors\" | \"medical_and_dental_labs\" | \"medical_dental_ophthalmic_and_hospital_equipment_and_supplies\" | \"medical_services\" | \"membership_organizations\" | \"mens_and_boys_clothing_and_accessories_stores\" | \"mens_womens_clothing_stores\" | \"metal_service_centers\" | \"miscellaneous\" | \"miscellaneous_apparel_and_accessory_shops\" | \"miscellaneous_auto_dealers\" | \"miscellaneous_business_services\" | \"miscellaneous_food_stores\" | \"miscellaneous_general_merchandise\" | \"miscellaneous_general_services\" | \"miscellaneous_home_furnishing_specialty_stores\" | \"miscellaneous_publishing_and_printing\" | \"miscellaneous_recreation_services\" | \"miscellaneous_repair_shops\" | \"miscellaneous_specialty_retail\" | \"mobile_home_dealers\" | \"motion_picture_theaters\" | \"motor_freight_carriers_and_trucking\" | \"motor_homes_dealers\" | \"motor_vehicle_supplies_and_new_parts\" | \"motorcycle_shops_and_dealers\" | \"motorcycle_shops_dealers\" | \"music_stores_musical_instruments_pianos_and_sheet_music\" | \"news_dealers_and_newsstands\" | \"non_fi_money_orders\" | \"non_fi_stored_value_card_purchase_load\" | \"nondurable_goods\" | \"nurseries_lawn_and_garden_supply_stores\" | \"nursing_personal_care\" | \"office_and_commercial_furniture\" | \"opticians_eyeglasses\" | \"optometrists_ophthalmologist\" | \"orthopedic_goods_prosthetic_devices\" | \"osteopaths\" | \"package_stores_beer_wine_and_liquor\" | \"paints_varnishes_and_supplies\" | \"parking_lots_garages\" | \"passenger_railways\" | \"pawn_shops\" | \"pet_shops_pet_food_and_supplies\" | \"petroleum_and_petroleum_products\" | \"photo_developing\" | \"photographic_photocopy_microfilm_equipment_and_supplies\" | \"photographic_studios\" | \"picture_video_production\" | \"piece_goods_notions_and_other_dry_goods\" | \"plumbing_heating_equipment_and_supplies\" | \"political_organizations\" | \"postal_services_government_only\" | \"precious_stones_and_metals_watches_and_jewelry\" | \"professional_services\" | \"public_warehousing_and_storage\" | \"quick_copy_repro_and_blueprint\" | \"railroads\" | \"real_estate_agents_and_managers_rentals\" | \"record_stores\" | \"recreational_vehicle_rentals\" | \"religious_goods_stores\" | \"religious_organizations\" | \"roofing_siding_sheet_metal\" | \"secretarial_support_services\" | \"security_brokers_dealers\" | \"service_stations\" | \"sewing_needlework_fabric_and_piece_goods_stores\" | \"shoe_repair_hat_cleaning\" | \"shoe_stores\" | \"small_appliance_repair\" | \"snowmobile_dealers\" | \"special_trade_services\" | \"specialty_cleaning\" | \"sporting_goods_stores\" | \"sporting_recreation_camps\" | \"sports_and_riding_apparel_stores\" | \"sports_clubs_fields\" | \"stamp_and_coin_stores\" | \"stationary_office_supplies_printing_and_writing_paper\" | \"stationery_stores_office_and_school_supply_stores\" | \"swimming_pools_sales\" | \"t_ui_travel_germany\" | \"tailors_alterations\" | \"tax_payments_government_agencies\" | \"tax_preparation_services\" | \"taxicabs_limousines\" | \"telecommunication_equipment_and_telephone_sales\" | \"telecommunication_services\" | \"telegraph_services\" | \"tent_and_awning_shops\" | \"testing_laboratories\" | \"theatrical_ticket_agencies\" | \"timeshares\" | \"tire_retreading_and_repair\" | \"tolls_bridge_fees\" | \"tourist_attractions_and_exhibits\" | \"towing_services\" | \"trailer_parks_campgrounds\" | \"transportation_services\" | \"travel_agencies_tour_operators\" | \"truck_stop_iteration\" | \"truck_utility_trailer_rentals\" | \"typesetting_plate_making_and_related_services\" | \"typewriter_stores\" | \"u_s_federal_government_agencies_or_departments\" | \"uniforms_commercial_clothing\" | \"used_merchandise_and_secondhand_stores\" | \"utilities\" | \"variety_stores\" | \"veterinary_services\" | \"video_amusement_game_supplies\" | \"video_game_arcades\" | \"video_tape_rental_stores\" | \"vocational_trade_schools\" | \"watch_jewelry_repair\" | \"welding_repair\" | \"wholesale_clubs\" | \"wig_and_toupee_stores\" | \"wires_money_orders\" | \"womens_accessory_and_specialty_shops\" | \"womens_ready_to_wear_stores\" | \"wrecking_and_salvage_yards\")[],\n    interval: \"all_time\" | \"daily\" | \"monthly\" | \"per_authorization\" | \"weekly\" | \"yearly\",\n\n})[],\n\n},\n  /** Dictates whether authorizations can be approved on this card. May be blocked from activating cards depending on past-due Cardholder requirements. Defaults to `inactive`. If this card is being canceled because it was lost or stolen, this information should be provided as `cancellation_reason`. */\n    status?: \"active\" | \"canceled\" | \"inactive\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/disputes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Select Issuing disputes that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Select Issuing disputes with the given status. */\n status?: \"expired\" | \"lost\" | \"submitted\" | \"unsubmitted\" | \"won\", \n/** Select the Issuing dispute for the given transaction. */\n transaction?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** Select Issuing disputes that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Select Issuing disputes with the given status. */\n status?: \"expired\" | \"lost\" | \"submitted\" | \"unsubmitted\" | \"won\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.transaction": {
        "rendered": "\n/** Select the Issuing dispute for the given transaction. */\n transaction?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingDispute)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/disputes\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/disputes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). If not set, defaults to the full transaction amount. */\n    amount?: number,\n  /**\n   * evidence_param\n   * Evidence provided for the dispute.\n   */\n    evidence?: {\n    canceled?: ({\n    additional_documentation?: (string | \"\"),\n    canceled_at?: (number | \"\"),\n    cancellation_policy_provided?: (boolean | \"\"),\n  /** @maxLength 1500 */\n    cancellation_reason?: string,\n    expected_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n    return_status?: \"\" | \"merchant_rejected\" | \"successful\",\n    returned_at?: (number | \"\"),\n\n} | \"\"),\n    duplicate?: ({\n    additional_documentation?: (string | \"\"),\n    card_statement?: (string | \"\"),\n    cash_receipt?: (string | \"\"),\n    check_image?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 5000 */\n    original_transaction?: string,\n\n} | \"\"),\n    fraudulent?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n\n} | \"\"),\n    merchandise_not_as_described?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n    received_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    return_description?: string,\n    return_status?: \"\" | \"merchant_rejected\" | \"successful\",\n    returned_at?: (number | \"\"),\n\n} | \"\"),\n    not_received?: ({\n    additional_documentation?: (string | \"\"),\n    expected_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n\n} | \"\"),\n    other?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n\n} | \"\"),\n    reason?: \"canceled\" | \"duplicate\" | \"fraudulent\" | \"merchandise_not_as_described\" | \"not_received\" | \"other\" | \"service_not_as_described\",\n    service_not_as_described?: ({\n    additional_documentation?: (string | \"\"),\n    canceled_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    cancellation_reason?: string,\n  /** @maxLength 1500 */\n    explanation?: string,\n    received_at?: (number | \"\"),\n\n} | \"\"),\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.\n   * @maxLength 5000\n   */\n    transaction?: string,\n  /**\n   * treasury_param\n   * Params for disputes related to Treasury FinancialAccounts\n   */\n    treasury?: {\n  /** @maxLength 5000 */\n    received_debit: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "IssuingDispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/disputes/{dispute}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingDispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/disputes/{dispute}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The dispute amount in the card's currency and in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). */\n    amount?: number,\n  /**\n   * evidence_param\n   * Evidence provided for the dispute.\n   */\n    evidence?: {\n    canceled?: ({\n    additional_documentation?: (string | \"\"),\n    canceled_at?: (number | \"\"),\n    cancellation_policy_provided?: (boolean | \"\"),\n  /** @maxLength 1500 */\n    cancellation_reason?: string,\n    expected_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n    return_status?: \"\" | \"merchant_rejected\" | \"successful\",\n    returned_at?: (number | \"\"),\n\n} | \"\"),\n    duplicate?: ({\n    additional_documentation?: (string | \"\"),\n    card_statement?: (string | \"\"),\n    cash_receipt?: (string | \"\"),\n    check_image?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 5000 */\n    original_transaction?: string,\n\n} | \"\"),\n    fraudulent?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n\n} | \"\"),\n    merchandise_not_as_described?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n    received_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    return_description?: string,\n    return_status?: \"\" | \"merchant_rejected\" | \"successful\",\n    returned_at?: (number | \"\"),\n\n} | \"\"),\n    not_received?: ({\n    additional_documentation?: (string | \"\"),\n    expected_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n\n} | \"\"),\n    other?: ({\n    additional_documentation?: (string | \"\"),\n  /** @maxLength 1500 */\n    explanation?: string,\n  /** @maxLength 1500 */\n    product_description?: string,\n    product_type?: \"\" | \"merchandise\" | \"service\",\n\n} | \"\"),\n    reason?: \"canceled\" | \"duplicate\" | \"fraudulent\" | \"merchandise_not_as_described\" | \"not_received\" | \"other\" | \"service_not_as_described\",\n    service_not_as_described?: ({\n    additional_documentation?: (string | \"\"),\n    canceled_at?: (number | \"\"),\n  /** @maxLength 1500 */\n    cancellation_reason?: string,\n  /** @maxLength 1500 */\n    explanation?: string,\n    received_at?: (number | \"\"),\n\n} | \"\"),\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingDispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/disputes/{dispute}/submit": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".dispute": {
        "rendered": " dispute: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingDispute",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/settlements": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return issuing settlements that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** Only return issuing settlements that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingSettlement)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/settlements\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/settlements/{settlement}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".settlement": {
        "rendered": " settlement: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingSettlement",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/settlements/{settlement}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".settlement": {
        "rendered": " settlement: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingSettlement",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/transactions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return transactions that belong to the given card. */\n card?: string, \n/** Only return transactions that belong to the given cardholder. */\n cardholder?: string, \n/** Only return transactions that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return transactions that have the given type. One of `capture` or `refund`. */\n type?: \"capture\" | \"refund\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.card": {
        "rendered": "\n/** Only return transactions that belong to the given card. */\n card?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.cardholder": {
        "rendered": "\n/** Only return transactions that belong to the given cardholder. */\n cardholder?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** Only return transactions that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** Only return transactions that have the given type. One of `capture` or `refund`. */\n type?: \"capture\" | \"refund\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (IssuingTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/issuing/transactions\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/issuing/transactions/{transaction}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".transaction": {
        "rendered": " transaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/issuing/transactions/{transaction}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".transaction": {
        "rendered": " transaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/link_account_sessions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * accountholder_params\n   * The account holder to link accounts for.\n   */\n    account_holder: {\n  /** @maxLength 5000 */\n    account?: string,\n  /** @maxLength 5000 */\n    customer?: string,\n    type: \"account\" | \"customer\",\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * filters_params\n   * Filters to restrict the kinds of accounts to collect.\n   */\n    filters?: {\n    countries: (string)[],\n\n},\n  /**\n   * List of data features that you would like to request access to.\n   * \n   * Possible values are `balances`, `transactions`, `ownership`, and `payment_method`.\n   */\n    permissions: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /**\n   * For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.\n   * @maxLength 5000\n   */\n    return_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/link_account_sessions/{session}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".session": {
        "rendered": " session: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsSession",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/linked_accounts": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive. */\n account_holder?: {  account?: string,  customer?: string, }, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** If present, only return accounts that were collected as part of the given session. */\n session?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder": {
        "rendered": "\n/** If present, only return accounts that belong to the specified account holder. `account_holder[customer]` and `account_holder[account]` are mutually exclusive. */\n account_holder?: {  account?: string,  customer?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder.account": {
        "rendered": " account?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.account_holder.customer": {
        "rendered": " customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.session": {
        "rendered": "\n/** If present, only return accounts that were collected as part of the given session. */\n session?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FinancialConnectionsAccount)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/financial_connections/accounts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/linked_accounts/{account}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/linked_accounts/{account}/disconnect": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/linked_accounts/{account}/owners": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The ID of the ownership object to fetch owners from. */\n ownership: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ownership": {
        "rendered": "\n/** The ID of the ownership object to fetch owners from. */\n ownership: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (FinancialConnectionsAccountOwner)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/linked_accounts/{account}/refresh": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The list of account features that you would like to refresh. */\n    features: (\"balance\" | \"ownership\")[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".account": {
        "rendered": " account: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "FinancialConnectionsAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/mandates/{mandate}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".mandate": {
        "rendered": " mandate: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Mandate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_intents": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return PaymentIntents for the customer specified by this customer ID. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return PaymentIntents for the customer specified by this customer ID. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PaymentIntent)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/payment_intents\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99). */\n    amount: number,\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts). */\n    application_fee_amount?: number,\n  /**\n   * automatic_payment_methods_param\n   * When enabled, this PaymentIntent will accept payment methods that you have enabled in the Dashboard and are compatible with this PaymentIntent's other parameters.\n   */\n    automatic_payment_methods?: {\n    enabled: boolean,\n\n},\n  /** Controls when the funds will be captured from the customer's account. */\n    capture_method?: \"automatic\" | \"manual\",\n  /** Set to `true` to attempt to [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, parameters available in the [confirm](https://stripe.com/docs/api/payment_intents/confirm) API may also be provided. */\n    confirm?: boolean,\n    confirmation_method?: \"automatic\" | \"manual\",\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * ID of the Customer this PaymentIntent belongs to, if one exists.\n   * \n   * Payment methods attached to other Customers cannot be used with this PaymentIntent.\n   * \n   * If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 1000\n   */\n    description?: string,\n  /** Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm). */\n    error_on_requires_action?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * ID of the mandate to be used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).\n   * @maxLength 5000\n   */\n    mandate?: string,\n  /**\n   * secret_key_param\n   * This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).\n   */\n    mandate_data?: {\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** @format unix-time */\n    accepted_at?: number,\n  /** offline_param */\n    offline?: hasuraSdk.JSONValue,\n  /** online_param */\n    online?: {\n    ip_address: string,\n  /** @maxLength 5000 */\n    user_agent: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"offline\" | \"online\",\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm). */\n    off_session?: (boolean | \"one_off\" | \"recurring\"),\n  /** The Stripe account ID for which these funds are intended. For details, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts). */\n    on_behalf_of?: string,\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.\n   * \n   * If this parameter is omitted with `confirm=true`, `customer.default_source` will be attached as this PaymentIntent's payment instrument to improve the migration experience for users of the Charges API. We recommend that you explicitly provide the `payment_method` going forward.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\n   * in the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\n   * property on the PaymentIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this PaymentIntent.\n   */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** payment_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    affirm?: ({\n    capture_method?: \"\" | \"manual\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    afterpay_clearpay?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 128 */\n    reference?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    alipay?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    au_becs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bacs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    blik?: ({\n  /** @maxLength 5000 */\n    code?: string,\n\n} | \"\"),\n    boleto?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    card?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    cvc_token?: string,\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n    plan?: ({\n    count: number,\n    interval: \"month\",\n    type: \"fixed_count\",\n\n} | \"\"),\n\n},\n  /** mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    statement_descriptor_suffix_kana?: (string | \"\"),\n    statement_descriptor_suffix_kanji?: (string | \"\"),\n\n} | \"\"),\n    card_present?: ({\n    request_extended_authorization?: boolean,\n    request_incremental_authorization_support?: boolean,\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_params */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    requested_address_types?: (\"iban\" | \"sepa\" | \"sort_code\" | \"spei\" | \"zengin\")[],\n    type: \"eu_bank_transfer\" | \"gb_bank_transfer\" | \"jp_bank_transfer\" | \"mx_bank_transfer\",\n\n},\n    funding_type?: \"bank_transfer\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    eps?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    fpx?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    giropay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    grabpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    ideal?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    interac_present?: (hasuraSdk.JSONValue | \"\"),\n    klarna?: ({\n    capture_method?: \"\" | \"manual\",\n    preferred_locale?: \"cs-CZ\" | \"da-DK\" | \"de-AT\" | \"de-CH\" | \"de-DE\" | \"el-GR\" | \"en-AT\" | \"en-AU\" | \"en-BE\" | \"en-CA\" | \"en-CH\" | \"en-CZ\" | \"en-DE\" | \"en-DK\" | \"en-ES\" | \"en-FI\" | \"en-FR\" | \"en-GB\" | \"en-GR\" | \"en-IE\" | \"en-IT\" | \"en-NL\" | \"en-NO\" | \"en-NZ\" | \"en-PL\" | \"en-PT\" | \"en-SE\" | \"en-US\" | \"es-ES\" | \"es-US\" | \"fi-FI\" | \"fr-BE\" | \"fr-CA\" | \"fr-CH\" | \"fr-FR\" | \"it-CH\" | \"it-IT\" | \"nb-NO\" | \"nl-BE\" | \"nl-NL\" | \"pl-PL\" | \"pt-PT\" | \"sv-FI\" | \"sv-SE\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    konbini?: ({\n  /** @maxLength 11 */\n    confirmation_number?: string,\n    expires_after_days?: (number | \"\"),\n    expires_at?: (number | \"\"),\n  /** @maxLength 22 */\n    product_description?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    link?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    persistent_token?: string,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    oxxo?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    \"p24\"?: ({\n    setup_future_usage?: \"none\",\n    tos_shown_and_accepted?: boolean,\n\n} | \"\"),\n    paynow?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    pix?: ({\n    expires_after_seconds?: number,\n  /** @format unix-time */\n    expires_at?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    promptpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    sepa_debit?: ({\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    sofort?: ({\n    preferred_language?: \"\" | \"de\" | \"en\" | \"es\" | \"fr\" | \"it\" | \"nl\" | \"pl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    us_bank_account?: ({\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    wechat_pay?: ({\n  /** @maxLength 5000 */\n    app_id?: string,\n    client: \"android\" | \"ios\" | \"web\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n\n},\n  /** The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. If this is not provided, defaults to [\"card\"]. Use automatic_payment_methods to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods). */\n    payment_method_types?: (string)[],\n  /**\n   * radar_options\n   * Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.\n   */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails). */\n    receipt_email?: string,\n  /** The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm). */\n    return_url?: string,\n  /**\n   * Indicates that you intend to make future payments with this PaymentIntent's payment method.\n   * \n   * Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n   * \n   * When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n   */\n    setup_future_usage?: \"off_session\" | \"on_session\",\n  /**\n   * optional_fields_shipping\n   * Shipping information for this PaymentIntent.\n   */\n    shipping?: {\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n  /**\n   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.\n   * @maxLength 22\n   */\n    statement_descriptor_suffix?: string,\n  /**\n   * transfer_data_creation_params\n   * The parameters used to automatically create a Transfer when the payment succeeds.\n   * For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).\n   */\n    transfer_data?: {\n    amount?: number,\n    destination: string,\n\n},\n  /** A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details. */\n    transfer_group?: string,\n  /** Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps. */\n    use_stripe_sdk?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_intents/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for payment intents](https://stripe.com/docs/search#query-fields-for-payment-intents). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for payment intents](https://stripe.com/docs/search#query-fields-for-payment-intents). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PaymentIntent)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_intents/{intent}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source. */\n client_secret?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.client_secret": {
        "rendered": "\n/** The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source. */\n client_secret?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99). */\n    amount?: number,\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts). */\n    application_fee_amount?: (number | \"\"),\n  /** Controls when the funds will be captured from the customer's account. */\n    capture_method?: \"automatic\" | \"manual\",\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * ID of the Customer this PaymentIntent belongs to, if one exists.\n   * \n   * Payment methods attached to other Customers cannot be used with this PaymentIntent.\n   * \n   * If present in combination with [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage), this PaymentIntent's payment method will be attached to the Customer after the PaymentIntent has been confirmed and any required actions from the user are complete.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 1000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\n   * in the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\n   * property on the PaymentIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this PaymentIntent.\n   */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** payment_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    affirm?: ({\n    capture_method?: \"\" | \"manual\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    afterpay_clearpay?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 128 */\n    reference?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    alipay?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    au_becs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bacs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    blik?: ({\n  /** @maxLength 5000 */\n    code?: string,\n\n} | \"\"),\n    boleto?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    card?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    cvc_token?: string,\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n    plan?: ({\n    count: number,\n    interval: \"month\",\n    type: \"fixed_count\",\n\n} | \"\"),\n\n},\n  /** mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    statement_descriptor_suffix_kana?: (string | \"\"),\n    statement_descriptor_suffix_kanji?: (string | \"\"),\n\n} | \"\"),\n    card_present?: ({\n    request_extended_authorization?: boolean,\n    request_incremental_authorization_support?: boolean,\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_params */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    requested_address_types?: (\"iban\" | \"sepa\" | \"sort_code\" | \"spei\" | \"zengin\")[],\n    type: \"eu_bank_transfer\" | \"gb_bank_transfer\" | \"jp_bank_transfer\" | \"mx_bank_transfer\",\n\n},\n    funding_type?: \"bank_transfer\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    eps?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    fpx?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    giropay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    grabpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    ideal?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    interac_present?: (hasuraSdk.JSONValue | \"\"),\n    klarna?: ({\n    capture_method?: \"\" | \"manual\",\n    preferred_locale?: \"cs-CZ\" | \"da-DK\" | \"de-AT\" | \"de-CH\" | \"de-DE\" | \"el-GR\" | \"en-AT\" | \"en-AU\" | \"en-BE\" | \"en-CA\" | \"en-CH\" | \"en-CZ\" | \"en-DE\" | \"en-DK\" | \"en-ES\" | \"en-FI\" | \"en-FR\" | \"en-GB\" | \"en-GR\" | \"en-IE\" | \"en-IT\" | \"en-NL\" | \"en-NO\" | \"en-NZ\" | \"en-PL\" | \"en-PT\" | \"en-SE\" | \"en-US\" | \"es-ES\" | \"es-US\" | \"fi-FI\" | \"fr-BE\" | \"fr-CA\" | \"fr-CH\" | \"fr-FR\" | \"it-CH\" | \"it-IT\" | \"nb-NO\" | \"nl-BE\" | \"nl-NL\" | \"pl-PL\" | \"pt-PT\" | \"sv-FI\" | \"sv-SE\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    konbini?: ({\n  /** @maxLength 11 */\n    confirmation_number?: string,\n    expires_after_days?: (number | \"\"),\n    expires_at?: (number | \"\"),\n  /** @maxLength 22 */\n    product_description?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    link?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    persistent_token?: string,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    oxxo?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    \"p24\"?: ({\n    setup_future_usage?: \"none\",\n    tos_shown_and_accepted?: boolean,\n\n} | \"\"),\n    paynow?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    pix?: ({\n    expires_after_seconds?: number,\n  /** @format unix-time */\n    expires_at?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    promptpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    sepa_debit?: ({\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    sofort?: ({\n    preferred_language?: \"\" | \"de\" | \"en\" | \"es\" | \"fr\" | \"it\" | \"nl\" | \"pl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    us_bank_account?: ({\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    wechat_pay?: ({\n  /** @maxLength 5000 */\n    app_id?: string,\n    client: \"android\" | \"ios\" | \"web\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n\n},\n  /** The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. Use automatic_payment_methods to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods). */\n    payment_method_types?: (string)[],\n  /** Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails). */\n    receipt_email?: (string | \"\"),\n  /**\n   * Indicates that you intend to make future payments with this PaymentIntent's payment method.\n   * \n   * Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n   * \n   * When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n   * \n   * If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.\n   */\n    setup_future_usage?: \"\" | \"off_session\" | \"on_session\",\n  /** Shipping information for this PaymentIntent. */\n    shipping?: ({\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n} | \"\"),\n  /**\n   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.\n   * @maxLength 22\n   */\n    statement_descriptor_suffix?: string,\n  /**\n   * transfer_data_update_params\n   * The parameters used to automatically create a Transfer when the payment succeeds. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).\n   */\n    transfer_data?: {\n    amount?: number,\n\n},\n  /** A string that identifies the resulting payment as part of a group. `transfer_group` may only be provided if it has not been set. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details. */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/apply_customer_balance": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * Amount intended to be applied to this PaymentIntent from the customer’s cash balance.\n   * \n   * A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).\n   * \n   * The maximum amount is the amount of the PaymentIntent.\n   * \n   * When omitted, the amount defaults to the remaining amount requested on the PaymentIntent.\n   */\n    amount?: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * Reason for canceling this PaymentIntent. Possible values are `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`\n   * @maxLength 5000\n   */\n    cancellation_reason?: \"abandoned\" | \"duplicate\" | \"fraudulent\" | \"requested_by_customer\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/capture": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount_capturable` if not provided. */\n    amount_to_capture?: number,\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts). */\n    application_fee_amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.\n   * @maxLength 22\n   */\n    statement_descriptor_suffix?: string,\n  /**\n   * transfer_data_update_params\n   * The parameters used to automatically create a Transfer when the payment\n   * is captured. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).\n   */\n    transfer_data?: {\n    amount?: number,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/confirm": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Controls when the funds will be captured from the customer's account. */\n    capture_method?: \"automatic\" | \"manual\",\n  /**\n   * The client secret of the PaymentIntent.\n   * @maxLength 5000\n   */\n    client_secret?: string,\n  /** Set to `true` to fail the payment attempt if the PaymentIntent transitions into `requires_action`. This parameter is intended for simpler integrations that do not handle customer actions, like [saving cards without authentication](https://stripe.com/docs/payments/save-card-without-authentication). */\n    error_on_requires_action?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * ID of the mandate to be used for this payment.\n   * @maxLength 5000\n   */\n    mandate?: string,\n  /** This hash contains details about the Mandate to create */\n    mandate_data?: ({\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** @format unix-time */\n    accepted_at?: number,\n  /** offline_param */\n    offline?: hasuraSdk.JSONValue,\n  /** online_param */\n    online?: {\n    ip_address: string,\n  /** @maxLength 5000 */\n    user_agent: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"offline\" | \"online\",\n\n},\n\n} | {\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** online_param */\n    online: {\n    ip_address?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"online\",\n\n},\n\n}),\n  /** Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). */\n    off_session?: (boolean | \"one_off\" | \"recurring\"),\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods/transitioning#compatibility) object) to attach to this PaymentIntent.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * If provided, this hash will be used to create a PaymentMethod. The new PaymentMethod will appear\n   * in the [payment_method](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-payment_method)\n   * property on the PaymentIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this PaymentIntent.\n   */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** payment_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    affirm?: ({\n    capture_method?: \"\" | \"manual\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    afterpay_clearpay?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 128 */\n    reference?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    alipay?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    au_becs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bacs_debit?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    blik?: ({\n  /** @maxLength 5000 */\n    code?: string,\n\n} | \"\"),\n    boleto?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    card?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    cvc_token?: string,\n  /** installments_param */\n    installments?: {\n    enabled?: boolean,\n    plan?: ({\n    count: number,\n    interval: \"month\",\n    type: \"fixed_count\",\n\n} | \"\"),\n\n},\n  /** mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    statement_descriptor_suffix_kana?: (string | \"\"),\n    statement_descriptor_suffix_kanji?: (string | \"\"),\n\n} | \"\"),\n    card_present?: ({\n    request_extended_authorization?: boolean,\n    request_incremental_authorization_support?: boolean,\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_params */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    requested_address_types?: (\"iban\" | \"sepa\" | \"sort_code\" | \"spei\" | \"zengin\")[],\n    type: \"eu_bank_transfer\" | \"gb_bank_transfer\" | \"jp_bank_transfer\" | \"mx_bank_transfer\",\n\n},\n    funding_type?: \"bank_transfer\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    eps?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    fpx?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    giropay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    grabpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    ideal?: ({\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    interac_present?: (hasuraSdk.JSONValue | \"\"),\n    klarna?: ({\n    capture_method?: \"\" | \"manual\",\n    preferred_locale?: \"cs-CZ\" | \"da-DK\" | \"de-AT\" | \"de-CH\" | \"de-DE\" | \"el-GR\" | \"en-AT\" | \"en-AU\" | \"en-BE\" | \"en-CA\" | \"en-CH\" | \"en-CZ\" | \"en-DE\" | \"en-DK\" | \"en-ES\" | \"en-FI\" | \"en-FR\" | \"en-GB\" | \"en-GR\" | \"en-IE\" | \"en-IT\" | \"en-NL\" | \"en-NO\" | \"en-NZ\" | \"en-PL\" | \"en-PT\" | \"en-SE\" | \"en-US\" | \"es-ES\" | \"es-US\" | \"fi-FI\" | \"fr-BE\" | \"fr-CA\" | \"fr-CH\" | \"fr-FR\" | \"it-CH\" | \"it-IT\" | \"nb-NO\" | \"nl-BE\" | \"nl-NL\" | \"pl-PL\" | \"pt-PT\" | \"sv-FI\" | \"sv-SE\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    konbini?: ({\n  /** @maxLength 11 */\n    confirmation_number?: string,\n    expires_after_days?: (number | \"\"),\n    expires_at?: (number | \"\"),\n  /** @maxLength 22 */\n    product_description?: string,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    link?: ({\n    capture_method?: \"\" | \"manual\",\n  /** @maxLength 5000 */\n    persistent_token?: string,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    oxxo?: ({\n    expires_after_days?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    \"p24\"?: ({\n    setup_future_usage?: \"none\",\n    tos_shown_and_accepted?: boolean,\n\n} | \"\"),\n    paynow?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    pix?: ({\n    expires_after_seconds?: number,\n  /** @format unix-time */\n    expires_at?: number,\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    promptpay?: ({\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n    sepa_debit?: ({\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n\n} | \"\"),\n    sofort?: ({\n    preferred_language?: \"\" | \"de\" | \"en\" | \"es\" | \"fr\" | \"it\" | \"nl\" | \"pl\",\n    setup_future_usage?: \"\" | \"none\" | \"off_session\",\n\n} | \"\"),\n    us_bank_account?: ({\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    setup_future_usage?: \"\" | \"none\" | \"off_session\" | \"on_session\",\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    wechat_pay?: ({\n  /** @maxLength 5000 */\n    app_id?: string,\n    client: \"android\" | \"ios\" | \"web\",\n    setup_future_usage?: \"none\",\n\n} | \"\"),\n\n},\n  /** The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. Use automatic_payment_methods to manage payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods). */\n    payment_method_types?: (string)[],\n  /**\n   * radar_options\n   * Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.\n   */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** Email address that the receipt for the resulting payment will be sent to. If `receipt_email` is specified for a payment in live mode, a receipt will be sent regardless of your [email settings](https://dashboard.stripe.com/account/emails). */\n    receipt_email?: (string | \"\"),\n  /**\n   * The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.\n   * If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.\n   * This parameter is only used for cards and other redirect-based payment methods.\n   */\n    return_url?: string,\n  /**\n   * Indicates that you intend to make future payments with this PaymentIntent's payment method.\n   * \n   * Providing this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n   * \n   * When processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n   * \n   * If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.\n   */\n    setup_future_usage?: \"\" | \"off_session\" | \"on_session\",\n  /** Shipping information for this PaymentIntent. */\n    shipping?: ({\n  /** optional_fields_address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n} | \"\"),\n  /** Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps. */\n    use_stripe_sdk?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/increment_authorization": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The updated total amount you intend to collect from the cardholder. This amount must be greater than the currently authorized amount. */\n    amount: number,\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. The amount of the application fee collected will be capped at the total payment amount. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts). */\n    application_fee_amount?: number,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 1000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * For non-card charges, you can use this value as the complete description that appears on your customers’ statements. Must contain at least one letter, maximum 22 characters.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /**\n   * transfer_data_update_params\n   * The parameters used to automatically create a Transfer when the payment is captured.\n   * For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).\n   */\n    transfer_data?: {\n    amount?: number,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_intents/{intent}/verify_microdeposits": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account. */\n    amounts?: (number)[],\n  /**\n   * The client secret of the PaymentIntent.\n   * @maxLength 5000\n   */\n    client_secret?: string,\n  /**\n   * A six-character code starting with SM present in the microdeposit sent to the bank account.\n   * @maxLength 5000\n   */\n    descriptor_code?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_links": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return payment links that are active or inactive (e.g., pass `false` to list all inactive payment links). */\n active?: boolean, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.active": {
        "rendered": "\n/** Only return payment links that are active or inactive (e.g., pass `false` to list all inactive payment links). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PaymentLink)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/payment_links\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_links": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * after_completion_params\n   * Behavior after the purchase is complete.\n   */\n    after_completion?: {\n  /** after_completion_confirmation_page_params */\n    hosted_confirmation?: {\n  /** @maxLength 500 */\n    custom_message?: string,\n\n},\n  /** after_completion_redirect_params */\n    redirect?: {\n  /** @maxLength 2048 */\n    url: string,\n\n},\n    type: \"hosted_confirmation\" | \"redirect\",\n\n},\n  /** Enables user redeemable promotion codes. */\n    allow_promotion_codes?: boolean,\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Can only be applied when there are no line items with recurring prices. */\n    application_fee_amount?: number,\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field. */\n    application_fee_percent?: number,\n  /**\n   * automatic_tax_params\n   * Configuration for automatic tax collection.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Configuration for collecting the customer's billing address. */\n    billing_address_collection?: \"auto\" | \"required\",\n  /**\n   * consent_collection_params\n   * Configure fields to gather active consent from customers.\n   */\n    consent_collection?: {\n    promotions?: \"auto\" | \"none\",\n    terms_of_service?: \"none\" | \"required\",\n\n},\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies) and supported by each line item's price. */\n    currency?: string,\n  /** Collect additional information from your customer using custom fields. Up to 2 fields are supported. */\n    custom_fields?: ({\n  /** custom_field_dropdown_param */\n    dropdown?: {\n    options: ({\n  /** @maxLength 100 */\n    label: string,\n  /** @maxLength 100 */\n    value: string,\n\n})[],\n\n},\n  /** @maxLength 200 */\n    key: string,\n  /** custom_field_label_param */\n    label: {\n  /** @maxLength 50 */\n    custom: string,\n    type: \"custom\",\n\n},\n    optional?: boolean,\n    type: \"dropdown\" | \"numeric\" | \"text\",\n\n})[],\n  /**\n   * custom_text_param\n   * Display additional text for your customers using custom text.\n   */\n    custom_text?: {\n    shipping_address?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n    submit?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n\n},\n  /** Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers). */\n    customer_creation?: \"always\" | \"if_required\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * invoice_creation_create_params\n   * Generate a post-purchase Invoice for one-time payments.\n   */\n    invoice_creation?: {\n    enabled: boolean,\n  /** invoice_settings_params */\n    invoice_data?: {\n    account_tax_ids?: ((string)[] | \"\"),\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** @maxLength 1500 */\n    description?: string,\n  /** @maxLength 5000 */\n    footer?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n\n},\n\n},\n  /** The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported. */\n    line_items: ({\n  /** adjustable_quantity_params */\n    adjustable_quantity?: {\n    enabled: boolean,\n    maximum?: number,\n    minimum?: number,\n\n},\n  /** @maxLength 5000 */\n    price: string,\n    quantity: number,\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The account on behalf of which to charge. */\n    on_behalf_of?: string,\n  /**\n   * payment_intent_data_params\n   * A subset of parameters to be passed to PaymentIntent creation for Checkout Sessions in `payment` mode.\n   */\n    payment_intent_data?: {\n    capture_method?: \"automatic\" | \"manual\",\n    setup_future_usage?: \"off_session\" | \"on_session\",\n\n},\n  /**\n   * Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.\n   * \n   * Can only be set in `subscription` mode.\n   * \n   * If you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).\n   */\n    payment_method_collection?: \"always\" | \"if_required\",\n  /** The list of payment method types that customers can use. If no value is passed, Stripe will dynamically show relevant payment methods from your [payment method settings](https://dashboard.stripe.com/settings/payment_methods) (20+ payment methods [supported](https://stripe.com/docs/payments/payment-methods/integration-options#payment-method-product-support)). */\n    payment_method_types?: (\"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[],\n  /**\n   * phone_number_collection_params\n   * Controls phone number collection settings during checkout.\n   * \n   * We recommend that you review your privacy policy and check with your legal contacts.\n   */\n    phone_number_collection?: {\n    enabled: boolean,\n\n},\n  /**\n   * shipping_address_collection_params\n   * Configuration for collecting the customer's shipping address.\n   */\n    shipping_address_collection?: {\n    allowed_countries: (\"AC\" | \"AD\" | \"AE\" | \"AF\" | \"AG\" | \"AI\" | \"AL\" | \"AM\" | \"AO\" | \"AQ\" | \"AR\" | \"AT\" | \"AU\" | \"AW\" | \"AX\" | \"AZ\" | \"BA\" | \"BB\" | \"BD\" | \"BE\" | \"BF\" | \"BG\" | \"BH\" | \"BI\" | \"BJ\" | \"BL\" | \"BM\" | \"BN\" | \"BO\" | \"BQ\" | \"BR\" | \"BS\" | \"BT\" | \"BV\" | \"BW\" | \"BY\" | \"BZ\" | \"CA\" | \"CD\" | \"CF\" | \"CG\" | \"CH\" | \"CI\" | \"CK\" | \"CL\" | \"CM\" | \"CN\" | \"CO\" | \"CR\" | \"CV\" | \"CW\" | \"CY\" | \"CZ\" | \"DE\" | \"DJ\" | \"DK\" | \"DM\" | \"DO\" | \"DZ\" | \"EC\" | \"EE\" | \"EG\" | \"EH\" | \"ER\" | \"ES\" | \"ET\" | \"FI\" | \"FJ\" | \"FK\" | \"FO\" | \"FR\" | \"GA\" | \"GB\" | \"GD\" | \"GE\" | \"GF\" | \"GG\" | \"GH\" | \"GI\" | \"GL\" | \"GM\" | \"GN\" | \"GP\" | \"GQ\" | \"GR\" | \"GS\" | \"GT\" | \"GU\" | \"GW\" | \"GY\" | \"HK\" | \"HN\" | \"HR\" | \"HT\" | \"HU\" | \"ID\" | \"IE\" | \"IL\" | \"IM\" | \"IN\" | \"IO\" | \"IQ\" | \"IS\" | \"IT\" | \"JE\" | \"JM\" | \"JO\" | \"JP\" | \"KE\" | \"KG\" | \"KH\" | \"KI\" | \"KM\" | \"KN\" | \"KR\" | \"KW\" | \"KY\" | \"KZ\" | \"LA\" | \"LB\" | \"LC\" | \"LI\" | \"LK\" | \"LR\" | \"LS\" | \"LT\" | \"LU\" | \"LV\" | \"LY\" | \"MA\" | \"MC\" | \"MD\" | \"ME\" | \"MF\" | \"MG\" | \"MK\" | \"ML\" | \"MM\" | \"MN\" | \"MO\" | \"MQ\" | \"MR\" | \"MS\" | \"MT\" | \"MU\" | \"MV\" | \"MW\" | \"MX\" | \"MY\" | \"MZ\" | \"NA\" | \"NC\" | \"NE\" | \"NG\" | \"NI\" | \"NL\" | \"NO\" | \"NP\" | \"NR\" | \"NU\" | \"NZ\" | \"OM\" | \"PA\" | \"PE\" | \"PF\" | \"PG\" | \"PH\" | \"PK\" | \"PL\" | \"PM\" | \"PN\" | \"PR\" | \"PS\" | \"PT\" | \"PY\" | \"QA\" | \"RE\" | \"RO\" | \"RS\" | \"RU\" | \"RW\" | \"SA\" | \"SB\" | \"SC\" | \"SE\" | \"SG\" | \"SH\" | \"SI\" | \"SJ\" | \"SK\" | \"SL\" | \"SM\" | \"SN\" | \"SO\" | \"SR\" | \"SS\" | \"ST\" | \"SV\" | \"SX\" | \"SZ\" | \"TA\" | \"TC\" | \"TD\" | \"TF\" | \"TG\" | \"TH\" | \"TJ\" | \"TK\" | \"TL\" | \"TM\" | \"TN\" | \"TO\" | \"TR\" | \"TT\" | \"TV\" | \"TW\" | \"TZ\" | \"UA\" | \"UG\" | \"US\" | \"UY\" | \"UZ\" | \"VA\" | \"VC\" | \"VE\" | \"VG\" | \"VN\" | \"VU\" | \"WF\" | \"WS\" | \"XK\" | \"YE\" | \"YT\" | \"ZA\" | \"ZM\" | \"ZW\" | \"ZZ\")[],\n\n},\n  /** The shipping rate options to apply to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link. */\n    shipping_options?: ({\n  /** @maxLength 5000 */\n    shipping_rate?: string,\n\n})[],\n  /** Describes the type of transaction being performed in order to customize relevant text on the page, such as the submit button. Changing this value will also affect the hostname in the [url](https://stripe.com/docs/api/payment_links/payment_links/object#url) property (example: `donate.stripe.com`). */\n    submit_type?: \"auto\" | \"book\" | \"donate\" | \"pay\",\n  /**\n   * subscription_data_params\n   * When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.\n   */\n    subscription_data?: {\n  /** @maxLength 500 */\n    description?: string,\n    trial_period_days?: number,\n\n},\n  /**\n   * tax_id_collection_params\n   * Controls tax ID collection during checkout.\n   */\n    tax_id_collection?: {\n    enabled: boolean,\n\n},\n  /**\n   * transfer_data_params\n   * The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.\n   */\n    transfer_data?: {\n    amount?: number,\n    destination: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PaymentLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_links/{payment_link}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentLink": {
        "rendered": " paymentLink: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_links/{payment_link}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated. */\n    active?: boolean,\n  /**\n   * after_completion_params\n   * Behavior after the purchase is complete.\n   */\n    after_completion?: {\n  /** after_completion_confirmation_page_params */\n    hosted_confirmation?: {\n  /** @maxLength 500 */\n    custom_message?: string,\n\n},\n  /** after_completion_redirect_params */\n    redirect?: {\n  /** @maxLength 2048 */\n    url: string,\n\n},\n    type: \"hosted_confirmation\" | \"redirect\",\n\n},\n  /** Enables user redeemable promotion codes. */\n    allow_promotion_codes?: boolean,\n  /**\n   * automatic_tax_params\n   * Configuration for automatic tax collection.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Configuration for collecting the customer's billing address. */\n    billing_address_collection?: \"auto\" | \"required\",\n  /** Collect additional information from your customer using custom fields. Up to 2 fields are supported. */\n    custom_fields?: (({\n  /** custom_field_dropdown_param */\n    dropdown?: {\n    options: ({\n  /** @maxLength 100 */\n    label: string,\n  /** @maxLength 100 */\n    value: string,\n\n})[],\n\n},\n  /** @maxLength 200 */\n    key: string,\n  /** custom_field_label_param */\n    label: {\n  /** @maxLength 50 */\n    custom: string,\n    type: \"custom\",\n\n},\n    optional?: boolean,\n    type: \"dropdown\" | \"numeric\" | \"text\",\n\n})[] | \"\"),\n  /**\n   * custom_text_param\n   * Display additional text for your customers using custom text.\n   */\n    custom_text?: {\n    shipping_address?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n    submit?: ({\n  /** @maxLength 1000 */\n    message: string,\n\n} | \"\"),\n\n},\n  /** Configures whether [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link create a [Customer](https://stripe.com/docs/api/customers). */\n    customer_creation?: \"always\" | \"if_required\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * invoice_creation_update_params\n   * Generate a post-purchase Invoice for one-time payments.\n   */\n    invoice_creation?: {\n    enabled: boolean,\n  /** invoice_settings_params */\n    invoice_data?: {\n    account_tax_ids?: ((string)[] | \"\"),\n    custom_fields?: (({\n  /** @maxLength 30 */\n    name: string,\n  /** @maxLength 30 */\n    value: string,\n\n})[] | \"\"),\n  /** @maxLength 1500 */\n    description?: string,\n  /** @maxLength 5000 */\n    footer?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n    rendering_options?: ({\n    amount_tax_display?: \"\" | \"exclude_tax\" | \"include_inclusive_tax\",\n\n} | \"\"),\n\n},\n\n},\n  /** The line items representing what is being sold. Each line item represents an item being sold. Up to 20 line items are supported. */\n    line_items?: ({\n  /** adjustable_quantity_params */\n    adjustable_quantity?: {\n    enabled: boolean,\n    maximum?: number,\n    minimum?: number,\n\n},\n  /** @maxLength 5000 */\n    id: string,\n    quantity?: number,\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. Metadata associated with this Payment Link will automatically be copied to [checkout sessions](https://stripe.com/docs/api/checkout/sessions) created by this payment link. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Specify whether Checkout should collect a payment method. When set to `if_required`, Checkout will not collect a payment method when the total due for the session is 0.This may occur if the Checkout Session includes a free trial or a discount.\n   * \n   * Can only be set in `subscription` mode.\n   * \n   * If you'd like information on how to collect a payment method outside of Checkout, read the guide on [configuring subscriptions with a free trial](https://stripe.com/docs/payments/checkout/free-trials).\n   */\n    payment_method_collection?: \"always\" | \"if_required\",\n  /** The list of payment method types that customers can use. Pass an empty string to enable automatic payment methods that use your [payment method settings](https://dashboard.stripe.com/settings/payment_methods). */\n    payment_method_types?: ((\"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n  /** Configuration for collecting the customer's shipping address. */\n    shipping_address_collection?: ({\n    allowed_countries: (\"AC\" | \"AD\" | \"AE\" | \"AF\" | \"AG\" | \"AI\" | \"AL\" | \"AM\" | \"AO\" | \"AQ\" | \"AR\" | \"AT\" | \"AU\" | \"AW\" | \"AX\" | \"AZ\" | \"BA\" | \"BB\" | \"BD\" | \"BE\" | \"BF\" | \"BG\" | \"BH\" | \"BI\" | \"BJ\" | \"BL\" | \"BM\" | \"BN\" | \"BO\" | \"BQ\" | \"BR\" | \"BS\" | \"BT\" | \"BV\" | \"BW\" | \"BY\" | \"BZ\" | \"CA\" | \"CD\" | \"CF\" | \"CG\" | \"CH\" | \"CI\" | \"CK\" | \"CL\" | \"CM\" | \"CN\" | \"CO\" | \"CR\" | \"CV\" | \"CW\" | \"CY\" | \"CZ\" | \"DE\" | \"DJ\" | \"DK\" | \"DM\" | \"DO\" | \"DZ\" | \"EC\" | \"EE\" | \"EG\" | \"EH\" | \"ER\" | \"ES\" | \"ET\" | \"FI\" | \"FJ\" | \"FK\" | \"FO\" | \"FR\" | \"GA\" | \"GB\" | \"GD\" | \"GE\" | \"GF\" | \"GG\" | \"GH\" | \"GI\" | \"GL\" | \"GM\" | \"GN\" | \"GP\" | \"GQ\" | \"GR\" | \"GS\" | \"GT\" | \"GU\" | \"GW\" | \"GY\" | \"HK\" | \"HN\" | \"HR\" | \"HT\" | \"HU\" | \"ID\" | \"IE\" | \"IL\" | \"IM\" | \"IN\" | \"IO\" | \"IQ\" | \"IS\" | \"IT\" | \"JE\" | \"JM\" | \"JO\" | \"JP\" | \"KE\" | \"KG\" | \"KH\" | \"KI\" | \"KM\" | \"KN\" | \"KR\" | \"KW\" | \"KY\" | \"KZ\" | \"LA\" | \"LB\" | \"LC\" | \"LI\" | \"LK\" | \"LR\" | \"LS\" | \"LT\" | \"LU\" | \"LV\" | \"LY\" | \"MA\" | \"MC\" | \"MD\" | \"ME\" | \"MF\" | \"MG\" | \"MK\" | \"ML\" | \"MM\" | \"MN\" | \"MO\" | \"MQ\" | \"MR\" | \"MS\" | \"MT\" | \"MU\" | \"MV\" | \"MW\" | \"MX\" | \"MY\" | \"MZ\" | \"NA\" | \"NC\" | \"NE\" | \"NG\" | \"NI\" | \"NL\" | \"NO\" | \"NP\" | \"NR\" | \"NU\" | \"NZ\" | \"OM\" | \"PA\" | \"PE\" | \"PF\" | \"PG\" | \"PH\" | \"PK\" | \"PL\" | \"PM\" | \"PN\" | \"PR\" | \"PS\" | \"PT\" | \"PY\" | \"QA\" | \"RE\" | \"RO\" | \"RS\" | \"RU\" | \"RW\" | \"SA\" | \"SB\" | \"SC\" | \"SE\" | \"SG\" | \"SH\" | \"SI\" | \"SJ\" | \"SK\" | \"SL\" | \"SM\" | \"SN\" | \"SO\" | \"SR\" | \"SS\" | \"ST\" | \"SV\" | \"SX\" | \"SZ\" | \"TA\" | \"TC\" | \"TD\" | \"TF\" | \"TG\" | \"TH\" | \"TJ\" | \"TK\" | \"TL\" | \"TM\" | \"TN\" | \"TO\" | \"TR\" | \"TT\" | \"TV\" | \"TW\" | \"TZ\" | \"UA\" | \"UG\" | \"US\" | \"UY\" | \"UZ\" | \"VA\" | \"VC\" | \"VE\" | \"VG\" | \"VN\" | \"VU\" | \"WF\" | \"WS\" | \"XK\" | \"YE\" | \"YT\" | \"ZA\" | \"ZM\" | \"ZW\" | \"ZZ\")[],\n\n} | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentLink": {
        "rendered": " paymentLink: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_links/{payment_link}/line_items": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentLink": {
        "rendered": " paymentLink: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Item)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_methods": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The ID of the customer whose PaymentMethods will be retrieved. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request. */\n type?: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** The ID of the customer whose PaymentMethods will be retrieved. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** An optional filter on the list, based on the object `type` field. Without the filter, the list includes all current and future payment method types. If your integration expects only one type of payment method in the response, make sure to provide a type value in the request. */\n type?: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PaymentMethod)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/payment_methods\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_methods": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * payment_method_param\n   * If this is an `acss_debit` PaymentMethod, this hash contains details about the ACSS Debit payment method.\n   */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /**\n   * param\n   * If this is an `affirm` PaymentMethod, this hash contains details about the Affirm payment method.\n   */\n    affirm?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `AfterpayClearpay` PaymentMethod, this hash contains details about the AfterpayClearpay payment method.\n   */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `Alipay` PaymentMethod, this hash contains details about the Alipay payment method.\n   */\n    alipay?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `au_becs_debit` PaymentMethod, this hash contains details about the bank account.\n   */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /**\n   * param\n   * If this is a `bacs_debit` PaymentMethod, this hash contains details about the Bacs Direct Debit bank account.\n   */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /**\n   * param\n   * If this is a `bancontact` PaymentMethod, this hash contains details about the Bancontact payment method.\n   */\n    bancontact?: hasuraSdk.JSONValue,\n  /**\n   * billing_details_inner_params\n   * Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.\n   */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /**\n   * param\n   * If this is a `blik` PaymentMethod, this hash contains details about the BLIK payment method.\n   */\n    blik?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `boleto` PaymentMethod, this hash contains details about the Boleto payment method.\n   */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** If this is a `card` PaymentMethod, this hash contains the user's card details. For backwards compatibility, you can alternatively provide a Stripe token (e.g., for Apple Pay, Amex Express Checkout, or legacy Checkout) into the card hash with format `card: {token: \"tok_visa\"}`. When providing a card number, you must meet the requirements for [PCI compliance](https://stripe.com/docs/security#validating-pci-compliance). We strongly recommend using Stripe.js instead of interacting with this API directly. */\n    card?: ({\n  /** @maxLength 5000 */\n    cvc?: string,\n    exp_month: number,\n    exp_year: number,\n  /** @maxLength 5000 */\n    number: string,\n\n} | {\n  /** @maxLength 5000 */\n    token: string,\n\n}),\n  /**\n   * The `Customer` to whom the original PaymentMethod is attached.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * param\n   * If this is a `customer_balance` PaymentMethod, this hash contains details about the CustomerBalance payment method.\n   */\n    customer_balance?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `eps` PaymentMethod, this hash contains details about the EPS payment method.\n   */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * param\n   * If this is an `fpx` PaymentMethod, this hash contains details about the FPX payment method.\n   */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /**\n   * param\n   * If this is a `giropay` PaymentMethod, this hash contains details about the Giropay payment method.\n   */\n    giropay?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `grabpay` PaymentMethod, this hash contains details about the GrabPay payment method.\n   */\n    grabpay?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `ideal` PaymentMethod, this hash contains details about the iDEAL payment method.\n   */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /**\n   * param\n   * If this is an `interac_present` PaymentMethod, this hash contains details about the Interac Present payment method.\n   */\n    interac_present?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `klarna` PaymentMethod, this hash contains details about the Klarna payment method.\n   */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /**\n   * param\n   * If this is a `konbini` PaymentMethod, this hash contains details about the Konbini payment method.\n   */\n    konbini?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.\n   */\n    link?: hasuraSdk.JSONValue,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is an `oxxo` PaymentMethod, this hash contains details about the OXXO payment method.\n   */\n    oxxo?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `p24` PaymentMethod, this hash contains details about the P24 payment method.\n   */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /**\n   * The PaymentMethod to share.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * param\n   * If this is a `paynow` PaymentMethod, this hash contains details about the PayNow payment method.\n   */\n    paynow?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `pix` PaymentMethod, this hash contains details about the Pix payment method.\n   */\n    pix?: hasuraSdk.JSONValue,\n  /**\n   * param\n   * If this is a `promptpay` PaymentMethod, this hash contains details about the PromptPay payment method.\n   */\n    promptpay?: hasuraSdk.JSONValue,\n  /**\n   * radar_options\n   * Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.\n   */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /**\n   * param\n   * If this is a `sepa_debit` PaymentMethod, this hash contains details about the SEPA debit bank account.\n   */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /**\n   * param\n   * If this is a `sofort` PaymentMethod, this hash contains details about the SOFORT payment method.\n   */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n  /** The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type. */\n    type?: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"card\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /**\n   * payment_method_param\n   * If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.\n   */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /**\n   * param\n   * If this is an `wechat_pay` PaymentMethod, this hash contains details about the wechat_pay payment method.\n   */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payment_methods/{payment_method}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentMethod": {
        "rendered": " paymentMethod: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_methods/{payment_method}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * billing_details_inner_params\n   * Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.\n   */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /**\n   * update_api_param\n   * If this is a `card` PaymentMethod, this hash contains the user's card details.\n   */\n    card?: {\n    exp_month?: number,\n    exp_year?: number,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * param\n   * If this is an `Link` PaymentMethod, this hash contains details about the Link payment method.\n   */\n    link?: hasuraSdk.JSONValue,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * update_param\n   * If this is an `us_bank_account` PaymentMethod, this hash contains details about the US bank account payment method.\n   */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentMethod": {
        "rendered": " paymentMethod: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_methods/{payment_method}/attach": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of the customer to which to attach the PaymentMethod.\n   * @maxLength 5000\n   */\n    customer: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentMethod": {
        "rendered": " paymentMethod: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payment_methods/{payment_method}/detach": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".paymentMethod": {
        "rendered": " paymentMethod: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaymentMethod",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payouts": {
    "query": {
      ".query": {
        "rendered": " query: {  arrival_date?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** The ID of an external account - only return payouts sent to this external account. */\n destination?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`. */\n status?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.arrival_date": {
        "rendered": " arrival_date?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.destination": {
        "rendered": "\n/** The ID of an external account - only return payouts sent to this external account. */\n destination?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`. */\n status?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Payout)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/payouts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payouts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** A positive integer in cents representing how much to payout. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** The ID of a bank account or a card to send the payout to. If no destination is supplied, the default external account for the specified currency will be used. */\n    destination?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces for more information](https://stripe.com/blog/instant-payouts-for-marketplaces).)\n   * @maxLength 5000\n   */\n    method?: \"instant\" | \"standard\",\n  /**\n   * The balance type of your Stripe balance to draw this payout from. Balances for different payment sources are kept separately. You can find the amounts with the balances API. One of `bank_account`, `card`, or `fpx`.\n   * @maxLength 5000\n   */\n    source_type?: \"bank_account\" | \"card\" | \"fpx\",\n  /**\n   * A string to be displayed on the recipient's bank or card statement. This may be at most 22 characters. Attempting to use a `statement_descriptor` longer than 22 characters will return an error. Note: Most banks will truncate this information and/or display it inconsistently. Some may not display it at all.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Payout",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/payouts/{payout}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".payout": {
        "rendered": " payout: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Payout",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payouts/{payout}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".payout": {
        "rendered": " payout: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Payout",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payouts/{payout}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".payout": {
        "rendered": " payout: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Payout",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/payouts/{payout}/reverse": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".payout": {
        "rendered": " payout: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Payout",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/plans": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return plans that are active or inactive (e.g., pass `false` to list all inactive plans). */\n active?: boolean, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return plans for the given product. */\n product?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Only return plans that are active or inactive (e.g., pass `false` to list all inactive plans). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.product": {
        "rendered": "\n/** Only return plans for the given product. */\n product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Plan)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/plans\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/plans": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Whether the plan is currently available for new subscriptions. Defaults to `true`. */\n    active?: boolean,\n  /** Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`. */\n    aggregate_usage?: \"last_during_period\" | \"last_ever\" | \"max\" | \"sum\",\n  /** A positive integer in cents (or local equivalent) (or 0 for a free plan) representing how much to charge on a recurring basis. */\n    amount?: number,\n  /**\n   * Same as `amount`, but accepts a decimal value with at most 12 decimal places. Only one of `amount` and `amount_decimal` can be set.\n   * @format decimal\n   */\n    amount_decimal?: string,\n  /** Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes. */\n    billing_scheme?: \"per_unit\" | \"tiered\",\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * An identifier randomly generated by Stripe. Used to identify this plan when subscribing a customer. You can optionally override this ID, but the ID must be unique across all plans in your Stripe account. You can, however, use the same plan ID in both live and test modes.\n   * @maxLength 5000\n   */\n    id?: string,\n  /** Specifies billing frequency. Either `day`, `week`, `month` or `year`. */\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n  /** The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). */\n    interval_count?: number,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * A brief description of the plan, hidden from customers.\n   * @maxLength 5000\n   */\n    nickname?: string,\n  /** The product whose pricing the created plan will represent. This can either be the ID of an existing product, or a dictionary containing fields used to create a [service product](https://stripe.com/docs/api#product_object-type). */\n    product?: ({\n    active?: boolean,\n  /** @maxLength 5000 */\n    id?: string,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n  /** @maxLength 5000 */\n    tax_code?: string,\n  /** @maxLength 12 */\n    unit_label?: string,\n\n} | string),\n  /** Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. */\n    tiers?: ({\n    flat_amount?: number,\n  /** @format decimal */\n    flat_amount_decimal?: string,\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n    up_to: (\"inf\" | number),\n\n})[],\n  /** Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows. */\n    tiers_mode?: \"graduated\" | \"volume\",\n  /**\n   * transform_usage_param\n   * Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.\n   */\n    transform_usage?: {\n    divide_by: number,\n    round: \"down\" | \"up\",\n\n},\n  /** Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan). */\n    trial_period_days?: number,\n  /** Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`. */\n    usage_type?: \"licensed\" | \"metered\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Plan",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/plans/{plan}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".plan": {
        "rendered": " plan: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedPlan",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/plans/{plan}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".plan": {
        "rendered": " plan: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Plan",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/plans/{plan}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the plan is currently available for new subscriptions. */\n    active?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * A brief description of the plan, hidden from customers.\n   * @maxLength 5000\n   */\n    nickname?: string,\n  /**\n   * The product the plan belongs to. This cannot be changed once it has been used in a subscription or subscription schedule.\n   * @maxLength 5000\n   */\n    product?: string,\n  /** Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan). */\n    trial_period_days?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".plan": {
        "rendered": " plan: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Plan",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/prices": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices). */\n active?: boolean, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return prices for the given currency. */\n currency?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return the price with these lookup_keys, if any exist. */\n lookup_keys?: (string)[], \n/** Only return prices for the given product. */\n product?: string, \n/** Only return prices with these recurring fields. */\n recurring?: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  usage_type?: \"licensed\" | \"metered\", }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return prices of type `recurring` or `one_time`. */\n type?: \"one_time\" | \"recurring\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.currency": {
        "rendered": "\n/** Only return prices for the given currency. */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lookup_keys": {
        "rendered": "\n/** Only return the price with these lookup_keys, if any exist. */\n lookup_keys?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.lookup_keys.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.product": {
        "rendered": "\n/** Only return prices for the given product. */\n product?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.recurring": {
        "rendered": "\n/** Only return prices with these recurring fields. */\n recurring?: {  interval?: \"day\" | \"month\" | \"week\" | \"year\",  usage_type?: \"licensed\" | \"metered\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.recurring.interval": {
        "rendered": " interval?: \"day\" | \"month\" | \"week\" | \"year\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.recurring.usage_type": {
        "rendered": " usage_type?: \"licensed\" | \"metered\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.type": {
        "rendered": "\n/** Only return prices of type `recurring` or `one_time`. */\n type?: \"one_time\" | \"recurring\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Price)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/prices\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/prices": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Whether the price can be used for new purchases. Defaults to `true`. */\n    active?: boolean,\n  /** Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes. */\n    billing_scheme?: \"per_unit\" | \"tiered\",\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /** Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies). */\n    currency_options?: hasuraSdk.JSONValue,\n  /**\n   * custom_unit_amount\n   * When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.\n   */\n    custom_unit_amount?: {\n    enabled: boolean,\n    maximum?: number,\n    minimum?: number,\n    preset?: number,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.\n   * @maxLength 200\n   */\n    lookup_key?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * A brief description of the price, hidden from customers.\n   * @maxLength 5000\n   */\n    nickname?: string,\n  /**\n   * The ID of the product that this price will belong to.\n   * @maxLength 5000\n   */\n    product?: string,\n  /**\n   * inline_product_params\n   * These fields can be used to create a new product that this price will belong to.\n   */\n    product_data?: {\n    active?: boolean,\n  /** @maxLength 5000 */\n    id?: string,\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    name: string,\n  /** @maxLength 22 */\n    statement_descriptor?: string,\n  /** @maxLength 5000 */\n    tax_code?: string,\n  /** @maxLength 12 */\n    unit_label?: string,\n\n},\n  /**\n   * recurring\n   * The recurring components of a price such as `interval` and `usage_type`.\n   */\n    recurring?: {\n    aggregate_usage?: \"last_during_period\" | \"last_ever\" | \"max\" | \"sum\",\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n    usage_type?: \"licensed\" | \"metered\",\n\n},\n  /** Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n  /** Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`. */\n    tiers?: ({\n    flat_amount?: number,\n  /** @format decimal */\n    flat_amount_decimal?: string,\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n    up_to: (\"inf\" | number),\n\n})[],\n  /** Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price, in `graduated` tiering pricing can successively change as the quantity grows. */\n    tiers_mode?: \"graduated\" | \"volume\",\n  /** If set to true, will atomically remove the lookup key from the existing price, and assign it to this price. */\n    transfer_lookup_key?: boolean,\n  /**\n   * transform_usage_param\n   * Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with `tiers`.\n   */\n    transform_quantity?: {\n    divide_by: number,\n    round: \"down\" | \"up\",\n\n},\n  /** A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge. One of `unit_amount` or `custom_unit_amount` is required, unless `billing_scheme=tiered`. */\n    unit_amount?: number,\n  /**\n   * Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.\n   * @format decimal\n   */\n    unit_amount_decimal?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Price",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/prices/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for prices](https://stripe.com/docs/search#query-fields-for-prices). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for prices](https://stripe.com/docs/search#query-fields-for-prices). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Price)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/prices/{price}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".price": {
        "rendered": " price: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Price",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/prices/{price}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the price can be used for new purchases. Defaults to `true`. */\n    active?: boolean,\n  /** Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies). */\n    currency_options?: (hasuraSdk.JSONValue | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.\n   * @maxLength 200\n   */\n    lookup_key?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * A brief description of the price, hidden from customers.\n   * @maxLength 5000\n   */\n    nickname?: string,\n  /** Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n  /** If set to true, will atomically remove the lookup key from the existing price, and assign it to this price. */\n    transfer_lookup_key?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".price": {
        "rendered": " price: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Price",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/products": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return products that are active or inactive (e.g., pass `false` to list all inactive products). */\n active?: boolean, \n/** Only return products that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before). */\n ids?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return products that can be shipped (i.e., physical, not digital products). */\n shippable?: boolean, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return products with the given url. */\n url?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Only return products that are active or inactive (e.g., pass `false` to list all inactive products). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** Only return products that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ids": {
        "rendered": "\n/** Only return products with the given IDs. Cannot be used with [starting_after](https://stripe.com/docs/api#list_products-starting_after) or [ending_before](https://stripe.com/docs/api#list_products-ending_before). */\n ids?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ids.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.shippable": {
        "rendered": "\n/** Only return products that can be shipped (i.e., physical, not digital products). */\n shippable?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.url": {
        "rendered": "\n/** Only return products with the given url. */\n url?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Product)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/products\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/products": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Whether the product is currently available for purchase. Defaults to `true`. */\n    active?: boolean,\n  /**\n   * price_data_without_product\n   * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object. This Price will be set as the default price for this product.\n   */\n    default_price_data?: {\n    currency: string,\n    currency_options?: hasuraSdk.JSONValue,\n  /** recurring_adhoc */\n    recurring?: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n  /**\n   * The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.\n   * @maxLength 40000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * An identifier will be randomly generated by Stripe. You can optionally override this ID, but the ID must be unique across all products in your Stripe account.\n   * @maxLength 5000\n   */\n    id?: string,\n  /** A list of up to 8 URLs of images for this product, meant to be displayable to the customer. */\n    images?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The product's name, meant to be displayable to the customer.\n   * @maxLength 5000\n   */\n    name: string,\n  /**\n   * package_dimensions_specs\n   * The dimensions of this product for shipping purposes.\n   */\n    package_dimensions?: {\n    height: number,\n    length: number,\n    weight: number,\n    width: number,\n\n},\n  /** Whether this product is shipped (i.e., physical goods). */\n    shippable?: boolean,\n  /**\n   * An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.\n   * \n   * This may be up to 22 characters. The statement description may not include `<`, `>`, `\\`, `\"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.\n   *  It must contain at least one letter.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */\n    tax_code?: string,\n  /**\n   * A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal.\n   * @maxLength 12\n   */\n    unit_label?: string,\n  /**\n   * A URL of a publicly-accessible webpage for this product.\n   * @maxLength 5000\n   */\n    url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Product",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/products/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for products](https://stripe.com/docs/search#query-fields-for-products). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for products](https://stripe.com/docs/search#query-fields-for-products). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Product)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/products/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedProduct",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/products/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Product",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/products/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the product is available for purchase. */\n    active?: boolean,\n  /**\n   * The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.\n   * @maxLength 5000\n   */\n    default_price?: string,\n  /**\n   * The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.\n   * @maxLength 40000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A list of up to 8 URLs of images for this product, meant to be displayable to the customer. */\n    images?: ((string)[] | \"\"),\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The product's name, meant to be displayable to the customer.\n   * @maxLength 5000\n   */\n    name?: string,\n  /** The dimensions of this product for shipping purposes. */\n    package_dimensions?: ({\n    height: number,\n    length: number,\n    weight: number,\n    width: number,\n\n} | \"\"),\n  /** Whether this product is shipped (i.e., physical goods). */\n    shippable?: boolean,\n  /**\n   * An arbitrary string to be displayed on your customer's credit card or bank statement. While most banks display this information consistently, some may display it incorrectly or not at all.\n   * \n   * This may be up to 22 characters. The statement description may not include `<`, `>`, `\\`, `\"`, `'` characters, and will appear on your customer's statement in capital letters. Non-ASCII characters are automatically stripped.\n   *  It must contain at least one letter. May only be set if `type=service`.\n   * @maxLength 22\n   */\n    statement_descriptor?: string,\n  /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. */\n    tax_code?: (string | \"\"),\n  /**\n   * A label that represents units of this product. When set, this will be included in customers' receipts, invoices, Checkout, and the customer portal. May only be set if `type=service`.\n   * @maxLength 12\n   */\n    unit_label?: string,\n  /** A URL of a publicly-accessible webpage for this product. */\n    url?: (string | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Product",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/promotion_codes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Filter promotion codes by whether they are active. */\n active?: boolean, \n/** Only return promotion codes that have this case-insensitive code. */\n code?: string, \n/** Only return promotion codes for this coupon. */\n coupon?: string, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return promotion codes that are restricted to this customer. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Filter promotion codes by whether they are active. */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.code": {
        "rendered": "\n/** Only return promotion codes that have this case-insensitive code. */\n code?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.coupon": {
        "rendered": "\n/** Only return promotion codes for this coupon. */\n coupon?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return promotion codes that are restricted to this customer. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (PromotionCode)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/promotion_codes\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/promotion_codes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Whether the promotion code is currently active. */\n    active?: boolean,\n  /**\n   * The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific customer. If left blank, we will generate one automatically.\n   * @maxLength 500\n   */\n    code?: string,\n  /**\n   * The coupon for this promotion code.\n   * @maxLength 5000\n   */\n    coupon: string,\n  /**\n   * The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The timestamp at which this promotion code will expire. If the coupon has specified a `redeems_by`, then this value cannot be after the coupon's `redeems_by`.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /** A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a `max_redemptions`, then this value cannot be greater than the coupon's `max_redemptions`. */\n    max_redemptions?: number,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * restrictions_params\n   * Settings that restrict the redemption of the promotion code.\n   */\n    restrictions?: {\n    currency_options?: hasuraSdk.JSONValue,\n    first_time_transaction?: boolean,\n    minimum_amount?: number,\n    minimum_amount_currency?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PromotionCode",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/promotion_codes/{promotion_code}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".promotionCode": {
        "rendered": " promotionCode: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PromotionCode",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/promotion_codes/{promotion_code}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the promotion code is currently active. A promotion code can only be reactivated when the coupon is still valid and the promotion code is otherwise redeemable. */\n    active?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * restrictions_params\n   * Settings that restrict the redemption of the promotion code.\n   */\n    restrictions?: {\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".promotionCode": {
        "rendered": " promotionCode: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PromotionCode",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/quotes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The ID of the customer whose quotes will be retrieved. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** The status of the quote. */\n status?: \"accepted\" | \"canceled\" | \"draft\" | \"open\", \n/** Provides a list of quotes that are associated with the specified test clock. The response will not include quotes with test clocks if this and the customer parameter is not set. */\n test_clock?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** The ID of the customer whose quotes will be retrieved. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** The status of the quote. */\n status?: \"accepted\" | \"canceled\" | \"draft\" | \"open\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.test_clock": {
        "rendered": "\n/** Provides a list of quotes that are associated with the specified test clock. The response will not include quotes with test clocks if this and the customer parameter is not set. */\n test_clock?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Quote)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/quotes\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/quotes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field. */\n    application_fee_amount?: (number | \"\"),\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field. */\n    application_fee_percent?: (number | \"\"),\n  /**\n   * automatic_tax_param\n   * Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** The tax rates that will apply to any line item that does not have `tax_rates` set. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /**\n   * A description that will be displayed on the quote PDF. If no value is passed, the default description configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.\n   * @maxLength 500\n   */\n    description?: string,\n  /** The discounts applied to the quote. You can only set up to one discount. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch. If no value is passed, the default expiration date configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /**\n   * A footer that will be displayed on the quote PDF. If no value is passed, the default footer configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.\n   * @maxLength 500\n   */\n    footer?: string,\n  /**\n   * from_quote_params\n   * Clone an existing quote. The new quote will be created in `status=draft`. When using this parameter, you cannot specify any other parameters except for `expires_at`.\n   */\n    from_quote?: {\n    is_revision?: boolean,\n  /** @maxLength 5000 */\n    quote: string,\n\n},\n  /**\n   * A header that will be displayed on the quote PDF. If no value is passed, the default header configured in your [quote template settings](https://dashboard.stripe.com/settings/billing/quote) will be used.\n   * @maxLength 50\n   */\n    header?: string,\n  /**\n   * quote_param\n   * All invoices will be billed using the specified settings.\n   */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n  /** A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost. */\n    line_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring?: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The account on behalf of which to charge. */\n    on_behalf_of?: (string | \"\"),\n  /**\n   * subscription_data_create_params\n   * When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.\n   */\n    subscription_data?: {\n  /** @maxLength 500 */\n    description?: string,\n    effective_date?: (\"current_period_end\" | number | \"\"),\n    trial_period_days?: (number | \"\"),\n\n},\n  /**\n   * ID of the test clock to attach to the quote.\n   * @maxLength 5000\n   */\n    test_clock?: string,\n  /** The data with which to automatically create a Transfer for each of the invoices. */\n    transfer_data?: ({\n    amount?: number,\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/quotes/{quote}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/quotes/{quote}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. There cannot be any line items with recurring prices when using this field. */\n    application_fee_amount?: (number | \"\"),\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. There must be at least 1 line item with a recurring price to use this field. */\n    application_fee_percent?: (number | \"\"),\n  /**\n   * automatic_tax_param\n   * Settings for automatic tax lookup for this quote and resulting invoices and subscriptions.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or at invoice finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The customer for which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** The tax rates that will apply to any line item that does not have `tax_rates` set. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /**\n   * A description that will be displayed on the quote PDF.\n   * @maxLength 500\n   */\n    description?: string,\n  /** The discounts applied to the quote. You can only set up to one discount. */\n    discounts?: (({\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    discount?: string,\n\n})[] | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.\n   * @format unix-time\n   */\n    expires_at?: number,\n  /**\n   * A footer that will be displayed on the quote PDF.\n   * @maxLength 500\n   */\n    footer?: string,\n  /**\n   * A header that will be displayed on the quote PDF.\n   * @maxLength 50\n   */\n    header?: string,\n  /**\n   * quote_param\n   * All invoices will be billed using the specified settings.\n   */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n  /** A list of line items the customer is being quoted for. Each line item includes information about the product, the quantity, and the resulting cost. */\n    line_items?: ({\n  /** @maxLength 5000 */\n    id?: string,\n  /** @maxLength 5000 */\n    price?: string,\n  /** price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring?: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The account on behalf of which to charge. */\n    on_behalf_of?: (string | \"\"),\n  /**\n   * subscription_data_update_params\n   * When creating a subscription or subscription schedule, the specified configuration data will be used. There must be at least one line item with a recurring price for a subscription or subscription schedule to be created. A subscription schedule is created if `subscription_data[effective_date]` is present and in the future, otherwise a subscription is created.\n   */\n    subscription_data?: {\n  /** @maxLength 500 */\n    description?: string,\n    effective_date?: (\"current_period_end\" | number | \"\"),\n    trial_period_days?: (number | \"\"),\n\n},\n  /** The data with which to automatically create a Transfer for each of the invoices. */\n    transfer_data?: ({\n    amount?: number,\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/quotes/{quote}/accept": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/quotes/{quote}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/quotes/{quote}/computed_upfront_line_items": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Item)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/quotes/{quote}/finalize": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A future timestamp on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.\n   * @format unix-time\n   */\n    expires_at?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Quote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/quotes/{quote}/line_items": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Item)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/quotes/{quote}/pdf": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".quote": {
        "rendered": " quote: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "File",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/early_fraud_warnings": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return early fraud warnings for the charge specified by this charge ID. */\n charge?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.charge": {
        "rendered": "\n/** Only return early fraud warnings for the charge specified by this charge ID. */\n charge?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_intent": {
        "rendered": "\n/** Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID. */\n payment_intent?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (RadarEarlyFraudWarning)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/radar/early_fraud_warnings\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/early_fraud_warnings/{early_fraud_warning}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".earlyFraudWarning": {
        "rendered": " earlyFraudWarning: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RadarEarlyFraudWarning",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/value_list_items": {
    "query": {
      ".query": {
        "rendered": " query?: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Return items belonging to the parent list whose value matches the specified value (using an \"is like\" match). */\n value?: string, \n/** Identifier for the parent value list this item belongs to. */\n value_list: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.value": {
        "rendered": "\n/** Return items belonging to the parent list whose value matches the specified value (using an \"is like\" match). */\n value?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.value_list": {
        "rendered": "\n/** Identifier for the parent value list this item belongs to. */\n value_list: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (RadarValueListItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/radar/value_list_items\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/radar/value_list_items": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The value of the item (whose type must match the type of the parent value list).\n   * @maxLength 800\n   */\n    value: string,\n  /**\n   * The identifier of the value list which the created item will be added to.\n   * @maxLength 5000\n   */\n    value_list: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "RadarValueListItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/radar/value_list_items/{item}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".item": {
        "rendered": " item: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedRadarValueListItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/value_list_items/{item}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".item": {
        "rendered": " item: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RadarValueListItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/value_lists": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The alias used to reference the value list when writing rules. */\n alias?: string, \n/** A value contained within a value list - returns all value lists containing this value. */\n contains?: string,  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.alias": {
        "rendered": "\n/** The alias used to reference the value list when writing rules. */\n alias?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.contains": {
        "rendered": "\n/** A value contained within a value list - returns all value lists containing this value. */\n contains?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (RadarValueList)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/radar/value_lists\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/radar/value_lists": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The name of the value list for use in rules.\n   * @maxLength 100\n   */\n    alias: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Type of the items in the value list. One of `card_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`. Use `string` if the item type is unknown or mixed.\n   * @maxLength 5000\n   */\n    item_type?: \"card_bin\" | \"card_fingerprint\" | \"case_sensitive_string\" | \"country\" | \"customer_id\" | \"email\" | \"ip_address\" | \"string\",\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The human-readable name of the value list.\n   * @maxLength 100\n   */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "RadarValueList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/radar/value_lists/{value_list}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".valueList": {
        "rendered": " valueList: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedRadarValueList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/radar/value_lists/{value_list}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".valueList": {
        "rendered": " valueList: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RadarValueList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/radar/value_lists/{value_list}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The name of the value list for use in rules.\n   * @maxLength 100\n   */\n    alias?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The human-readable name of the value list.\n   * @maxLength 100\n   */\n    name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".valueList": {
        "rendered": " valueList: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RadarValueList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/refunds": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return refunds for the charge specified by this charge ID. */\n charge?: string,  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return refunds for the PaymentIntent specified by this ID. */\n payment_intent?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.charge": {
        "rendered": "\n/** Only return refunds for the charge specified by this charge ID. */\n charge?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_intent": {
        "rendered": "\n/** Only return refunds for the PaymentIntent specified by this ID. */\n payment_intent?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Refund)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/refunds\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/refunds": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer representing how much to refund. */\n    amount?: number,\n  /** @maxLength 5000 */\n    charge?: string,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * Customer whose customer balance to refund from.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Address to send refund email, use customer email if not specified */\n    instructions_email?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Origin of the refund */\n    origin?: \"customer_balance\",\n  /** @maxLength 5000 */\n    payment_intent?: string,\n  /** @maxLength 5000 */\n    reason?: \"duplicate\" | \"fraudulent\" | \"requested_by_customer\",\n    refund_application_fee?: boolean,\n    reverse_transfer?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/refunds/{refund}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/refunds/{refund}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/refunds/{refund}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reporting/report_runs": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ReportingReportRun)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/reporting/report_runs\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/reporting/report_runs": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * run_parameter_specs\n   * Parameters specifying how the report should be run. Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.\n   */\n    parameters?: {\n    columns?: (string)[],\n    connected_account?: string,\n    currency?: string,\n  /** @format unix-time */\n    interval_end?: number,\n  /** @format unix-time */\n    interval_start?: number,\n    payout?: string,\n  /** @maxLength 5000 */\n    reporting_category?: \"advance\" | \"advance_funding\" | \"anticipation_repayment\" | \"charge\" | \"charge_failure\" | \"connect_collection_transfer\" | \"connect_reserved_funds\" | \"contribution\" | \"dispute\" | \"dispute_reversal\" | \"fee\" | \"financing_paydown\" | \"financing_paydown_reversal\" | \"financing_payout\" | \"financing_payout_reversal\" | \"issuing_authorization_hold\" | \"issuing_authorization_release\" | \"issuing_dispute\" | \"issuing_transaction\" | \"network_cost\" | \"other_adjustment\" | \"partial_capture_reversal\" | \"payout\" | \"payout_reversal\" | \"platform_earning\" | \"platform_earning_refund\" | \"refund\" | \"refund_failure\" | \"risk_reserved_funds\" | \"tax\" | \"topup\" | \"topup_reversal\" | \"transfer\" | \"transfer_reversal\",\n  /** @maxLength 5000 */\n    timezone?: \"Africa/Abidjan\" | \"Africa/Accra\" | \"Africa/Addis_Ababa\" | \"Africa/Algiers\" | \"Africa/Asmara\" | \"Africa/Asmera\" | \"Africa/Bamako\" | \"Africa/Bangui\" | \"Africa/Banjul\" | \"Africa/Bissau\" | \"Africa/Blantyre\" | \"Africa/Brazzaville\" | \"Africa/Bujumbura\" | \"Africa/Cairo\" | \"Africa/Casablanca\" | \"Africa/Ceuta\" | \"Africa/Conakry\" | \"Africa/Dakar\" | \"Africa/Dar_es_Salaam\" | \"Africa/Djibouti\" | \"Africa/Douala\" | \"Africa/El_Aaiun\" | \"Africa/Freetown\" | \"Africa/Gaborone\" | \"Africa/Harare\" | \"Africa/Johannesburg\" | \"Africa/Juba\" | \"Africa/Kampala\" | \"Africa/Khartoum\" | \"Africa/Kigali\" | \"Africa/Kinshasa\" | \"Africa/Lagos\" | \"Africa/Libreville\" | \"Africa/Lome\" | \"Africa/Luanda\" | \"Africa/Lubumbashi\" | \"Africa/Lusaka\" | \"Africa/Malabo\" | \"Africa/Maputo\" | \"Africa/Maseru\" | \"Africa/Mbabane\" | \"Africa/Mogadishu\" | \"Africa/Monrovia\" | \"Africa/Nairobi\" | \"Africa/Ndjamena\" | \"Africa/Niamey\" | \"Africa/Nouakchott\" | \"Africa/Ouagadougou\" | \"Africa/Porto-Novo\" | \"Africa/Sao_Tome\" | \"Africa/Timbuktu\" | \"Africa/Tripoli\" | \"Africa/Tunis\" | \"Africa/Windhoek\" | \"America/Adak\" | \"America/Anchorage\" | \"America/Anguilla\" | \"America/Antigua\" | \"America/Araguaina\" | \"America/Argentina/Buenos_Aires\" | \"America/Argentina/Catamarca\" | \"America/Argentina/ComodRivadavia\" | \"America/Argentina/Cordoba\" | \"America/Argentina/Jujuy\" | \"America/Argentina/La_Rioja\" | \"America/Argentina/Mendoza\" | \"America/Argentina/Rio_Gallegos\" | \"America/Argentina/Salta\" | \"America/Argentina/San_Juan\" | \"America/Argentina/San_Luis\" | \"America/Argentina/Tucuman\" | \"America/Argentina/Ushuaia\" | \"America/Aruba\" | \"America/Asuncion\" | \"America/Atikokan\" | \"America/Atka\" | \"America/Bahia\" | \"America/Bahia_Banderas\" | \"America/Barbados\" | \"America/Belem\" | \"America/Belize\" | \"America/Blanc-Sablon\" | \"America/Boa_Vista\" | \"America/Bogota\" | \"America/Boise\" | \"America/Buenos_Aires\" | \"America/Cambridge_Bay\" | \"America/Campo_Grande\" | \"America/Cancun\" | \"America/Caracas\" | \"America/Catamarca\" | \"America/Cayenne\" | \"America/Cayman\" | \"America/Chicago\" | \"America/Chihuahua\" | \"America/Ciudad_Juarez\" | \"America/Coral_Harbour\" | \"America/Cordoba\" | \"America/Costa_Rica\" | \"America/Creston\" | \"America/Cuiaba\" | \"America/Curacao\" | \"America/Danmarkshavn\" | \"America/Dawson\" | \"America/Dawson_Creek\" | \"America/Denver\" | \"America/Detroit\" | \"America/Dominica\" | \"America/Edmonton\" | \"America/Eirunepe\" | \"America/El_Salvador\" | \"America/Ensenada\" | \"America/Fort_Nelson\" | \"America/Fort_Wayne\" | \"America/Fortaleza\" | \"America/Glace_Bay\" | \"America/Godthab\" | \"America/Goose_Bay\" | \"America/Grand_Turk\" | \"America/Grenada\" | \"America/Guadeloupe\" | \"America/Guatemala\" | \"America/Guayaquil\" | \"America/Guyana\" | \"America/Halifax\" | \"America/Havana\" | \"America/Hermosillo\" | \"America/Indiana/Indianapolis\" | \"America/Indiana/Knox\" | \"America/Indiana/Marengo\" | \"America/Indiana/Petersburg\" | \"America/Indiana/Tell_City\" | \"America/Indiana/Vevay\" | \"America/Indiana/Vincennes\" | \"America/Indiana/Winamac\" | \"America/Indianapolis\" | \"America/Inuvik\" | \"America/Iqaluit\" | \"America/Jamaica\" | \"America/Jujuy\" | \"America/Juneau\" | \"America/Kentucky/Louisville\" | \"America/Kentucky/Monticello\" | \"America/Knox_IN\" | \"America/Kralendijk\" | \"America/La_Paz\" | \"America/Lima\" | \"America/Los_Angeles\" | \"America/Louisville\" | \"America/Lower_Princes\" | \"America/Maceio\" | \"America/Managua\" | \"America/Manaus\" | \"America/Marigot\" | \"America/Martinique\" | \"America/Matamoros\" | \"America/Mazatlan\" | \"America/Mendoza\" | \"America/Menominee\" | \"America/Merida\" | \"America/Metlakatla\" | \"America/Mexico_City\" | \"America/Miquelon\" | \"America/Moncton\" | \"America/Monterrey\" | \"America/Montevideo\" | \"America/Montreal\" | \"America/Montserrat\" | \"America/Nassau\" | \"America/New_York\" | \"America/Nipigon\" | \"America/Nome\" | \"America/Noronha\" | \"America/North_Dakota/Beulah\" | \"America/North_Dakota/Center\" | \"America/North_Dakota/New_Salem\" | \"America/Nuuk\" | \"America/Ojinaga\" | \"America/Panama\" | \"America/Pangnirtung\" | \"America/Paramaribo\" | \"America/Phoenix\" | \"America/Port-au-Prince\" | \"America/Port_of_Spain\" | \"America/Porto_Acre\" | \"America/Porto_Velho\" | \"America/Puerto_Rico\" | \"America/Punta_Arenas\" | \"America/Rainy_River\" | \"America/Rankin_Inlet\" | \"America/Recife\" | \"America/Regina\" | \"America/Resolute\" | \"America/Rio_Branco\" | \"America/Rosario\" | \"America/Santa_Isabel\" | \"America/Santarem\" | \"America/Santiago\" | \"America/Santo_Domingo\" | \"America/Sao_Paulo\" | \"America/Scoresbysund\" | \"America/Shiprock\" | \"America/Sitka\" | \"America/St_Barthelemy\" | \"America/St_Johns\" | \"America/St_Kitts\" | \"America/St_Lucia\" | \"America/St_Thomas\" | \"America/St_Vincent\" | \"America/Swift_Current\" | \"America/Tegucigalpa\" | \"America/Thule\" | \"America/Thunder_Bay\" | \"America/Tijuana\" | \"America/Toronto\" | \"America/Tortola\" | \"America/Vancouver\" | \"America/Virgin\" | \"America/Whitehorse\" | \"America/Winnipeg\" | \"America/Yakutat\" | \"America/Yellowknife\" | \"Antarctica/Casey\" | \"Antarctica/Davis\" | \"Antarctica/DumontDUrville\" | \"Antarctica/Macquarie\" | \"Antarctica/Mawson\" | \"Antarctica/McMurdo\" | \"Antarctica/Palmer\" | \"Antarctica/Rothera\" | \"Antarctica/South_Pole\" | \"Antarctica/Syowa\" | \"Antarctica/Troll\" | \"Antarctica/Vostok\" | \"Arctic/Longyearbyen\" | \"Asia/Aden\" | \"Asia/Almaty\" | \"Asia/Amman\" | \"Asia/Anadyr\" | \"Asia/Aqtau\" | \"Asia/Aqtobe\" | \"Asia/Ashgabat\" | \"Asia/Ashkhabad\" | \"Asia/Atyrau\" | \"Asia/Baghdad\" | \"Asia/Bahrain\" | \"Asia/Baku\" | \"Asia/Bangkok\" | \"Asia/Barnaul\" | \"Asia/Beirut\" | \"Asia/Bishkek\" | \"Asia/Brunei\" | \"Asia/Calcutta\" | \"Asia/Chita\" | \"Asia/Choibalsan\" | \"Asia/Chongqing\" | \"Asia/Chungking\" | \"Asia/Colombo\" | \"Asia/Dacca\" | \"Asia/Damascus\" | \"Asia/Dhaka\" | \"Asia/Dili\" | \"Asia/Dubai\" | \"Asia/Dushanbe\" | \"Asia/Famagusta\" | \"Asia/Gaza\" | \"Asia/Harbin\" | \"Asia/Hebron\" | \"Asia/Ho_Chi_Minh\" | \"Asia/Hong_Kong\" | \"Asia/Hovd\" | \"Asia/Irkutsk\" | \"Asia/Istanbul\" | \"Asia/Jakarta\" | \"Asia/Jayapura\" | \"Asia/Jerusalem\" | \"Asia/Kabul\" | \"Asia/Kamchatka\" | \"Asia/Karachi\" | \"Asia/Kashgar\" | \"Asia/Kathmandu\" | \"Asia/Katmandu\" | \"Asia/Khandyga\" | \"Asia/Kolkata\" | \"Asia/Krasnoyarsk\" | \"Asia/Kuala_Lumpur\" | \"Asia/Kuching\" | \"Asia/Kuwait\" | \"Asia/Macao\" | \"Asia/Macau\" | \"Asia/Magadan\" | \"Asia/Makassar\" | \"Asia/Manila\" | \"Asia/Muscat\" | \"Asia/Nicosia\" | \"Asia/Novokuznetsk\" | \"Asia/Novosibirsk\" | \"Asia/Omsk\" | \"Asia/Oral\" | \"Asia/Phnom_Penh\" | \"Asia/Pontianak\" | \"Asia/Pyongyang\" | \"Asia/Qatar\" | \"Asia/Qostanay\" | \"Asia/Qyzylorda\" | \"Asia/Rangoon\" | \"Asia/Riyadh\" | \"Asia/Saigon\" | \"Asia/Sakhalin\" | \"Asia/Samarkand\" | \"Asia/Seoul\" | \"Asia/Shanghai\" | \"Asia/Singapore\" | \"Asia/Srednekolymsk\" | \"Asia/Taipei\" | \"Asia/Tashkent\" | \"Asia/Tbilisi\" | \"Asia/Tehran\" | \"Asia/Tel_Aviv\" | \"Asia/Thimbu\" | \"Asia/Thimphu\" | \"Asia/Tokyo\" | \"Asia/Tomsk\" | \"Asia/Ujung_Pandang\" | \"Asia/Ulaanbaatar\" | \"Asia/Ulan_Bator\" | \"Asia/Urumqi\" | \"Asia/Ust-Nera\" | \"Asia/Vientiane\" | \"Asia/Vladivostok\" | \"Asia/Yakutsk\" | \"Asia/Yangon\" | \"Asia/Yekaterinburg\" | \"Asia/Yerevan\" | \"Atlantic/Azores\" | \"Atlantic/Bermuda\" | \"Atlantic/Canary\" | \"Atlantic/Cape_Verde\" | \"Atlantic/Faeroe\" | \"Atlantic/Faroe\" | \"Atlantic/Jan_Mayen\" | \"Atlantic/Madeira\" | \"Atlantic/Reykjavik\" | \"Atlantic/South_Georgia\" | \"Atlantic/St_Helena\" | \"Atlantic/Stanley\" | \"Australia/ACT\" | \"Australia/Adelaide\" | \"Australia/Brisbane\" | \"Australia/Broken_Hill\" | \"Australia/Canberra\" | \"Australia/Currie\" | \"Australia/Darwin\" | \"Australia/Eucla\" | \"Australia/Hobart\" | \"Australia/LHI\" | \"Australia/Lindeman\" | \"Australia/Lord_Howe\" | \"Australia/Melbourne\" | \"Australia/NSW\" | \"Australia/North\" | \"Australia/Perth\" | \"Australia/Queensland\" | \"Australia/South\" | \"Australia/Sydney\" | \"Australia/Tasmania\" | \"Australia/Victoria\" | \"Australia/West\" | \"Australia/Yancowinna\" | \"Brazil/Acre\" | \"Brazil/DeNoronha\" | \"Brazil/East\" | \"Brazil/West\" | \"CET\" | \"CST6CDT\" | \"Canada/Atlantic\" | \"Canada/Central\" | \"Canada/Eastern\" | \"Canada/Mountain\" | \"Canada/Newfoundland\" | \"Canada/Pacific\" | \"Canada/Saskatchewan\" | \"Canada/Yukon\" | \"Chile/Continental\" | \"Chile/EasterIsland\" | \"Cuba\" | \"EET\" | \"EST\" | \"EST5EDT\" | \"Egypt\" | \"Eire\" | \"Etc/GMT\" | \"Etc/GMT+0\" | \"Etc/GMT+1\" | \"Etc/GMT+10\" | \"Etc/GMT+11\" | \"Etc/GMT+12\" | \"Etc/GMT+2\" | \"Etc/GMT+3\" | \"Etc/GMT+4\" | \"Etc/GMT+5\" | \"Etc/GMT+6\" | \"Etc/GMT+7\" | \"Etc/GMT+8\" | \"Etc/GMT+9\" | \"Etc/GMT-0\" | \"Etc/GMT-1\" | \"Etc/GMT-10\" | \"Etc/GMT-11\" | \"Etc/GMT-12\" | \"Etc/GMT-13\" | \"Etc/GMT-14\" | \"Etc/GMT-2\" | \"Etc/GMT-3\" | \"Etc/GMT-4\" | \"Etc/GMT-5\" | \"Etc/GMT-6\" | \"Etc/GMT-7\" | \"Etc/GMT-8\" | \"Etc/GMT-9\" | \"Etc/GMT0\" | \"Etc/Greenwich\" | \"Etc/UCT\" | \"Etc/UTC\" | \"Etc/Universal\" | \"Etc/Zulu\" | \"Europe/Amsterdam\" | \"Europe/Andorra\" | \"Europe/Astrakhan\" | \"Europe/Athens\" | \"Europe/Belfast\" | \"Europe/Belgrade\" | \"Europe/Berlin\" | \"Europe/Bratislava\" | \"Europe/Brussels\" | \"Europe/Bucharest\" | \"Europe/Budapest\" | \"Europe/Busingen\" | \"Europe/Chisinau\" | \"Europe/Copenhagen\" | \"Europe/Dublin\" | \"Europe/Gibraltar\" | \"Europe/Guernsey\" | \"Europe/Helsinki\" | \"Europe/Isle_of_Man\" | \"Europe/Istanbul\" | \"Europe/Jersey\" | \"Europe/Kaliningrad\" | \"Europe/Kiev\" | \"Europe/Kirov\" | \"Europe/Kyiv\" | \"Europe/Lisbon\" | \"Europe/Ljubljana\" | \"Europe/London\" | \"Europe/Luxembourg\" | \"Europe/Madrid\" | \"Europe/Malta\" | \"Europe/Mariehamn\" | \"Europe/Minsk\" | \"Europe/Monaco\" | \"Europe/Moscow\" | \"Europe/Nicosia\" | \"Europe/Oslo\" | \"Europe/Paris\" | \"Europe/Podgorica\" | \"Europe/Prague\" | \"Europe/Riga\" | \"Europe/Rome\" | \"Europe/Samara\" | \"Europe/San_Marino\" | \"Europe/Sarajevo\" | \"Europe/Saratov\" | \"Europe/Simferopol\" | \"Europe/Skopje\" | \"Europe/Sofia\" | \"Europe/Stockholm\" | \"Europe/Tallinn\" | \"Europe/Tirane\" | \"Europe/Tiraspol\" | \"Europe/Ulyanovsk\" | \"Europe/Uzhgorod\" | \"Europe/Vaduz\" | \"Europe/Vatican\" | \"Europe/Vienna\" | \"Europe/Vilnius\" | \"Europe/Volgograd\" | \"Europe/Warsaw\" | \"Europe/Zagreb\" | \"Europe/Zaporozhye\" | \"Europe/Zurich\" | \"Factory\" | \"GB\" | \"GB-Eire\" | \"GMT\" | \"GMT+0\" | \"GMT-0\" | \"GMT0\" | \"Greenwich\" | \"HST\" | \"Hongkong\" | \"Iceland\" | \"Indian/Antananarivo\" | \"Indian/Chagos\" | \"Indian/Christmas\" | \"Indian/Cocos\" | \"Indian/Comoro\" | \"Indian/Kerguelen\" | \"Indian/Mahe\" | \"Indian/Maldives\" | \"Indian/Mauritius\" | \"Indian/Mayotte\" | \"Indian/Reunion\" | \"Iran\" | \"Israel\" | \"Jamaica\" | \"Japan\" | \"Kwajalein\" | \"Libya\" | \"MET\" | \"MST\" | \"MST7MDT\" | \"Mexico/BajaNorte\" | \"Mexico/BajaSur\" | \"Mexico/General\" | \"NZ\" | \"NZ-CHAT\" | \"Navajo\" | \"PRC\" | \"PST8PDT\" | \"Pacific/Apia\" | \"Pacific/Auckland\" | \"Pacific/Bougainville\" | \"Pacific/Chatham\" | \"Pacific/Chuuk\" | \"Pacific/Easter\" | \"Pacific/Efate\" | \"Pacific/Enderbury\" | \"Pacific/Fakaofo\" | \"Pacific/Fiji\" | \"Pacific/Funafuti\" | \"Pacific/Galapagos\" | \"Pacific/Gambier\" | \"Pacific/Guadalcanal\" | \"Pacific/Guam\" | \"Pacific/Honolulu\" | \"Pacific/Johnston\" | \"Pacific/Kanton\" | \"Pacific/Kiritimati\" | \"Pacific/Kosrae\" | \"Pacific/Kwajalein\" | \"Pacific/Majuro\" | \"Pacific/Marquesas\" | \"Pacific/Midway\" | \"Pacific/Nauru\" | \"Pacific/Niue\" | \"Pacific/Norfolk\" | \"Pacific/Noumea\" | \"Pacific/Pago_Pago\" | \"Pacific/Palau\" | \"Pacific/Pitcairn\" | \"Pacific/Pohnpei\" | \"Pacific/Ponape\" | \"Pacific/Port_Moresby\" | \"Pacific/Rarotonga\" | \"Pacific/Saipan\" | \"Pacific/Samoa\" | \"Pacific/Tahiti\" | \"Pacific/Tarawa\" | \"Pacific/Tongatapu\" | \"Pacific/Truk\" | \"Pacific/Wake\" | \"Pacific/Wallis\" | \"Pacific/Yap\" | \"Poland\" | \"Portugal\" | \"ROC\" | \"ROK\" | \"Singapore\" | \"Turkey\" | \"UCT\" | \"US/Alaska\" | \"US/Aleutian\" | \"US/Arizona\" | \"US/Central\" | \"US/East-Indiana\" | \"US/Eastern\" | \"US/Hawaii\" | \"US/Indiana-Starke\" | \"US/Michigan\" | \"US/Mountain\" | \"US/Pacific\" | \"US/Pacific-New\" | \"US/Samoa\" | \"UTC\" | \"Universal\" | \"W-SU\" | \"WET\" | \"Zulu\",\n\n},\n  /** The ID of the [report type](https://stripe.com/docs/reporting/statements/api#report-types) to run, such as `\"balance.summary.1\"`. */\n    report_type: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "ReportingReportRun",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reporting/report_runs/{report_run}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reportRun": {
        "rendered": " reportRun: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ReportingReportRun",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reporting/report_types": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ReportingReportType)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reporting/report_types/{report_type}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reportType": {
        "rendered": " reportType: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ReportingReportType",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reviews": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Review)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/reviews/{review}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".review": {
        "rendered": " review: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Review",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/reviews/{review}/approve": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".review": {
        "rendered": " review: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Review",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/setup_attempts": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A filter on the list, based on the object `created` field. The value\ncan be a string with an integer Unix timestamp, or it can be a\ndictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return SetupAttempts created by the SetupIntent specified by\nthis ID. */\n setup_intent: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value\ncan be a string with an integer Unix timestamp, or it can be a\ndictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.setup_intent": {
        "rendered": "\n/** Only return SetupAttempts created by the SetupIntent specified by\nthis ID. */\n setup_intent: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (SetupAttempt)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/setup_attempts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/setup_intents": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer. */\n attach_to_self?: boolean, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return SetupIntents for the customer specified by this customer ID. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return SetupIntents associated with the specified payment method. */\n payment_method?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.attach_to_self": {
        "rendered": "\n/** If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer. */\n attach_to_self?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return SetupIntents for the customer specified by this customer ID. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.payment_method": {
        "rendered": "\n/** Only return SetupIntents associated with the specified payment method. */\n payment_method?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (SetupIntent)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/setup_intents\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/setup_intents": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n   * \n   * It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.\n   */\n    attach_to_self?: boolean,\n  /** Set to `true` to attempt to confirm this SetupIntent immediately. This parameter defaults to `false`. If the payment method attached is a card, a return_url may be provided in case additional authentication is required. */\n    confirm?: boolean,\n  /**\n   * ID of the Customer this SetupIntent belongs to, if one exists.\n   * \n   * If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 1000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Indicates the directions of money movement for which this payment method is intended to be used.\n   * \n   * Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.\n   */\n    flow_directions?: (\"inbound\" | \"outbound\")[],\n  /**\n   * secret_key_param\n   * This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).\n   */\n    mandate_data?: {\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** @format unix-time */\n    accepted_at?: number,\n  /** offline_param */\n    offline?: hasuraSdk.JSONValue,\n  /** online_param */\n    online?: {\n    ip_address: string,\n  /** @maxLength 5000 */\n    user_agent: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"offline\" | \"online\",\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** The Stripe account ID for which this SetupIntent is created. */\n    on_behalf_of?: string,\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\n   * value in the SetupIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this SetupIntent.\n   */\n    payment_method_options?: {\n  /** setup_intent_payment_method_options_param */\n    acss_debit?: {\n    currency?: \"cad\" | \"usd\",\n  /** setup_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n    default_for?: (\"invoice\" | \"subscription\")[],\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    blik?: {\n  /** @maxLength 5000 */\n    code?: string,\n\n},\n  /** setup_intent_param */\n    card?: {\n  /** setup_intent_mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n    currency: string,\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    link?: {\n  /** @maxLength 5000 */\n    persistent_token?: string,\n\n},\n  /** setup_intent_payment_method_options_param */\n    sepa_debit?: {\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n\n},\n  /** setup_intent_payment_method_options_param */\n    us_bank_account?: {\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n\n},\n  /** The list of payment method types (e.g. card) that this SetupIntent is allowed to use. If this is not provided, defaults to [\"card\"]. */\n    payment_method_types?: (string)[],\n  /** The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm). */\n    return_url?: string,\n  /**\n   * setup_intent_single_use_params\n   * If this hash is populated, this SetupIntent will generate a single_use Mandate on success.\n   */\n    single_use?: {\n    amount: number,\n    currency: string,\n\n},\n  /** Indicates how the payment method is intended to be used in the future. If not provided, this value defaults to `off_session`. */\n    usage?: \"off_session\" | \"on_session\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/setup_intents/{intent}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The client secret of the SetupIntent. Required if a publishable key is used to retrieve the SetupIntent. */\n client_secret?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.client_secret": {
        "rendered": "\n/** The client secret of the SetupIntent. Required if a publishable key is used to retrieve the SetupIntent. */\n client_secret?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/setup_intents/{intent}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n   * \n   * It can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.\n   */\n    attach_to_self?: boolean,\n  /**\n   * ID of the Customer this SetupIntent belongs to, if one exists.\n   * \n   * If present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 1000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Indicates the directions of money movement for which this payment method is intended to be used.\n   * \n   * Include `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.\n   */\n    flow_directions?: (\"inbound\" | \"outbound\")[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\n   * value in the SetupIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this SetupIntent.\n   */\n    payment_method_options?: {\n  /** setup_intent_payment_method_options_param */\n    acss_debit?: {\n    currency?: \"cad\" | \"usd\",\n  /** setup_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n    default_for?: (\"invoice\" | \"subscription\")[],\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    blik?: {\n  /** @maxLength 5000 */\n    code?: string,\n\n},\n  /** setup_intent_param */\n    card?: {\n  /** setup_intent_mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n    currency: string,\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    link?: {\n  /** @maxLength 5000 */\n    persistent_token?: string,\n\n},\n  /** setup_intent_payment_method_options_param */\n    sepa_debit?: {\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n\n},\n  /** setup_intent_payment_method_options_param */\n    us_bank_account?: {\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n\n},\n  /** The list of payment method types (e.g. card) that this SetupIntent is allowed to set up. If this is not provided, defaults to [\"card\"]. */\n    payment_method_types?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/setup_intents/{intent}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * Reason for canceling this SetupIntent. Possible values are `abandoned`, `requested_by_customer`, or `duplicate`\n   * @maxLength 5000\n   */\n    cancellation_reason?: \"abandoned\" | \"duplicate\" | \"requested_by_customer\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/setup_intents/{intent}/confirm": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The client secret of the SetupIntent.\n   * @maxLength 5000\n   */\n    client_secret?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** This hash contains details about the Mandate to create */\n    mandate_data?: ({\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** @format unix-time */\n    accepted_at?: number,\n  /** offline_param */\n    offline?: hasuraSdk.JSONValue,\n  /** online_param */\n    online?: {\n    ip_address: string,\n  /** @maxLength 5000 */\n    user_agent: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"offline\" | \"online\",\n\n},\n\n} | {\n  /** customer_acceptance_param */\n    customer_acceptance: {\n  /** online_param */\n    online: {\n    ip_address?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    type: \"online\",\n\n},\n\n}),\n  /**\n   * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.\n   * @maxLength 5000\n   */\n    payment_method?: string,\n  /**\n   * payment_method_data_params\n   * When included, this hash creates a PaymentMethod that is set as the [`payment_method`](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-payment_method)\n   * value in the SetupIntent.\n   */\n    payment_method_data?: {\n  /** payment_method_param */\n    acss_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    institution_number: string,\n  /** @maxLength 5000 */\n    transit_number: string,\n\n},\n  /** param */\n    affirm?: hasuraSdk.JSONValue,\n  /** param */\n    afterpay_clearpay?: hasuraSdk.JSONValue,\n  /** param */\n    alipay?: hasuraSdk.JSONValue,\n  /** param */\n    au_becs_debit?: {\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    bsb_number: string,\n\n},\n  /** param */\n    bacs_debit?: {\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    sort_code?: string,\n\n},\n  /** param */\n    bancontact?: hasuraSdk.JSONValue,\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /** param */\n    blik?: hasuraSdk.JSONValue,\n  /** param */\n    boleto?: {\n  /** @maxLength 5000 */\n    tax_id: string,\n\n},\n  /** param */\n    customer_balance?: hasuraSdk.JSONValue,\n  /** param */\n    eps?: {\n  /** @maxLength 5000 */\n    bank?: \"arzte_und_apotheker_bank\" | \"austrian_anadi_bank_ag\" | \"bank_austria\" | \"bankhaus_carl_spangler\" | \"bankhaus_schelhammer_und_schattera_ag\" | \"bawag_psk_ag\" | \"bks_bank_ag\" | \"brull_kallmus_bank_ag\" | \"btv_vier_lander_bank\" | \"capital_bank_grawe_gruppe_ag\" | \"deutsche_bank_ag\" | \"dolomitenbank\" | \"easybank_ag\" | \"erste_bank_und_sparkassen\" | \"hypo_alpeadriabank_international_ag\" | \"hypo_bank_burgenland_aktiengesellschaft\" | \"hypo_noe_lb_fur_niederosterreich_u_wien\" | \"hypo_oberosterreich_salzburg_steiermark\" | \"hypo_tirol_bank_ag\" | \"hypo_vorarlberg_bank_ag\" | \"marchfelder_bank\" | \"oberbank_ag\" | \"raiffeisen_bankengruppe_osterreich\" | \"schoellerbank_ag\" | \"sparda_bank_wien\" | \"volksbank_gruppe\" | \"volkskreditbank_ag\" | \"vr_bank_braunau\",\n\n},\n  /** param */\n    fpx?: {\n  /** @maxLength 5000 */\n    bank: \"affin_bank\" | \"agrobank\" | \"alliance_bank\" | \"ambank\" | \"bank_islam\" | \"bank_muamalat\" | \"bank_of_china\" | \"bank_rakyat\" | \"bsn\" | \"cimb\" | \"deutsche_bank\" | \"hong_leong_bank\" | \"hsbc\" | \"kfh\" | \"maybank2e\" | \"maybank2u\" | \"ocbc\" | \"pb_enterprise\" | \"public_bank\" | \"rhb\" | \"standard_chartered\" | \"uob\",\n\n},\n  /** param */\n    giropay?: hasuraSdk.JSONValue,\n  /** param */\n    grabpay?: hasuraSdk.JSONValue,\n  /** param */\n    ideal?: {\n  /** @maxLength 5000 */\n    bank?: \"abn_amro\" | \"asn_bank\" | \"bunq\" | \"handelsbanken\" | \"ing\" | \"knab\" | \"moneyou\" | \"rabobank\" | \"regiobank\" | \"revolut\" | \"sns_bank\" | \"triodos_bank\" | \"van_lanschot\" | \"yoursafe\",\n\n},\n  /** param */\n    interac_present?: hasuraSdk.JSONValue,\n  /** param */\n    klarna?: {\n  /** date_of_birth */\n    dob?: {\n    day: number,\n    month: number,\n    year: number,\n\n},\n\n},\n  /** param */\n    konbini?: hasuraSdk.JSONValue,\n  /** param */\n    link?: hasuraSdk.JSONValue,\n    metadata?: hasuraSdk.JSONValue,\n  /** param */\n    oxxo?: hasuraSdk.JSONValue,\n  /** param */\n    \"p24\"?: {\n    bank?: \"alior_bank\" | \"bank_millennium\" | \"bank_nowy_bfg_sa\" | \"bank_pekao_sa\" | \"banki_spbdzielcze\" | \"blik\" | \"bnp_paribas\" | \"boz\" | \"citi_handlowy\" | \"credit_agricole\" | \"envelobank\" | \"etransfer_pocztowy24\" | \"getin_bank\" | \"ideabank\" | \"ing\" | \"inteligo\" | \"mbank_mtransfer\" | \"nest_przelew\" | \"noble_pay\" | \"pbac_z_ipko\" | \"plus_bank\" | \"santander_przelew24\" | \"tmobile_usbugi_bankowe\" | \"toyota_bank\" | \"volkswagen_bank\",\n\n},\n  /** param */\n    paynow?: hasuraSdk.JSONValue,\n  /** param */\n    pix?: hasuraSdk.JSONValue,\n  /** param */\n    promptpay?: hasuraSdk.JSONValue,\n  /** radar_options */\n    radar_options?: {\n  /** @maxLength 5000 */\n    session?: string,\n\n},\n  /** param */\n    sepa_debit?: {\n  /** @maxLength 5000 */\n    iban: string,\n\n},\n  /** param */\n    sofort?: {\n    country: \"AT\" | \"BE\" | \"DE\" | \"ES\" | \"IT\" | \"NL\",\n\n},\n    type: \"acss_debit\" | \"affirm\" | \"afterpay_clearpay\" | \"alipay\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"blik\" | \"boleto\" | \"customer_balance\" | \"eps\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"klarna\" | \"konbini\" | \"link\" | \"oxxo\" | \"p24\" | \"paynow\" | \"pix\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n  /** param */\n    wechat_pay?: hasuraSdk.JSONValue,\n\n},\n  /**\n   * payment_method_options_param\n   * Payment-method-specific configuration for this SetupIntent.\n   */\n    payment_method_options?: {\n  /** setup_intent_payment_method_options_param */\n    acss_debit?: {\n    currency?: \"cad\" | \"usd\",\n  /** setup_intent_payment_method_options_mandate_options_param */\n    mandate_options?: {\n    custom_mandate_url?: (string | \"\"),\n    default_for?: (\"invoice\" | \"subscription\")[],\n  /** @maxLength 500 */\n    interval_description?: string,\n    payment_schedule?: \"combined\" | \"interval\" | \"sporadic\",\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    blik?: {\n  /** @maxLength 5000 */\n    code?: string,\n\n},\n  /** setup_intent_param */\n    card?: {\n  /** setup_intent_mandate_options_param */\n    mandate_options?: {\n    amount: number,\n    amount_type: \"fixed\" | \"maximum\",\n    currency: string,\n  /** @maxLength 200 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n    interval: \"day\" | \"month\" | \"sporadic\" | \"week\" | \"year\",\n    interval_count?: number,\n  /** @maxLength 80 */\n    reference: string,\n  /** @format unix-time */\n    start_date: number,\n    supported_types?: (\"india\")[],\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n  /** @maxLength 5000 */\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n},\n  /** setup_intent_payment_method_options_param */\n    link?: {\n  /** @maxLength 5000 */\n    persistent_token?: string,\n\n},\n  /** setup_intent_payment_method_options_param */\n    sepa_debit?: {\n  /** payment_method_options_mandate_options_param */\n    mandate_options?: hasuraSdk.JSONValue,\n\n},\n  /** setup_intent_payment_method_options_param */\n    us_bank_account?: {\n  /** linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n  /** @maxLength 5000 */\n    return_url?: string,\n\n},\n  /** networks_options_param */\n    networks?: {\n    requested?: (\"ach\" | \"us_domestic_wire\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n},\n\n},\n  /**\n   * The URL to redirect your customer back to after they authenticate on the payment method's app or site.\n   * If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.\n   * This parameter is only used for cards and other redirect-based payment methods.\n   */\n    return_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/setup_intents/{intent}/verify_microdeposits": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Two positive integers, in *cents*, equal to the values of the microdeposits sent to the bank account. */\n    amounts?: (number)[],\n  /**\n   * The client secret of the SetupIntent.\n   * @maxLength 5000\n   */\n    client_secret?: string,\n  /**\n   * A six-character code starting with SM present in the microdeposit sent to the bank account.\n   * @maxLength 5000\n   */\n    descriptor_code?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".intent": {
        "rendered": " intent: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SetupIntent",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/shipping_rates": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return shipping rates that are active or inactive. */\n active?: boolean, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return shipping rates for the given currency. */\n currency?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Only return shipping rates that are active or inactive. */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.currency": {
        "rendered": "\n/** Only return shipping rates for the given currency. */\n currency?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ShippingRate)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/shipping_rates\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/shipping_rates": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * delivery_estimate\n   * The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.\n   */\n    delivery_estimate?: {\n  /** delivery_estimate_bound */\n    maximum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n  /** delivery_estimate_bound */\n    minimum?: {\n    unit: \"business_day\" | \"day\" | \"hour\" | \"month\" | \"week\",\n    value: number,\n\n},\n\n},\n  /**\n   * The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.\n   * @maxLength 100\n   */\n    display_name: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * fixed_amount\n   * Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.\n   */\n    fixed_amount?: {\n    amount: number,\n    currency: string,\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n  /** A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`. */\n    tax_code?: string,\n  /** The type of calculation to use on the shipping rate. Can only be `fixed_amount` for now. */\n    type?: \"fixed_amount\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "ShippingRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/shipping_rates/{shipping_rate_token}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".shippingRateToken": {
        "rendered": " shippingRateToken: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ShippingRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/shipping_rates/{shipping_rate_token}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Whether the shipping rate can be used for new purchases. Defaults to `true`. */\n    active?: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * fixed_amount_update\n   * Describes a fixed amount to charge for shipping. Must be present if type is `fixed_amount`.\n   */\n    fixed_amount?: {\n    currency_options?: hasuraSdk.JSONValue,\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. */\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".shippingRateToken": {
        "rendered": " shippingRateToken: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ShippingRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sigma/scheduled_query_runs": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (ScheduledQueryRun)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/sigma/scheduled_query_runs\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sigma/scheduled_query_runs/{scheduled_query_run}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".scheduledQueryRun": {
        "rendered": " scheduledQueryRun: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ScheduledQueryRun",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/sources": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources. Not supported for `receiver` type sources, where charge amount may not be specified until funds land. */\n    amount?: number,\n  /** Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. */\n    currency?: string,\n  /**\n   * The `Customer` to whom the original source is attached to. Must be set when the original source is not a `Source` (e.g., `Card`).\n   * @maxLength 500\n   */\n    customer?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The authentication `flow` of the source to create. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`. It is generally inferred unless a type supports multiple flows.\n   * @maxLength 5000\n   */\n    flow?: \"code_verification\" | \"none\" | \"receiver\" | \"redirect\",\n  /**\n   * mandate_params\n   * Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.\n   */\n    mandate?: {\n  /** mandate_acceptance_params */\n    acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** mandate_offline_acceptance_params */\n    offline?: {\n    contact_email: string,\n\n},\n  /** mandate_online_acceptance_params */\n    online?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    status: \"accepted\" | \"pending\" | \"refused\" | \"revoked\",\n  /** @maxLength 5000 */\n    type?: \"offline\" | \"online\",\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n    amount?: (number | \"\"),\n    currency?: string,\n  /** @maxLength 5000 */\n    interval?: \"one_time\" | \"scheduled\" | \"variable\",\n  /** @maxLength 5000 */\n    notification_method?: \"deprecated_none\" | \"email\" | \"manual\" | \"none\" | \"stripe_email\",\n\n},\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The source to share.\n   * @maxLength 5000\n   */\n    original_source?: string,\n  /**\n   * owner\n   * Information about the owner of the payment instrument that may be used or required by particular source types.\n   */\n    owner?: {\n  /** source_address */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /**\n   * receiver_params\n   * Optional parameters for the receiver flow. Can be set only if the source is a receiver (`flow` is `receiver`).\n   */\n    receiver?: {\n  /** @maxLength 5000 */\n    refund_attributes_method?: \"email\" | \"manual\" | \"none\",\n\n},\n  /**\n   * redirect_params\n   * Parameters required for the redirect flow. Required if the source is authenticated by a redirect (`flow` is `redirect`).\n   */\n    redirect?: {\n    return_url: string,\n\n},\n  /**\n   * shallow_order_specs\n   * Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.\n   */\n    source_order?: {\n    items?: ({\n    amount?: number,\n    currency?: string,\n  /** @maxLength 1000 */\n    description?: string,\n  /** @maxLength 5000 */\n    parent?: string,\n    quantity?: number,\n  /** @maxLength 5000 */\n    type?: \"discount\" | \"shipping\" | \"sku\" | \"tax\",\n\n})[],\n  /** order_shipping */\n    shipping?: {\n  /** address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n\n},\n  /**\n   * An arbitrary string to be displayed on your customer's statement. As an example, if your website is `RunClub` and the item you're charging for is a race ticket, you may want to specify a `statement_descriptor` of `RunClub 5K race ticket.` While many payment types will display this information, some may not display it at all.\n   * @maxLength 5000\n   */\n    statement_descriptor?: string,\n  /**\n   * An optional token used to create the source. When passed, token properties will override source parameters.\n   * @maxLength 5000\n   */\n    token?: string,\n  /**\n   * The `type` of the source to create. Required unless `customer` and `original_source` are specified (see the [Cloning card Sources](https://stripe.com/docs/sources/connect#cloning-card-sources) guide)\n   * @maxLength 5000\n   */\n    type?: string,\n  /** @maxLength 5000 */\n    usage?: \"reusable\" | \"single_use\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Source",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sources/{source}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The client secret of the source. Required if a publishable key is used to retrieve the source. */\n client_secret?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.client_secret": {
        "rendered": "\n/** The client secret of the source. Required if a publishable key is used to retrieve the source. */\n client_secret?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Source",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/sources/{source}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Amount associated with the source. */\n    amount?: number,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * mandate_params\n   * Information about a mandate possibility attached to a source object (generally for bank debits) as well as its acceptance status.\n   */\n    mandate?: {\n  /** mandate_acceptance_params */\n    acceptance?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** mandate_offline_acceptance_params */\n    offline?: {\n    contact_email: string,\n\n},\n  /** mandate_online_acceptance_params */\n    online?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n  /** @maxLength 5000 */\n    status: \"accepted\" | \"pending\" | \"refused\" | \"revoked\",\n  /** @maxLength 5000 */\n    type?: \"offline\" | \"online\",\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n    amount?: (number | \"\"),\n    currency?: string,\n  /** @maxLength 5000 */\n    interval?: \"one_time\" | \"scheduled\" | \"variable\",\n  /** @maxLength 5000 */\n    notification_method?: \"deprecated_none\" | \"email\" | \"manual\" | \"none\" | \"stripe_email\",\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * owner\n   * Information about the owner of the payment instrument that may be used or required by particular source types.\n   */\n    owner?: {\n  /** source_address */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n  /**\n   * order_params\n   * Information about the items and shipping associated with the source. Required for transactional credit (for example Klarna) sources before you can charge it.\n   */\n    source_order?: {\n    items?: ({\n    amount?: number,\n    currency?: string,\n  /** @maxLength 1000 */\n    description?: string,\n  /** @maxLength 5000 */\n    parent?: string,\n    quantity?: number,\n  /** @maxLength 5000 */\n    type?: \"discount\" | \"shipping\" | \"sku\" | \"tax\",\n\n})[],\n  /** order_shipping */\n    shipping?: {\n  /** address */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\": string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    carrier?: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    tracking_number?: string,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Source",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sources/{source}/mandate_notifications/{mandate_notification}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".mandateNotification": {
        "rendered": " mandateNotification: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SourceMandateNotification",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sources/{source}/source_transactions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (SourceTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/sources/{source}/source_transactions/{source_transaction}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sourceTransaction": {
        "rendered": " sourceTransaction: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SourceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/sources/{source}/verify": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The values needed to verify the source. */\n    values: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".source": {
        "rendered": " source: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Source",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscription_items": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** The ID of the subscription whose items will be retrieved. */\n subscription: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.subscription": {
        "rendered": "\n/** The ID of the subscription whose items will be retrieved. */\n subscription: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (SubscriptionItem)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/subscription_items\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_items": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n   * \n   * Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * The ID of the price object.\n   * @maxLength 5000\n   */\n    price?: string,\n  /**\n   * recurring_price_data\n   * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.\n   */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.\n   * @format unix-time\n   */\n    proration_date?: number,\n  /** The quantity you'd like to apply to the subscription item you're creating. */\n    quantity?: number,\n  /**\n   * The identifier of the subscription to modify.\n   * @maxLength 5000\n   */\n    subscription: string,\n  /** A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates. */\n    tax_rates?: ((string)[] | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/subscription_items/{item}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Delete all usage for the given subscription item. Allowed only when the current plan's `usage_type` is `metered`. */\n    clear_usage?: boolean,\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.\n   * @format unix-time\n   */\n    proration_date?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".item": {
        "rendered": " item: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedSubscriptionItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscription_items/{item}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".item": {
        "rendered": " item: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_items/{item}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. */\n    off_session?: boolean,\n  /**\n   * Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n   * \n   * Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * The ID of the price object. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.\n   * @maxLength 5000\n   */\n    price?: string,\n  /**\n   * recurring_price_data\n   * Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.\n   */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply the same proration that was previewed with the [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.\n   * @format unix-time\n   */\n    proration_date?: number,\n  /** The quantity you'd like to apply to the subscription item you're creating. */\n    quantity?: number,\n  /** A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates. */\n    tax_rates?: ((string)[] | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".item": {
        "rendered": " item: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionItem",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscription_items/{subscription_item}/usage_record_summaries": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionItem": {
        "rendered": " subscriptionItem: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (UsageRecordSummary)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_items/{subscription_item}/usage_records": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Valid values are `increment` (default) or `set`. When using `increment` the specified `quantity` will be added to the usage at the specified timestamp. The `set` action will overwrite the usage quantity at that timestamp. If the subscription has [billing thresholds](https://stripe.com/docs/api/subscriptions/object#subscription_object-billing_thresholds), `increment` is the only allowed value. */\n    action?: \"increment\" | \"set\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The usage quantity for the specified timestamp. */\n    quantity: number,\n  /** The timestamp for the usage event. This timestamp must be within the current billing period of the subscription of the provided `subscription_item`, and must not be in the future. When passing `\"now\"`, Stripe records usage for the current time. Default is `\"now\"` if a value is not provided. */\n    timestamp?: (\"now\" | number),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionItem": {
        "rendered": " subscriptionItem: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "UsageRecord",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscription_schedules": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Only return subscription schedules that were created canceled the given date interval. */\n canceled_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return subscription schedules that completed during the given date interval. */\n completed_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return subscription schedules that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return subscription schedules for the given customer. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return subscription schedules that were released during the given date interval. */\n released_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return subscription schedules that have not started yet. */\n scheduled?: boolean, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.canceled_at": {
        "rendered": "\n/** Only return subscription schedules that were created canceled the given date interval. */\n canceled_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.completed_at": {
        "rendered": "\n/** Only return subscription schedules that completed during the given date interval. */\n completed_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** Only return subscription schedules that were created during the given date interval. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return subscription schedules for the given customer. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.released_at": {
        "rendered": "\n/** Only return subscription schedules that were released during the given date interval. */\n released_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scheduled": {
        "rendered": "\n/** Only return subscription schedules that have not started yet. */\n scheduled?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (SubscriptionSchedule)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/subscription_schedules\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_schedules": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * The identifier of the customer to create the subscription schedule for.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * default_settings_params\n   * Object representing the subscription schedule's default settings.\n   */\n    default_settings?: {\n    application_fee_percent?: number,\n  /** automatic_tax_config */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n    billing_cycle_anchor?: \"automatic\" | \"phase_start\",\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n  /** @maxLength 500 */\n    description?: string,\n  /** subscription_schedules_param */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n    on_behalf_of?: (string | \"\"),\n    transfer_data?: ({\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n\n},\n  /** Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running.`cancel` will end the subscription schedule and cancel the underlying subscription. */\n    end_behavior?: \"cancel\" | \"none\" | \"release\" | \"renew\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Migrate an existing subscription to be managed by a subscription schedule. If this parameter is set, a subscription schedule will be created using the subscription's item(s), set to auto-renew using the subscription's interval. When using this parameter, other parameters (such as phase values) cannot be set. To create a subscription schedule with other modifications, we recommend making two separate API calls.\n   * @maxLength 5000\n   */\n    from_subscription?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase. */\n    phases?: ({\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n    application_fee_percent?: number,\n  /** automatic_tax_config */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n    billing_cycle_anchor?: \"automatic\" | \"phase_start\",\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** @maxLength 5000 */\n    coupon?: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n    default_tax_rates?: ((string)[] | \"\"),\n  /** @maxLength 500 */\n    description?: string,\n  /** @format unix-time */\n    end_date?: number,\n  /** subscription_schedules_param */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n    items: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n    iterations?: number,\n    metadata?: hasuraSdk.JSONValue,\n    on_behalf_of?: string,\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /** transfer_data_specs */\n    transfer_data?: {\n    amount_percent?: number,\n    destination: string,\n\n},\n    trial?: boolean,\n  /** @format unix-time */\n    trial_end?: number,\n\n})[],\n  /** When the subscription schedule starts. We recommend using `now` so that it starts the subscription immediately. You can also use a Unix timestamp to backdate the subscription so that it starts on a past date, or set a future date for the subscription to start on. */\n    start_date?: (number | \"now\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionSchedule",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscription_schedules/{schedule}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".schedule": {
        "rendered": " schedule: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionSchedule",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_schedules/{schedule}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * default_settings_params\n   * Object representing the subscription schedule's default settings.\n   */\n    default_settings?: {\n    application_fee_percent?: number,\n  /** automatic_tax_config */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n    billing_cycle_anchor?: \"automatic\" | \"phase_start\",\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n  /** @maxLength 500 */\n    description?: string,\n  /** subscription_schedules_param */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n    on_behalf_of?: (string | \"\"),\n    transfer_data?: ({\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n\n},\n  /** Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` or `cancel` with the default being `release`. `release` will end the subscription schedule and keep the underlying subscription running.`cancel` will end the subscription schedule and cancel the underlying subscription. */\n    end_behavior?: \"cancel\" | \"none\" | \"release\" | \"renew\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** List representing phases of the subscription schedule. Each phase can be customized to have different durations, plans, and coupons. If there are multiple phases, the `end_date` of one phase will always equal the `start_date` of the next phase. Note that past phases can be omitted. */\n    phases?: ({\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n    application_fee_percent?: number,\n  /** automatic_tax_config */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n    billing_cycle_anchor?: \"automatic\" | \"phase_start\",\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /** @maxLength 5000 */\n    coupon?: string,\n  /** @maxLength 5000 */\n    default_payment_method?: string,\n    default_tax_rates?: ((string)[] | \"\"),\n  /** @maxLength 500 */\n    description?: string,\n    end_date?: (number | \"now\"),\n  /** subscription_schedules_param */\n    invoice_settings?: {\n    days_until_due?: number,\n\n},\n    items: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n    iterations?: number,\n    metadata?: hasuraSdk.JSONValue,\n    on_behalf_of?: string,\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n    start_date?: (number | \"now\"),\n  /** transfer_data_specs */\n    transfer_data?: {\n    amount_percent?: number,\n    destination: string,\n\n},\n    trial?: boolean,\n    trial_end?: (number | \"now\"),\n\n})[],\n  /** If the update changes the current phase, indicates whether the changes should be prorated. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".schedule": {
        "rendered": " schedule: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionSchedule",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_schedules/{schedule}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** If the subscription schedule is `active`, indicates if a final invoice will be generated that contains any un-invoiced metered usage and new/pending proration invoice items. Defaults to `true`. */\n    invoice_now?: boolean,\n  /** If the subscription schedule is `active`, indicates if the cancellation should be prorated. Defaults to `true`. */\n    prorate?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".schedule": {
        "rendered": " schedule: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionSchedule",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscription_schedules/{schedule}/release": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Keep any cancellation on the subscription that the schedule has set */\n    preserve_cancel_date?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".schedule": {
        "rendered": " schedule: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SubscriptionSchedule",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscriptions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`. */\n collection_method?: \"charge_automatically\" | \"send_invoice\",  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,  current_period_end?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,  current_period_start?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** The ID of the customer whose subscriptions will be retrieved. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Filter for subscriptions that contain this recurring price ID. */\n price?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned. */\n status?: \"active\" | \"all\" | \"canceled\" | \"ended\" | \"incomplete\" | \"incomplete_expired\" | \"past_due\" | \"paused\" | \"trialing\" | \"unpaid\", \n/** Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set. */\n test_clock?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.collection_method": {
        "rendered": "\n/** The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`. */\n collection_method?: \"charge_automatically\" | \"send_invoice\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.current_period_end": {
        "rendered": " current_period_end?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.current_period_start": {
        "rendered": " current_period_start?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** The ID of the customer whose subscriptions will be retrieved. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.price": {
        "rendered": "\n/** Filter for subscriptions that contain this recurring price ID. */\n price?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned. */\n status?: \"active\" | \"all\" | \"canceled\" | \"ended\" | \"incomplete\" | \"incomplete_expired\" | \"past_due\" | \"paused\" | \"trialing\" | \"unpaid\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.test_clock": {
        "rendered": "\n/** Filter for subscriptions that are associated with the specified test clock. The response will not include subscriptions with test clocks if this and the customer parameter is not set. */\n test_clock?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Subscription)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/subscriptions\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscriptions": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items. */\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions). */\n    application_fee_percent?: number,\n  /**\n   * automatic_tax_config\n   * Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /**\n   * For new subscriptions, a past timestamp to backdate the subscription's start date to. If set, the first invoice will contain a proration for the timespan between the start date and the current time. Can be combined with trials and the billing cycle anchor.\n   * @format unix-time\n   */\n    backdate_start_date?: number,\n  /**\n   * A future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.\n   * @format unix-time\n   */\n    billing_cycle_anchor?: number,\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n  /**\n   * A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period.\n   * @format unix-time\n   */\n    cancel_at?: number,\n  /** Boolean indicating whether this subscription should cancel at the end of the current period. */\n    cancel_at_period_end?: boolean,\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    coupon?: string,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency?: string,\n  /**\n   * The identifier of the customer to subscribe.\n   * @maxLength 5000\n   */\n    customer: string,\n  /** Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /**\n   * The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.\n   * @maxLength 500\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A list of up to 20 subscription items, each with an attached price. */\n    items?: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    metadata?: hasuraSdk.JSONValue,\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. */\n    off_session?: boolean,\n  /** The account on behalf of which to charge, for each of the subscription's invoices. */\n    on_behalf_of?: (string | \"\"),\n  /**\n   * Only applies to subscriptions with `collection_method=charge_automatically`.\n   * \n   * Use `allow_incomplete` to create subscriptions with `status=incomplete` if the first invoice cannot be paid. Creating subscriptions with this status allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to create Subscriptions with `status=incomplete` when the first invoice requires payment, otherwise start as active. Subscriptions transition to `status=active` when successfully confirming the payment intent on the first invoice. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method. If the payment intent is not confirmed within 23 hours subscriptions transition to `status=incomplete_expired`, which is a terminal state.\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's first invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not create a subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   * \n   * `pending_if_incomplete` is only used with updates and cannot be passed when creating a subscription.\n   * \n   * Subscriptions with `collection_method=send_invoice` are automatically activated regardless of the first invoice status.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * payment_settings\n   * Payment settings to pass to invoices created by the subscription.\n   */\n    payment_settings?: {\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    amount?: number,\n    amount_type?: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n    save_default_payment_method?: \"off\" | \"on_subscription\",\n\n},\n  /** Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval. */\n    pending_invoice_item_interval?: ({\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n} | \"\"),\n  /**\n   * The API ID of a promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) resulting from the `billing_cycle_anchor`. If no value is passed, the default is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * transfer_data_specs\n   * If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges.\n   */\n    transfer_data?: {\n    amount_percent?: number,\n    destination: string,\n\n},\n  /** Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_end?: (\"now\" | number),\n  /** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_from_plan?: boolean,\n  /** Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_period_days?: number,\n  /**\n   * trial_settings_config\n   * Settings related to subscription trials.\n   */\n    trial_settings?: {\n  /** end_behavior */\n    end_behavior: {\n    missing_payment_method: \"cancel\" | \"create_invoice\" | \"pause\",\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscriptions/search": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string, \n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for subscriptions](https://stripe.com/docs/search#query-fields-for-subscriptions). */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results. */\n page?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for subscriptions](https://stripe.com/docs/search#query-fields-for-subscriptions). */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Subscription)[],\n    has_more: boolean,\n  /** @maxLength 5000 */\n    next_page?: string | null,\n  /** String representing the object's type. Objects of the same type share the same value. */\n    object: \"search_result\",\n  /** The total number of objects that match the query, only accurate up to 10,000. */\n    total_count?: number,\n  /** @maxLength 5000 */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/subscriptions/{subscription_exposed_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * cancellation_details_param\n   * Details about why this subscription was cancelled\n   */\n    cancellation_details?: {\n  /** @maxLength 5000 */\n    comment?: string,\n    feedback?: \"\" | \"customer_service\" | \"low_quality\" | \"missing_features\" | \"other\" | \"switched_service\" | \"too_complex\" | \"too_expensive\" | \"unused\",\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items. */\n    invoice_now?: boolean,\n  /** Will generate a proration invoice item that credits remaining unused time until the subscription period end. */\n    prorate?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/subscriptions/{subscription_exposed_id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscriptions/{subscription_exposed_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A list of prices and quantities that will generate invoice items appended to the next invoice for this subscription. You may pass up to 20 items. */\n    add_invoice_items?: ({\n  /** @maxLength 5000 */\n    price?: string,\n  /** one_time_price_data_with_negative_amounts */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. The request must be made by a platform account on a connected account in order to set an application fee percentage. For more information, see the application fees [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions). */\n    application_fee_percent?: number,\n  /**\n   * automatic_tax_config\n   * Automatic tax settings for this subscription. We recommend you only include this parameter when the existing value is being changed.\n   */\n    automatic_tax?: {\n    enabled: boolean,\n\n},\n  /**\n   * Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).\n   * @maxLength 5000\n   */\n    billing_cycle_anchor?: \"now\" | \"unchanged\",\n  /** Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. Pass an empty string to remove previously-defined thresholds. */\n    billing_thresholds?: ({\n    amount_gte?: number,\n    reset_billing_cycle_anchor?: boolean,\n\n} | \"\"),\n  /** A timestamp at which the subscription should cancel. If set to a date before the current period ends, this will cause a proration if prorations have been enabled using `proration_behavior`. If set during a future period, this will always cause a proration for that period. */\n    cancel_at?: (number | \"\"),\n  /** Boolean indicating whether this subscription should cancel at the end of the current period. */\n    cancel_at_period_end?: boolean,\n  /**\n   * cancellation_details_param\n   * Details about why this subscription was cancelled\n   */\n    cancellation_details?: {\n  /** @maxLength 5000 */\n    comment?: string,\n    feedback?: \"\" | \"customer_service\" | \"low_quality\" | \"missing_features\" | \"other\" | \"switched_service\" | \"too_complex\" | \"too_expensive\" | \"unused\",\n\n},\n  /** Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`. */\n    collection_method?: \"charge_automatically\" | \"send_invoice\",\n  /**\n   * The ID of the coupon to apply to this subscription. A coupon applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    coupon?: string,\n  /** Number of days a customer has to pay invoices generated by this subscription. Valid only for subscriptions where `collection_method` is set to `send_invoice`. */\n    days_until_due?: number,\n  /**\n   * ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_payment_method?: string,\n  /**\n   * ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).\n   * @maxLength 5000\n   */\n    default_source?: string,\n  /** The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription. Pass an empty string to remove previously-defined tax rates. */\n    default_tax_rates?: ((string)[] | \"\"),\n  /**\n   * The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.\n   * @maxLength 500\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** A list of up to 20 subscription items, each with an attached price. */\n    items?: ({\n    billing_thresholds?: ({\n    usage_gte: number,\n\n} | \"\"),\n    clear_usage?: boolean,\n    deleted?: boolean,\n  /** @maxLength 5000 */\n    id?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** @maxLength 5000 */\n    price?: string,\n  /** recurring_price_data */\n    price_data?: {\n    currency: string,\n  /** @maxLength 5000 */\n    product: string,\n  /** recurring_adhoc */\n    recurring: {\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n},\n    tax_behavior?: \"exclusive\" | \"inclusive\" | \"unspecified\",\n    unit_amount?: number,\n  /** @format decimal */\n    unit_amount_decimal?: string,\n\n},\n    quantity?: number,\n    tax_rates?: ((string)[] | \"\"),\n\n})[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Indicates if a customer is on or off-session while an invoice payment is attempted. */\n    off_session?: boolean,\n  /** The account on behalf of which to charge, for each of the subscription's invoices. */\n    on_behalf_of?: (string | \"\"),\n  /** If specified, payment collection for this subscription will be paused. */\n    pause_collection?: ({\n    behavior: \"keep_as_draft\" | \"mark_uncollectible\" | \"void\",\n  /** @format unix-time */\n    resumes_at?: number,\n\n} | \"\"),\n  /**\n   * Use `allow_incomplete` to transition the subscription to `status=past_due` if a payment is required but cannot be paid. This allows you to manage scenarios where additional user actions are needed to pay a subscription's invoice. For example, SCA regulation may require 3DS authentication to complete payment. See the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication) for Billing to learn more. This is the default behavior.\n   * \n   * Use `default_incomplete` to transition the subscription to `status=past_due` when payment is required and await explicit confirmation of the invoice's payment intent. This allows simpler management of scenarios where additional user actions are needed to pay a subscription’s invoice. Such as failed payments, [SCA regulation](https://stripe.com/docs/billing/migration/strong-customer-authentication), or collecting a mandate for a bank debit payment method.\n   * \n   * Use `pending_if_incomplete` to update the subscription using [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates). When you use `pending_if_incomplete` you can only pass the parameters [supported by pending updates](https://stripe.com/docs/billing/pending-updates-reference#supported-attributes).\n   * \n   * Use `error_if_incomplete` if you want Stripe to return an HTTP 402 status code if a subscription's invoice cannot be paid. For example, if a payment method requires 3DS authentication due to SCA regulation and further user action is needed, this parameter does not update the subscription and returns an error instead. This was the default behavior for API versions prior to 2019-03-14. See the [changelog](https://stripe.com/docs/upgrades#2019-03-14) to learn more.\n   */\n    payment_behavior?: \"allow_incomplete\" | \"default_incomplete\" | \"error_if_incomplete\" | \"pending_if_incomplete\",\n  /**\n   * payment_settings\n   * Payment settings to pass to invoices created by the subscription.\n   */\n    payment_settings?: {\n  /** payment_method_options */\n    payment_method_options?: {\n    acss_debit?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    transaction_type?: \"business\" | \"personal\",\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n    bancontact?: ({\n    preferred_language?: \"de\" | \"en\" | \"fr\" | \"nl\",\n\n} | \"\"),\n    card?: ({\n  /** mandate_options_param */\n    mandate_options?: {\n    amount?: number,\n    amount_type?: \"fixed\" | \"maximum\",\n  /** @maxLength 200 */\n    description?: string,\n\n},\n  /** @maxLength 5000 */\n    network?: \"amex\" | \"cartes_bancaires\" | \"diners\" | \"discover\" | \"interac\" | \"jcb\" | \"mastercard\" | \"unionpay\" | \"unknown\" | \"visa\",\n    request_three_d_secure?: \"any\" | \"automatic\",\n\n} | \"\"),\n    customer_balance?: ({\n  /** bank_transfer_param */\n    bank_transfer?: {\n  /** eu_bank_transfer_param */\n    eu_bank_transfer?: {\n  /** @maxLength 5000 */\n    country: string,\n\n},\n    type?: string,\n\n},\n    funding_type?: string,\n\n} | \"\"),\n    konbini?: (hasuraSdk.JSONValue | \"\"),\n    us_bank_account?: ({\n  /** invoice_linked_account_options_param */\n    financial_connections?: {\n    permissions?: (\"balances\" | \"ownership\" | \"payment_method\" | \"transactions\")[],\n\n},\n    verification_method?: \"automatic\" | \"instant\" | \"microdeposits\",\n\n} | \"\"),\n\n},\n    payment_method_types?: ((\"ach_credit_transfer\" | \"ach_debit\" | \"acss_debit\" | \"au_becs_debit\" | \"bacs_debit\" | \"bancontact\" | \"boleto\" | \"card\" | \"customer_balance\" | \"fpx\" | \"giropay\" | \"grabpay\" | \"ideal\" | \"konbini\" | \"link\" | \"paynow\" | \"promptpay\" | \"sepa_debit\" | \"sofort\" | \"us_bank_account\" | \"wechat_pay\")[] | \"\"),\n    save_default_payment_method?: \"off\" | \"on_subscription\",\n\n},\n  /** Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval. */\n    pending_invoice_item_interval?: ({\n    interval: \"day\" | \"month\" | \"week\" | \"year\",\n    interval_count?: number,\n\n} | \"\"),\n  /**\n   * The promotion code to apply to this subscription. A promotion code applied to a subscription will only affect invoices created for that particular subscription.\n   * @maxLength 5000\n   */\n    promotion_code?: string,\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was updated at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint. It can also be used to implement custom proration logic, such as prorating by day instead of by second, by providing the time that you wish to use for proration calculations.\n   * @format unix-time\n   */\n    proration_date?: number,\n  /** If specified, the funds from the subscription's invoices will be transferred to the destination and the ID of the resulting transfers will be found on the resulting charges. This will be unset if you POST an empty value. */\n    transfer_data?: ({\n    amount_percent?: number,\n    destination: string,\n\n} | \"\"),\n  /** Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value `now` can be provided to end the customer's trial immediately. Can be at most two years from `billing_cycle_anchor`. */\n    trial_end?: (\"now\" | number),\n  /** Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more. */\n    trial_from_plan?: boolean,\n  /**\n   * trial_settings_config\n   * Settings related to subscription trials.\n   */\n    trial_settings?: {\n  /** end_behavior */\n    end_behavior: {\n    missing_payment_method: \"cancel\" | \"create_invoice\" | \"pause\",\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/subscriptions/{subscription_exposed_id}/discount": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscriptionExposedId": {
        "rendered": " subscriptionExposedId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedDiscount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/subscriptions/{subscription}/resume": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * Either `now` or `unchanged`. Setting the value to `now` resets the subscription's billing cycle anchor to the current time (in UTC). Setting the value to `unchanged` advances the subscription's billing cycle anchor to the period that surrounds the current time. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).\n   * @maxLength 5000\n   */\n    billing_cycle_anchor?: \"now\" | \"unchanged\",\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. The default value is `create_prorations`. */\n    proration_behavior?: \"always_invoice\" | \"create_prorations\" | \"none\",\n  /**\n   * If set, the proration will be calculated as though the subscription was resumed at the given time. This can be used to apply exactly the same proration that was previewed with [upcoming invoice](https://stripe.com/docs/api#retrieve_customer_invoice) endpoint.\n   * @format unix-time\n   */\n    proration_date?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".subscription": {
        "rendered": " subscription: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Subscription",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/tax_codes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TaxCode)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/tax_codes/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TaxCode",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/tax_rates": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Optional flag to filter by tax rates that are either active or inactive (archived). */\n active?: boolean, \n/** Optional range for filtering created date. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Optional flag to filter by tax rates that are inclusive (or those that are not inclusive). */\n inclusive?: boolean, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.active": {
        "rendered": "\n/** Optional flag to filter by tax rates that are either active or inactive (archived). */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.created": {
        "rendered": "\n/** Optional range for filtering created date. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.inclusive": {
        "rendered": "\n/** Optional flag to filter by tax rates that are inclusive (or those that are not inclusive). */\n inclusive?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TaxRate)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/tax_rates\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/tax_rates": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set. */\n    active?: boolean,\n  /**\n   * Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n   * @maxLength 5000\n   */\n    country?: string,\n  /**\n   * An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * The display name of the tax rate, which will be shown to users.\n   * @maxLength 50\n   */\n    display_name: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** This specifies if the tax rate is inclusive or exclusive. */\n    inclusive: boolean,\n  /**\n   * The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.\n   * @maxLength 50\n   */\n    jurisdiction?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** This represents the tax rate percent out of 100. */\n    percentage: number,\n  /**\n   * [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.\n   * @maxLength 2\n   */\n    state?: string,\n  /** The high-level tax type, such as `vat` or `sales_tax`. */\n    tax_type?: \"gst\" | \"hst\" | \"igst\" | \"jct\" | \"lease_tax\" | \"pst\" | \"qst\" | \"rst\" | \"sales_tax\" | \"vat\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TaxRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/tax_rates/{tax_rate}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".taxRate": {
        "rendered": " taxRate: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TaxRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/tax_rates/{tax_rate}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set. */\n    active?: boolean,\n  /**\n   * Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n   * @maxLength 5000\n   */\n    country?: string,\n  /**\n   * An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * The display name of the tax rate, which will be shown to users.\n   * @maxLength 50\n   */\n    display_name?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.\n   * @maxLength 50\n   */\n    jurisdiction?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * [ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.\n   * @maxLength 2\n   */\n    state?: string,\n  /** The high-level tax type, such as `vat` or `sales_tax`. */\n    tax_type?: \"gst\" | \"hst\" | \"igst\" | \"jct\" | \"lease_tax\" | \"pst\" | \"qst\" | \"rst\" | \"sales_tax\" | \"vat\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".taxRate": {
        "rendered": " taxRate: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TaxRate",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/configurations": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** if present, only return the account default or non-default configurations. */\n is_account_default?: boolean, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.is_account_default": {
        "rendered": "\n/** if present, only return the account default or non-default configurations. */\n is_account_default?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TerminalConfiguration)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/terminal/configurations\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/configurations": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * bbpos_wise_pose\n   * An object containing device type specific settings for BBPOS WisePOS E readers\n   */\n    bbpos_wisepos_e?: {\n    splashscreen?: (string | \"\"),\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Tipping configurations for readers supporting on-reader tips */\n    tipping?: ({\n  /** currency_specific_config */\n    aud?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    cad?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    chf?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    czk?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    dkk?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    eur?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    gbp?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    hkd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    myr?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    nok?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    nzd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    sek?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    sgd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    usd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n\n} | \"\"),\n  /**\n   * verifone_p400\n   * An object containing device type specific settings for Verifone P400 readers\n   */\n    \"verifone_p400\"?: {\n    splashscreen?: (string | \"\"),\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TerminalConfiguration",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/terminal/configurations/{configuration}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".configuration": {
        "rendered": " configuration: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedTerminalConfiguration",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/configurations/{configuration}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".configuration": {
        "rendered": " configuration: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalConfiguration | DeletedTerminalConfiguration)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/configurations/{configuration}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** An object containing device type specific settings for BBPOS WisePOS E readers */\n    bbpos_wisepos_e?: ({\n    splashscreen?: (string | \"\"),\n\n} | \"\"),\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Tipping configurations for readers supporting on-reader tips */\n    tipping?: ({\n  /** currency_specific_config */\n    aud?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    cad?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    chf?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    czk?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    dkk?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    eur?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    gbp?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    hkd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    myr?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    nok?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    nzd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    sek?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    sgd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n  /** currency_specific_config */\n    usd?: {\n    fixed_amounts?: (number)[],\n    percentages?: (number)[],\n    smart_tip_threshold?: number,\n\n},\n\n} | \"\"),\n  /** An object containing device type specific settings for Verifone P400 readers */\n    \"verifone_p400\"?: ({\n    splashscreen?: (string | \"\"),\n\n} | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".configuration": {
        "rendered": " configuration: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalConfiguration | DeletedTerminalConfiguration)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/connection_tokens": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The id of the location that this connection token is scoped to. If specified the connection token will only be usable with readers assigned to that location, otherwise the connection token will be usable with all readers. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://stripe.com/docs/terminal/fleet/locations#connection-tokens).\n   * @maxLength 5000\n   */\n    location?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TerminalConnectionToken",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/locations": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TerminalLocation)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/terminal/locations\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/locations": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * create_location_address_param\n   * The full address of the location.\n   */\n    address: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * The ID of a configuration that will be used to customize all readers in this location.\n   * @maxLength 1000\n   */\n    configuration_overrides?: string,\n  /**\n   * A name for the location.\n   * @maxLength 1000\n   */\n    display_name: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TerminalLocation",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/terminal/locations/{location}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".location": {
        "rendered": " location: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedTerminalLocation",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/locations/{location}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".location": {
        "rendered": " location: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalLocation | DeletedTerminalLocation)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/locations/{location}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * optional_fields_address\n   * The full address of the location.\n   */\n    address?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /**\n   * The ID of a configuration that will be used to customize all readers in this location.\n   * @maxLength 1000\n   */\n    configuration_overrides?: string,\n  /**\n   * A name for the location.\n   * @maxLength 1000\n   */\n    display_name?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".location": {
        "rendered": " location: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalLocation | DeletedTerminalLocation)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/readers": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Filters readers by device type */\n device_type?: \"bbpos_chipper2x\" | \"bbpos_wisepad3\" | \"bbpos_wisepos_e\" | \"simulated_wisepos_e\" | \"stripe_m2\" | \"verifone_P400\", \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A location ID to filter the response list to only readers at the specific location */\n location?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** A status filter to filter readers to only offline or online readers */\n status?: \"offline\" | \"online\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.device_type": {
        "rendered": "\n/** Filters readers by device type */\n device_type?: \"bbpos_chipper2x\" | \"bbpos_wisepad3\" | \"bbpos_wisepos_e\" | \"simulated_wisepos_e\" | \"stripe_m2\" | \"verifone_P400\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.location": {
        "rendered": "\n/** A location ID to filter the response list to only readers at the specific location */\n location?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** A status filter to filter readers to only offline or online readers */\n status?: \"offline\" | \"online\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** A list of readers */\n    data: (TerminalReader)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.\n   * @maxLength 5000\n   */\n    label?: string,\n  /**\n   * The location to assign the reader to.\n   * @maxLength 5000\n   */\n    location?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * A code generated by the reader used for registering to an account.\n   * @maxLength 5000\n   */\n    registration_code: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/terminal/readers/{reader}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedTerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/terminal/readers/{reader}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalReader | DeletedTerminalReader)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The new label of the reader.\n   * @maxLength 5000\n   */\n    label?: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(TerminalReader | DeletedTerminalReader)",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}/cancel_action": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}/process_payment_intent": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * PaymentIntent ID\n   * @maxLength 5000\n   */\n    payment_intent: string,\n  /**\n   * process_config\n   * Configuration overrides\n   */\n    process_config?: {\n    skip_tipping?: boolean,\n  /** tipping_config */\n    tipping?: {\n    amount_eligible?: number,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}/process_setup_intent": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Customer Consent Collected */\n    customer_consent_collected: boolean,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * SetupIntent ID\n   * @maxLength 5000\n   */\n    setup_intent: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}/refund_payment": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer in __cents__ representing how much of this charge to refund. */\n    amount?: number,\n  /**\n   * ID of the Charge to refund.\n   * @maxLength 5000\n   */\n    charge?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * ID of the PaymentIntent to refund.\n   * @maxLength 5000\n   */\n    payment_intent?: string,\n  /** Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge. */\n    refund_application_fee?: boolean,\n  /** Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge. */\n    reverse_transfer?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/terminal/readers/{reader}/set_reader_display": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * cart\n   * Cart\n   */\n    cart?: {\n    currency: string,\n    line_items: ({\n    amount: number,\n  /** @maxLength 5000 */\n    description: string,\n    quantity: number,\n\n})[],\n    tax?: number,\n    total: number,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Type */\n    type: \"cart\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/customers/{customer}/fund_cash_balance": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount to be used for this test cash balance transaction. A positive integer representing how much to fund in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to fund $1.00 or 100 to fund ¥100, a zero-decimal currency). */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * A description of the test funding. This simulates free-text references supplied by customers when making bank transfers to their cash balance. You can use this to test how Stripe's [reconciliation algorithm](https://stripe.com/docs/payments/customer-balance/reconciliation) applies to different user inputs.\n   * @maxLength 5000\n   */\n    reference?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".customer": {
        "rendered": " customer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CustomerCashBalanceTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/issuing/cards/{card}/shipping/deliver": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/issuing/cards/{card}/shipping/fail": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/issuing/cards/{card}/shipping/return": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/issuing/cards/{card}/shipping/ship": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".card": {
        "rendered": " card: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "IssuingCard",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/refunds/{refund}/expire": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".refund": {
        "rendered": " refund: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Refund",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/terminal/readers/{reader}/present_payment_method": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * card_present\n   * Simulated data for the card_present payment method.\n   */\n    card_present?: {\n  /** @maxLength 5000 */\n    number?: string,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * interac_present\n   * Simulated data for the interac_present payment method.\n   */\n    interac_present?: {\n  /** @maxLength 5000 */\n    number?: string,\n\n},\n  /** Simulated payment type. */\n    type?: \"card_present\" | \"interac_present\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".reader": {
        "rendered": " reader: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TerminalReader",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/test_helpers/test_clocks": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TestHelpersTestClock)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/test_helpers/test_clocks\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/test_clocks": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The initial frozen time for this test clock.\n   * @format unix-time\n   */\n    frozen_time: number,\n  /**\n   * The name for this test clock.\n   * @maxLength 300\n   */\n    name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TestHelpersTestClock",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/test_helpers/test_clocks/{test_clock}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".testClock": {
        "rendered": " testClock: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedTestHelpersTestClock",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/test_helpers/test_clocks/{test_clock}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".testClock": {
        "rendered": " testClock: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TestHelpersTestClock",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/test_clocks/{test_clock}/advance": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * The time to advance the test clock. Must be after the test clock's current frozen time. Cannot be more than two intervals in the future from the shortest subscription in this test clock. If there are no subscriptions in this test clock, it cannot be more than two years in the future.\n   * @format unix-time\n   */\n    frozen_time: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".testClock": {
        "rendered": " testClock: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TestHelpersTestClock",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/inbound_transfers/{id}/fail": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * failure_details_params\n   * Details about a failed InboundTransfer.\n   */\n    failure_details?: {\n    code?: \"account_closed\" | \"account_frozen\" | \"bank_account_restricted\" | \"bank_ownership_changed\" | \"debit_not_authorized\" | \"incorrect_account_holder_address\" | \"incorrect_account_holder_name\" | \"incorrect_account_holder_tax_id\" | \"insufficient_funds\" | \"invalid_account_number\" | \"invalid_currency\" | \"no_account\" | \"other\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/inbound_transfers/{id}/return": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/inbound_transfers/{id}/succeed": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_payments/{id}/fail": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_payments/{id}/post": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_payments/{id}/return": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * returned_details_params\n   * Optional hash to set the the return code.\n   */\n    returned_details?: {\n    code?: \"account_closed\" | \"account_frozen\" | \"bank_account_restricted\" | \"bank_ownership_changed\" | \"declined\" | \"incorrect_account_holder_name\" | \"invalid_account_number\" | \"invalid_currency\" | \"no_account\" | \"other\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".outboundTransfer": {
        "rendered": " outboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".outboundTransfer": {
        "rendered": " outboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * returned_details_params\n   * Details about a returned OutboundTransfer.\n   */\n    returned_details?: {\n    code?: \"account_closed\" | \"account_frozen\" | \"bank_account_restricted\" | \"bank_ownership_changed\" | \"declined\" | \"incorrect_account_holder_name\" | \"invalid_account_number\" | \"invalid_currency\" | \"no_account\" | \"other\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".outboundTransfer": {
        "rendered": " outboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/received_credits": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount (in cents) to be transferred. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The FinancialAccount to send funds to. */\n    financial_account: string,\n  /**\n   * source_params\n   * Initiating payment method details for the object.\n   */\n    initiating_payment_method_details?: {\n    type: \"us_bank_account\",\n  /** us_bank_account_source_params */\n    us_bank_account?: {\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n\n},\n  /** The rails used for the object. */\n    network: \"ach\" | \"us_domestic_wire\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryReceivedCredit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/test_helpers/treasury/received_debits": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount (in cents) to be transferred. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The FinancialAccount to pull funds from. */\n    financial_account: string,\n  /**\n   * source_params\n   * Initiating payment method details for the object.\n   */\n    initiating_payment_method_details?: {\n    type: \"us_bank_account\",\n  /** us_bank_account_source_params */\n    us_bank_account?: {\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_number?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n\n},\n  /** The rails used for the object. */\n    network: \"ach\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryReceivedDebit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/tokens": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * connect_js_account_token_specs\n   * Information for the account this token will represent.\n   */\n    account?: {\n    business_type?: \"company\" | \"government_entity\" | \"individual\" | \"non_profit\",\n  /** connect_js_account_token_company_specs */\n    company?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    directors_provided?: boolean,\n    executives_provided?: boolean,\n  /** @maxLength 100 */\n    name?: string,\n  /** @maxLength 100 */\n    name_kana?: string,\n  /** @maxLength 100 */\n    name_kanji?: string,\n    owners_provided?: boolean,\n  /** company_ownership_declaration */\n    ownership_declaration?: {\n  /** @format unix-time */\n    date?: number,\n    ip?: string,\n  /** @maxLength 5000 */\n    user_agent?: string,\n\n},\n    ownership_declaration_shown_and_signed?: boolean,\n  /** @maxLength 5000 */\n    phone?: string,\n  /** @maxLength 5000 */\n    registration_number?: string,\n    structure?: \"\" | \"free_zone_establishment\" | \"free_zone_llc\" | \"government_instrumentality\" | \"governmental_unit\" | \"incorporated_non_profit\" | \"limited_liability_partnership\" | \"llc\" | \"multi_member_llc\" | \"private_company\" | \"private_corporation\" | \"private_partnership\" | \"public_company\" | \"public_corporation\" | \"public_partnership\" | \"single_member_llc\" | \"sole_establishment\" | \"sole_proprietorship\" | \"tax_exempt_government_instrumentality\" | \"unincorporated_association\" | \"unincorporated_non_profit\",\n  /** @maxLength 5000 */\n    tax_id?: string,\n  /** @maxLength 5000 */\n    tax_id_registrar?: string,\n  /** @maxLength 5000 */\n    vat_id?: string,\n  /** verification_specs */\n    verification?: {\n  /** verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /** individual_specs */\n    individual?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n    email?: string,\n  /** @maxLength 100 */\n    first_name?: string,\n  /** @maxLength 5000 */\n    first_name_kana?: string,\n  /** @maxLength 5000 */\n    first_name_kanji?: string,\n    full_name_aliases?: ((string)[] | \"\"),\n    gender?: string,\n  /** @maxLength 5000 */\n    id_number?: string,\n  /** @maxLength 5000 */\n    id_number_secondary?: string,\n  /** @maxLength 100 */\n    last_name?: string,\n  /** @maxLength 5000 */\n    last_name_kana?: string,\n  /** @maxLength 5000 */\n    last_name_kanji?: string,\n  /** @maxLength 5000 */\n    maiden_name?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n    phone?: string,\n    political_exposure?: \"existing\" | \"none\",\n  /** address_specs */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** @maxLength 5000 */\n    \"ssn_last_4\"?: string,\n  /** person_verification_specs */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n    tos_shown_and_accepted?: boolean,\n\n},\n  /**\n   * token_create_bank_account\n   * The bank account this token will represent.\n   */\n    bank_account?: {\n  /** @maxLength 5000 */\n    account_holder_name?: string,\n  /** @maxLength 5000 */\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number: string,\n  /** @maxLength 5000 */\n    account_type?: \"checking\" | \"futsu\" | \"savings\" | \"toza\",\n  /** @maxLength 5000 */\n    country: string,\n    currency?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n    card?: ({\n  /** @maxLength 5000 */\n    address_city?: string,\n  /** @maxLength 5000 */\n    address_country?: string,\n  /** @maxLength 5000 */\n    \"address_line1\"?: string,\n  /** @maxLength 5000 */\n    \"address_line2\"?: string,\n  /** @maxLength 5000 */\n    address_state?: string,\n  /** @maxLength 5000 */\n    address_zip?: string,\n  /** @maxLength 5000 */\n    currency?: string,\n  /** @maxLength 5000 */\n    cvc?: string,\n  /** @maxLength 5000 */\n    exp_month: string,\n  /** @maxLength 5000 */\n    exp_year: string,\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    number: string,\n\n} | string),\n  /**\n   * The customer (owned by the application's account) for which to create a token. This can be used only with an [OAuth access token](https://stripe.com/docs/connect/standard-accounts) or [Stripe-Account header](https://stripe.com/docs/connect/authentication). For more details, see [Cloning Saved Payment Methods](https://stripe.com/docs/connect/cloning-saved-payment-methods).\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * cvc_params\n   * The updated CVC value this token will represent.\n   */\n    cvc_update?: {\n  /** @maxLength 5000 */\n    cvc: string,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * person_token_specs\n   * Information for the person this token will represent.\n   */\n    person?: {\n  /** address_specs */\n    address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** japan_address_kana_specs */\n    address_kana?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n  /** japan_address_kanji_specs */\n    address_kanji?: {\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n  /** @maxLength 5000 */\n    town?: string,\n\n},\n    dob?: ({\n    day: number,\n    month: number,\n    year: number,\n\n} | \"\"),\n  /** person_documents_specs */\n    documents?: {\n  /** documents_param */\n    company_authorization?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    passport?: {\n    files?: (string)[],\n\n},\n  /** documents_param */\n    visa?: {\n    files?: (string)[],\n\n},\n\n},\n    email?: string,\n  /** @maxLength 5000 */\n    first_name?: string,\n  /** @maxLength 5000 */\n    first_name_kana?: string,\n  /** @maxLength 5000 */\n    first_name_kanji?: string,\n    full_name_aliases?: ((string)[] | \"\"),\n    gender?: string,\n  /** @maxLength 5000 */\n    id_number?: string,\n  /** @maxLength 5000 */\n    id_number_secondary?: string,\n  /** @maxLength 5000 */\n    last_name?: string,\n  /** @maxLength 5000 */\n    last_name_kana?: string,\n  /** @maxLength 5000 */\n    last_name_kanji?: string,\n  /** @maxLength 5000 */\n    maiden_name?: string,\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** @maxLength 5000 */\n    nationality?: string,\n    phone?: string,\n  /** @maxLength 5000 */\n    political_exposure?: string,\n  /** address_specs */\n    registered_address?: {\n  /** @maxLength 100 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 200 */\n    \"line1\"?: string,\n  /** @maxLength 200 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n},\n  /** relationship_specs */\n    relationship?: {\n    director?: boolean,\n    executive?: boolean,\n    owner?: boolean,\n    percent_ownership?: (number | \"\"),\n    representative?: boolean,\n  /** @maxLength 5000 */\n    title?: string,\n\n},\n    \"ssn_last_4\"?: string,\n  /** person_verification_specs */\n    verification?: {\n  /** person_verification_document_specs */\n    additional_document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n  /** person_verification_document_specs */\n    document?: {\n  /** @maxLength 500 */\n    back?: string,\n  /** @maxLength 500 */\n    front?: string,\n\n},\n\n},\n\n},\n  /**\n   * pii_token_specs\n   * The PII this token will represent.\n   */\n    pii?: {\n  /** @maxLength 5000 */\n    id_number?: string,\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Token",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/tokens/{token}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".token": {
        "rendered": " token: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Token",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/topups": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A positive integer representing how much to transfer. */\n amount?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`. */\n status?: \"canceled\" | \"failed\" | \"pending\" | \"succeeded\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.amount": {
        "rendered": "\n/** A positive integer representing how much to transfer. */\n amount?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": "\n/** A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options. */\n created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`. */\n status?: \"canceled\" | \"failed\" | \"pending\" | \"succeeded\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (Topup)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/topups\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/topups": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** A positive integer representing how much to transfer. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /**\n   * The ID of a source to transfer funds from. For most users, this should be left unspecified which will use the bank account that was set up in the dashboard for the specified currency. In test mode, this can be a test bank token (see [Testing Top-ups](https://stripe.com/docs/connect/testing#testing-top-ups)).\n   * @maxLength 5000\n   */\n    source?: string,\n  /**\n   * Extra information about a top-up for the source's bank statement. Limited to 15 ASCII characters.\n   * @maxLength 15\n   */\n    statement_descriptor?: string,\n  /** A string that identifies this top-up as part of a group. */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Topup",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/topups/{topup}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".topup": {
        "rendered": " topup: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Topup",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/topups/{topup}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".topup": {
        "rendered": " topup: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Topup",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/topups/{topup}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".topup": {
        "rendered": " topup: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Topup",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/transfers": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** Only return transfers for the destination specified by this account ID. */\n destination?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return transfers with the specified transfer group. */\n transfer_group?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.destination": {
        "rendered": "\n/** Only return transfers for the destination specified by this account ID. */\n destination?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.transfer_group": {
        "rendered": "\n/** Only return transfers with the specified transfer group. */\n transfer_group?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (Transfer)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/transfers\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/transfers": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** A positive integer in cents (or local equivalent) representing how much to transfer. */\n    amount?: number,\n  /** 3-letter [ISO code for currency](https://stripe.com/docs/payouts). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** The ID of a connected Stripe account. <a href=\"/docs/connect/charges-transfers\">See the Connect documentation</a> for details. */\n    destination: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /** You can use this parameter to transfer funds from a charge before they are added to your available balance. A pending balance will transfer immediately but the funds will not become available until the original charge becomes available. [See the Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-availability) for details. */\n    source_transaction?: string,\n  /**\n   * The source balance to use for this transfer. One of `bank_account`, `card`, or `fpx`. For most users, this will default to `card`.\n   * @maxLength 5000\n   */\n    source_type?: \"bank_account\" | \"card\" | \"fpx\",\n  /** A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details. */\n    transfer_group?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Transfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/transfers/{id}/reversals": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TransferReversal)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/transfers/{id}/reversals": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** A positive integer in cents (or local equivalent) representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount. */\n    amount?: number,\n  /**\n   * An arbitrary string which you can attach to a reversal object. It is displayed alongside the reversal in the Dashboard. This will be unset if you POST an empty value.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** Boolean indicating whether the application fee should be refunded when reversing this transfer. If a full transfer reversal is given, the full application fee will be refunded. Otherwise, the application fee will be refunded with an amount proportional to the amount of the transfer reversed. */\n    refund_application_fee?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TransferReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/transfers/{transfer}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".transfer": {
        "rendered": " transfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Transfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/transfers/{transfer}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".transfer": {
        "rendered": " transfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Transfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/transfers/{transfer}/reversals/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".transfer": {
        "rendered": " transfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TransferReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/transfers/{transfer}/reversals/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".transfer": {
        "rendered": " transfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TransferReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/credit_reversals": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return CreditReversals for the ReceivedCredit ID. */\n received_credit?: string, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return CreditReversals for a given status. */\n status?: \"canceled\" | \"posted\" | \"processing\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.received_credit": {
        "rendered": "\n/** Only return CreditReversals for the ReceivedCredit ID. */\n received_credit?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return CreditReversals for a given status. */\n status?: \"canceled\" | \"posted\" | \"processing\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryCreditReversal)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/credit_reversals": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The ReceivedCredit to reverse.\n   * @maxLength 5000\n   */\n    received_credit: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryCreditReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/credit_reversals/{credit_reversal}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".creditReversal": {
        "rendered": " creditReversal: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryCreditReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/debit_reversals": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return DebitReversals for the ReceivedDebit ID. */\n received_debit?: string, \n/** Only return DebitReversals for a given resolution. */\n resolution?: \"lost\" | \"won\", \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return DebitReversals for a given status. */\n status?: \"canceled\" | \"completed\" | \"processing\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.received_debit": {
        "rendered": "\n/** Only return DebitReversals for the ReceivedDebit ID. */\n received_debit?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.resolution": {
        "rendered": "\n/** Only return DebitReversals for a given resolution. */\n resolution?: \"lost\" | \"won\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return DebitReversals for a given status. */\n status?: \"canceled\" | \"completed\" | \"processing\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryDebitReversal)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/debit_reversals": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The ReceivedDebit to reverse.\n   * @maxLength 5000\n   */\n    received_debit: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryDebitReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/debit_reversals/{debit_reversal}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".debitReversal": {
        "rendered": " debitReversal: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryDebitReversal",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/financial_accounts": {
    "query": {
      ".query": {
        "rendered": " query: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** An object ID cursor for use in pagination. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit ranging from 1 to 100 (defaults to 10). */\n limit?: number, \n/** An object ID cursor for use in pagination. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** An object ID cursor for use in pagination. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit ranging from 1 to 100 (defaults to 10). */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** An object ID cursor for use in pagination. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (TreasuryFinancialAccount)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/treasury/financial_accounts\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/financial_accounts": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * feature_access\n   * Encodes whether a FinancialAccount has access to a particular feature. Stripe or the platform can control features via the requested field.\n   */\n    features?: {\n  /** access */\n    card_issuing?: {\n    requested: boolean,\n\n},\n  /** access */\n    deposit_insurance?: {\n    requested: boolean,\n\n},\n  /** financial_addresses */\n    financial_addresses?: {\n  /** access */\n    aba?: {\n    requested: boolean,\n\n},\n\n},\n  /** inbound_transfers */\n    inbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n\n},\n  /** access */\n    intra_stripe_flows?: {\n    requested: boolean,\n\n},\n  /** outbound_payments */\n    outbound_payments?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n  /** outbound_transfers */\n    outbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * platform_restrictions\n   * The set of functionalities that the platform can restrict on the FinancialAccount.\n   */\n    platform_restrictions?: {\n    inbound_flows?: \"restricted\" | \"unrestricted\",\n    outbound_flows?: \"restricted\" | \"unrestricted\",\n\n},\n  /** The currencies the FinancialAccount can hold a balance in. */\n    supported_currencies: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryFinancialAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/financial_accounts/{financial_account}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".financialAccount": {
        "rendered": " financialAccount: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryFinancialAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/financial_accounts/{financial_account}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * feature_access\n   * Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated `status_details`. Stripe or the platform may control features via the requested field.\n   */\n    features?: {\n  /** access */\n    card_issuing?: {\n    requested: boolean,\n\n},\n  /** access */\n    deposit_insurance?: {\n    requested: boolean,\n\n},\n  /** financial_addresses */\n    financial_addresses?: {\n  /** access */\n    aba?: {\n    requested: boolean,\n\n},\n\n},\n  /** inbound_transfers */\n    inbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n\n},\n  /** access */\n    intra_stripe_flows?: {\n    requested: boolean,\n\n},\n  /** outbound_payments */\n    outbound_payments?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n  /** outbound_transfers */\n    outbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n\n},\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * platform_restrictions\n   * The set of functionalities that the platform can restrict on the FinancialAccount.\n   */\n    platform_restrictions?: {\n    inbound_flows?: \"restricted\" | \"unrestricted\",\n    outbound_flows?: \"restricted\" | \"unrestricted\",\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".financialAccount": {
        "rendered": " financialAccount: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryFinancialAccount",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/financial_accounts/{financial_account}/features": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".financialAccount": {
        "rendered": " financialAccount: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryFinancialAccountFeatures",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/financial_accounts/{financial_account}/features": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * access\n   * Encodes the FinancialAccount's ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.\n   */\n    card_issuing?: {\n    requested: boolean,\n\n},\n  /**\n   * access\n   * Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.\n   */\n    deposit_insurance?: {\n    requested: boolean,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /**\n   * financial_addresses\n   * Contains Features that add FinancialAddresses to the FinancialAccount.\n   */\n    financial_addresses?: {\n  /** access */\n    aba?: {\n    requested: boolean,\n\n},\n\n},\n  /**\n   * inbound_transfers\n   * Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.\n   */\n    inbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n\n},\n  /**\n   * access\n   * Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).\n   */\n    intra_stripe_flows?: {\n    requested: boolean,\n\n},\n  /**\n   * outbound_payments\n   * Includes Features related to initiating money movement out of the FinancialAccount to someone else's bucket of money.\n   */\n    outbound_payments?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n  /**\n   * outbound_transfers\n   * Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.\n   */\n    outbound_transfers?: {\n  /** access_with_ach_details */\n    ach?: {\n    requested: boolean,\n\n},\n  /** access */\n    us_domestic_wire?: {\n    requested: boolean,\n\n},\n\n},\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".financialAccount": {
        "rendered": " financialAccount: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryFinancialAccountFeatures",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/inbound_transfers": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return InboundTransfers that have the given status: `processing`, `succeeded`, `failed` or `canceled`. */\n status?: \"canceled\" | \"failed\" | \"processing\" | \"succeeded\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return InboundTransfers that have the given status: `processing`, `succeeded`, `failed` or `canceled`. */\n status?: \"canceled\" | \"failed\" | \"processing\" | \"succeeded\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryInboundTransfer)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/inbound_transfers": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount (in cents) to be transferred. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The FinancialAccount to send funds to. */\n    financial_account: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The origin payment method to be debited for the InboundTransfer.\n   * @maxLength 5000\n   */\n    origin_payment_method: string,\n  /**\n   * The complete description that appears on your customers' statements. Maximum 10 characters.\n   * @maxLength 10\n   */\n    statement_descriptor?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/inbound_transfers/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/inbound_transfers/{inbound_transfer}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".inboundTransfer": {
        "rendered": " inboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryInboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/outbound_payments": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** Only return OutboundPayments sent to this customer. */\n customer?: string, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`. */\n status?: \"canceled\" | \"failed\" | \"posted\" | \"processing\" | \"returned\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.customer": {
        "rendered": "\n/** Only return OutboundPayments sent to this customer. */\n customer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`. */\n status?: \"canceled\" | \"failed\" | \"posted\" | \"processing\" | \"returned\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryOutboundPayment)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/treasury/outbound_payments\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/outbound_payments": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount (in cents) to be transferred. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in.\n   * @maxLength 5000\n   */\n    customer?: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`.\n   * @maxLength 5000\n   */\n    destination_payment_method?: string,\n  /**\n   * payment_method_data\n   * Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.\n   */\n    destination_payment_method_data?: {\n  /** billing_details_inner_params */\n    billing_details?: {\n    address?: ({\n  /** @maxLength 5000 */\n    city?: string,\n  /** @maxLength 5000 */\n    country?: string,\n  /** @maxLength 5000 */\n    \"line1\"?: string,\n  /** @maxLength 5000 */\n    \"line2\"?: string,\n  /** @maxLength 5000 */\n    postal_code?: string,\n  /** @maxLength 5000 */\n    state?: string,\n\n} | \"\"),\n    email?: (string | \"\"),\n  /** @maxLength 5000 */\n    name?: string,\n  /** @maxLength 5000 */\n    phone?: string,\n\n},\n    financial_account?: string,\n    metadata?: hasuraSdk.JSONValue,\n    type: \"financial_account\" | \"us_bank_account\",\n  /** payment_method_param */\n    us_bank_account?: {\n    account_holder_type?: \"company\" | \"individual\",\n  /** @maxLength 5000 */\n    account_number?: string,\n    account_type?: \"checking\" | \"savings\",\n  /** @maxLength 5000 */\n    financial_connections_account?: string,\n  /** @maxLength 5000 */\n    routing_number?: string,\n\n},\n\n},\n  /**\n   * payment_method_options\n   * Payment method-specific configuration for this OutboundPayment.\n   */\n    destination_payment_method_options?: {\n    us_bank_account?: ({\n    network?: \"ach\" | \"us_domestic_wire\",\n\n} | \"\"),\n\n},\n  /**\n   * end_user_details_params\n   * End user details.\n   */\n    end_user_details?: {\n    ip_address?: string,\n    present: boolean,\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The FinancialAccount to pull funds from. */\n    financial_account: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `wire` payments, or 500 characters for `stripe` network transfers. The default value is `payment`.\n   * @maxLength 5000\n   */\n    statement_descriptor?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/outbound_payments/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/outbound_payments/{id}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundPayment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/outbound_transfers": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`. */\n status?: \"canceled\" | \"failed\" | \"posted\" | \"processing\" | \"returned\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`. */\n status?: \"canceled\" | \"failed\" | \"posted\" | \"processing\" | \"returned\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryOutboundTransfer)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/outbound_transfers": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Amount (in cents) to be transferred. */\n    amount: number,\n  /** Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). */\n    currency: string,\n  /**\n   * An arbitrary string attached to the object. Often useful for displaying to users.\n   * @maxLength 5000\n   */\n    description?: string,\n  /**\n   * The PaymentMethod to use as the payment instrument for the OutboundTransfer.\n   * @maxLength 5000\n   */\n    destination_payment_method?: string,\n  /**\n   * payment_method_options\n   * Hash describing payment method configuration details.\n   */\n    destination_payment_method_options?: {\n    us_bank_account?: ({\n    network?: \"ach\" | \"us_domestic_wire\",\n\n} | \"\"),\n\n},\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** The FinancialAccount to pull funds from. */\n    financial_account: string,\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: hasuraSdk.JSONValue,\n  /**\n   * Statement descriptor to be shown on the receiving end of an OutboundTransfer. Maximum 10 characters for `ach` transfers or 140 characters for `wire` transfers. The default value is `transfer`.\n   * @maxLength 5000\n   */\n    statement_descriptor?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/outbound_transfers/{outbound_transfer}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".outboundTransfer": {
        "rendered": " outboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/treasury/outbound_transfers/{outbound_transfer}/cancel": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".outboundTransfer": {
        "rendered": " outboundTransfer: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryOutboundTransfer",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/received_credits": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** The FinancialAccount that received the funds. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** Only return ReceivedCredits described by the flow. */\n linked_flows: {  source_flow_type?: \"credit_reversal\" | \"other\" | \"outbound_payment\" | \"payout\", }, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return ReceivedCredits that have the given status: `succeeded` or `failed`. */\n status?: \"failed\" | \"succeeded\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** The FinancialAccount that received the funds. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.linked_flows": {
        "rendered": "\n/** Only return ReceivedCredits described by the flow. */\n linked_flows: {  source_flow_type?: \"credit_reversal\" | \"other\" | \"outbound_payment\" | \"payout\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.linked_flows.source_flow_type": {
        "rendered": " source_flow_type?: \"credit_reversal\" | \"other\" | \"outbound_payment\" | \"payout\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return ReceivedCredits that have the given status: `succeeded` or `failed`. */\n status?: \"failed\" | \"succeeded\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryReceivedCredit)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/received_credits/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryReceivedCredit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/received_debits": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** The FinancialAccount that funds were pulled from. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return ReceivedDebits that have the given status: `succeeded` or `failed`. */\n status?: \"failed\" | \"succeeded\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** The FinancialAccount that funds were pulled from. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return ReceivedDebits that have the given status: `succeeded` or `failed`. */\n status?: \"failed\" | \"succeeded\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryReceivedDebit)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/received_debits/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryReceivedDebit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/transaction_entries": {
    "query": {
      ".query": {
        "rendered": " query?: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,  effective_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The results are in reverse chronological order by `created` or `effective_at`. The default is `created`. */\n order_by?: \"created\" | \"effective_at\", \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return TransactionEntries associated with this Transaction. */\n transaction?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.effective_at": {
        "rendered": " effective_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** The results are in reverse chronological order by `created` or `effective_at`. The default is `created`. */\n order_by?: \"created\" | \"effective_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.transaction": {
        "rendered": "\n/** Only return TransactionEntries associated with this Transaction. */\n transaction?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryTransactionEntry)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/treasury/transaction_entries\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/transaction_entries/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryTransactionEntry",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/transactions": {
    "query": {
      ".query": {
        "rendered": " query?: {  created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** Returns objects associated with this FinancialAccount. */\n financial_account: string, \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** The results are in reverse chronological order by `created` or `posted_at`. The default is `created`. */\n order_by?: \"created\" | \"posted_at\", \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, \n/** Only return Transactions that have the given status: `open`, `posted`, or `void`. */\n status?: \"open\" | \"posted\" | \"void\", \n/** A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified. */\n status_transitions?: {  posted_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, }, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.created": {
        "rendered": " created?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.financial_account": {
        "rendered": "\n/** Returns objects associated with this FinancialAccount. */\n financial_account: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** The results are in reverse chronological order by `created` or `posted_at`. The default is `created`. */\n order_by?: \"created\" | \"posted_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.status": {
        "rendered": "\n/** Only return Transactions that have the given status: `open`, `posted`, or `void`. */\n status?: \"open\" | \"posted\" | \"void\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.status_transitions": {
        "rendered": "\n/** A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified. */\n status_transitions?: {  posted_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.status_transitions.posted_at": {
        "rendered": " posted_at?: | {  gt?: number,  gte?: number,  lt?: number,  lte?: number, } | number,",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n  /** Details about each object. */\n    data: (TreasuryTransaction)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/treasury/transactions/{id}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TreasuryTransaction",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/webhook_endpoints": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string, \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], \n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number, \n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ending_before": {
        "rendered": "\n/** A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list. */\n ending_before?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.limit": {
        "rendered": "\n/** A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10. */\n limit?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.starting_after": {
        "rendered": "\n/** A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list. */\n starting_after?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{\n    data: (WebhookEndpoint)[],\n  /** True if this list has another page of items after this one that can be fetched. */\n    has_more: boolean,\n  /** String representing the object's type. Objects of the same type share the same value. Always has the value `list`. */\n    object: \"list\",\n  /**\n   * The URL where this list can be accessed.\n   * @maxLength 5000\n   * @pattern ^/v1/webhook_endpoints\n   */\n    url: string,\n\n}",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/webhook_endpoints": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * Events sent to this endpoint will be generated with this Stripe Version instead of your account's default Stripe Version.\n   * @maxLength 5000\n   */\n    api_version?: \"2011-01-01\" | \"2011-06-21\" | \"2011-06-28\" | \"2011-08-01\" | \"2011-09-15\" | \"2011-11-17\" | \"2012-02-23\" | \"2012-03-25\" | \"2012-06-18\" | \"2012-06-28\" | \"2012-07-09\" | \"2012-09-24\" | \"2012-10-26\" | \"2012-11-07\" | \"2013-02-11\" | \"2013-02-13\" | \"2013-07-05\" | \"2013-08-12\" | \"2013-08-13\" | \"2013-10-29\" | \"2013-12-03\" | \"2014-01-31\" | \"2014-03-13\" | \"2014-03-28\" | \"2014-05-19\" | \"2014-06-13\" | \"2014-06-17\" | \"2014-07-22\" | \"2014-07-26\" | \"2014-08-04\" | \"2014-08-20\" | \"2014-09-08\" | \"2014-10-07\" | \"2014-11-05\" | \"2014-11-20\" | \"2014-12-08\" | \"2014-12-17\" | \"2014-12-22\" | \"2015-01-11\" | \"2015-01-26\" | \"2015-02-10\" | \"2015-02-16\" | \"2015-02-18\" | \"2015-03-24\" | \"2015-04-07\" | \"2015-06-15\" | \"2015-07-07\" | \"2015-07-13\" | \"2015-07-28\" | \"2015-08-07\" | \"2015-08-19\" | \"2015-09-03\" | \"2015-09-08\" | \"2015-09-23\" | \"2015-10-01\" | \"2015-10-12\" | \"2015-10-16\" | \"2016-02-03\" | \"2016-02-19\" | \"2016-02-22\" | \"2016-02-23\" | \"2016-02-29\" | \"2016-03-07\" | \"2016-06-15\" | \"2016-07-06\" | \"2016-10-19\" | \"2017-01-27\" | \"2017-02-14\" | \"2017-04-06\" | \"2017-05-25\" | \"2017-06-05\" | \"2017-08-15\" | \"2017-12-14\" | \"2018-01-23\" | \"2018-02-05\" | \"2018-02-06\" | \"2018-02-28\" | \"2018-05-21\" | \"2018-07-27\" | \"2018-08-23\" | \"2018-09-06\" | \"2018-09-24\" | \"2018-10-31\" | \"2018-11-08\" | \"2019-02-11\" | \"2019-02-19\" | \"2019-03-14\" | \"2019-05-16\" | \"2019-08-14\" | \"2019-09-09\" | \"2019-10-08\" | \"2019-10-17\" | \"2019-11-05\" | \"2019-12-03\" | \"2020-03-02\" | \"2020-08-27\" | \"2022-08-01\" | \"2022-11-15\",\n  /** Whether this endpoint should receive events from connected accounts (`true`), or from your account (`false`). Defaults to `false`. */\n    connect?: boolean,\n  /**\n   * An optional description of what the webhook is used for.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection. */\n    enabled_events: (\"*\" | \"account.application.authorized\" | \"account.application.deauthorized\" | \"account.external_account.created\" | \"account.external_account.deleted\" | \"account.external_account.updated\" | \"account.updated\" | \"application_fee.created\" | \"application_fee.refund.updated\" | \"application_fee.refunded\" | \"balance.available\" | \"billing_portal.configuration.created\" | \"billing_portal.configuration.updated\" | \"billing_portal.session.created\" | \"capability.updated\" | \"cash_balance.funds_available\" | \"charge.captured\" | \"charge.dispute.closed\" | \"charge.dispute.created\" | \"charge.dispute.funds_reinstated\" | \"charge.dispute.funds_withdrawn\" | \"charge.dispute.updated\" | \"charge.expired\" | \"charge.failed\" | \"charge.pending\" | \"charge.refund.updated\" | \"charge.refunded\" | \"charge.succeeded\" | \"charge.updated\" | \"checkout.session.async_payment_failed\" | \"checkout.session.async_payment_succeeded\" | \"checkout.session.completed\" | \"checkout.session.expired\" | \"coupon.created\" | \"coupon.deleted\" | \"coupon.updated\" | \"credit_note.created\" | \"credit_note.updated\" | \"credit_note.voided\" | \"customer.created\" | \"customer.deleted\" | \"customer.discount.created\" | \"customer.discount.deleted\" | \"customer.discount.updated\" | \"customer.source.created\" | \"customer.source.deleted\" | \"customer.source.expiring\" | \"customer.source.updated\" | \"customer.subscription.created\" | \"customer.subscription.deleted\" | \"customer.subscription.paused\" | \"customer.subscription.pending_update_applied\" | \"customer.subscription.pending_update_expired\" | \"customer.subscription.resumed\" | \"customer.subscription.trial_will_end\" | \"customer.subscription.updated\" | \"customer.tax_id.created\" | \"customer.tax_id.deleted\" | \"customer.tax_id.updated\" | \"customer.updated\" | \"customer_cash_balance_transaction.created\" | \"file.created\" | \"financial_connections.account.created\" | \"financial_connections.account.deactivated\" | \"financial_connections.account.disconnected\" | \"financial_connections.account.reactivated\" | \"financial_connections.account.refreshed_balance\" | \"identity.verification_session.canceled\" | \"identity.verification_session.created\" | \"identity.verification_session.processing\" | \"identity.verification_session.redacted\" | \"identity.verification_session.requires_input\" | \"identity.verification_session.verified\" | \"invoice.created\" | \"invoice.deleted\" | \"invoice.finalization_failed\" | \"invoice.finalized\" | \"invoice.marked_uncollectible\" | \"invoice.paid\" | \"invoice.payment_action_required\" | \"invoice.payment_failed\" | \"invoice.payment_succeeded\" | \"invoice.sent\" | \"invoice.upcoming\" | \"invoice.updated\" | \"invoice.voided\" | \"invoiceitem.created\" | \"invoiceitem.deleted\" | \"invoiceitem.updated\" | \"issuing_authorization.created\" | \"issuing_authorization.request\" | \"issuing_authorization.updated\" | \"issuing_card.created\" | \"issuing_card.updated\" | \"issuing_cardholder.created\" | \"issuing_cardholder.updated\" | \"issuing_dispute.closed\" | \"issuing_dispute.created\" | \"issuing_dispute.funds_reinstated\" | \"issuing_dispute.submitted\" | \"issuing_dispute.updated\" | \"issuing_transaction.created\" | \"issuing_transaction.updated\" | \"mandate.updated\" | \"order.created\" | \"payment_intent.amount_capturable_updated\" | \"payment_intent.canceled\" | \"payment_intent.created\" | \"payment_intent.partially_funded\" | \"payment_intent.payment_failed\" | \"payment_intent.processing\" | \"payment_intent.requires_action\" | \"payment_intent.succeeded\" | \"payment_link.created\" | \"payment_link.updated\" | \"payment_method.attached\" | \"payment_method.automatically_updated\" | \"payment_method.detached\" | \"payment_method.updated\" | \"payout.canceled\" | \"payout.created\" | \"payout.failed\" | \"payout.paid\" | \"payout.updated\" | \"person.created\" | \"person.deleted\" | \"person.updated\" | \"plan.created\" | \"plan.deleted\" | \"plan.updated\" | \"price.created\" | \"price.deleted\" | \"price.updated\" | \"product.created\" | \"product.deleted\" | \"product.updated\" | \"promotion_code.created\" | \"promotion_code.updated\" | \"quote.accepted\" | \"quote.canceled\" | \"quote.created\" | \"quote.finalized\" | \"radar.early_fraud_warning.created\" | \"radar.early_fraud_warning.updated\" | \"recipient.created\" | \"recipient.deleted\" | \"recipient.updated\" | \"refund.created\" | \"refund.updated\" | \"reporting.report_run.failed\" | \"reporting.report_run.succeeded\" | \"reporting.report_type.updated\" | \"review.closed\" | \"review.opened\" | \"setup_intent.canceled\" | \"setup_intent.created\" | \"setup_intent.requires_action\" | \"setup_intent.setup_failed\" | \"setup_intent.succeeded\" | \"sigma.scheduled_query_run.created\" | \"sku.created\" | \"sku.deleted\" | \"sku.updated\" | \"source.canceled\" | \"source.chargeable\" | \"source.failed\" | \"source.mandate_notification\" | \"source.refund_attributes_required\" | \"source.transaction.created\" | \"source.transaction.updated\" | \"subscription_schedule.aborted\" | \"subscription_schedule.canceled\" | \"subscription_schedule.completed\" | \"subscription_schedule.created\" | \"subscription_schedule.expiring\" | \"subscription_schedule.released\" | \"subscription_schedule.updated\" | \"tax_rate.created\" | \"tax_rate.updated\" | \"terminal.reader.action_failed\" | \"terminal.reader.action_succeeded\" | \"test_helpers.test_clock.advancing\" | \"test_helpers.test_clock.created\" | \"test_helpers.test_clock.deleted\" | \"test_helpers.test_clock.internal_failure\" | \"test_helpers.test_clock.ready\" | \"topup.canceled\" | \"topup.created\" | \"topup.failed\" | \"topup.reversed\" | \"topup.succeeded\" | \"transfer.created\" | \"transfer.reversed\" | \"transfer.updated\" | \"treasury.credit_reversal.created\" | \"treasury.credit_reversal.posted\" | \"treasury.debit_reversal.completed\" | \"treasury.debit_reversal.created\" | \"treasury.debit_reversal.initial_credit_granted\" | \"treasury.financial_account.closed\" | \"treasury.financial_account.created\" | \"treasury.financial_account.features_status_updated\" | \"treasury.inbound_transfer.canceled\" | \"treasury.inbound_transfer.created\" | \"treasury.inbound_transfer.failed\" | \"treasury.inbound_transfer.succeeded\" | \"treasury.outbound_payment.canceled\" | \"treasury.outbound_payment.created\" | \"treasury.outbound_payment.expected_arrival_date_updated\" | \"treasury.outbound_payment.failed\" | \"treasury.outbound_payment.posted\" | \"treasury.outbound_payment.returned\" | \"treasury.outbound_transfer.canceled\" | \"treasury.outbound_transfer.created\" | \"treasury.outbound_transfer.expected_arrival_date_updated\" | \"treasury.outbound_transfer.failed\" | \"treasury.outbound_transfer.posted\" | \"treasury.outbound_transfer.returned\" | \"treasury.received_credit.created\" | \"treasury.received_credit.failed\" | \"treasury.received_credit.succeeded\" | \"treasury.received_debit.created\")[],\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** The URL of the webhook endpoint. */\n    url: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "WebhookEndpoint",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1/webhook_endpoints/{webhook_endpoint}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".webhookEndpoint": {
        "rendered": " webhookEndpoint: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeletedWebhookEndpoint",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1/webhook_endpoints/{webhook_endpoint}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand": {
        "rendered": "\n/** Specifies which fields in the response should be expanded. */\n expand?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.expand.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: CardMandatePaymentMethodDetails,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".webhookEndpoint": {
        "rendered": " webhookEndpoint: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "WebhookEndpoint",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1/webhook_endpoints/{webhook_endpoint}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data?: {\n  /**\n   * An optional description of what the webhook is used for.\n   * @maxLength 5000\n   */\n    description?: string,\n  /** Disable the webhook endpoint if set to true. */\n    disabled?: boolean,\n  /** The list of events to enable for this endpoint. You may specify `['*']` to enable all events, except those that require explicit selection. */\n    enabled_events?: (\"*\" | \"account.application.authorized\" | \"account.application.deauthorized\" | \"account.external_account.created\" | \"account.external_account.deleted\" | \"account.external_account.updated\" | \"account.updated\" | \"application_fee.created\" | \"application_fee.refund.updated\" | \"application_fee.refunded\" | \"balance.available\" | \"billing_portal.configuration.created\" | \"billing_portal.configuration.updated\" | \"billing_portal.session.created\" | \"capability.updated\" | \"cash_balance.funds_available\" | \"charge.captured\" | \"charge.dispute.closed\" | \"charge.dispute.created\" | \"charge.dispute.funds_reinstated\" | \"charge.dispute.funds_withdrawn\" | \"charge.dispute.updated\" | \"charge.expired\" | \"charge.failed\" | \"charge.pending\" | \"charge.refund.updated\" | \"charge.refunded\" | \"charge.succeeded\" | \"charge.updated\" | \"checkout.session.async_payment_failed\" | \"checkout.session.async_payment_succeeded\" | \"checkout.session.completed\" | \"checkout.session.expired\" | \"coupon.created\" | \"coupon.deleted\" | \"coupon.updated\" | \"credit_note.created\" | \"credit_note.updated\" | \"credit_note.voided\" | \"customer.created\" | \"customer.deleted\" | \"customer.discount.created\" | \"customer.discount.deleted\" | \"customer.discount.updated\" | \"customer.source.created\" | \"customer.source.deleted\" | \"customer.source.expiring\" | \"customer.source.updated\" | \"customer.subscription.created\" | \"customer.subscription.deleted\" | \"customer.subscription.paused\" | \"customer.subscription.pending_update_applied\" | \"customer.subscription.pending_update_expired\" | \"customer.subscription.resumed\" | \"customer.subscription.trial_will_end\" | \"customer.subscription.updated\" | \"customer.tax_id.created\" | \"customer.tax_id.deleted\" | \"customer.tax_id.updated\" | \"customer.updated\" | \"customer_cash_balance_transaction.created\" | \"file.created\" | \"financial_connections.account.created\" | \"financial_connections.account.deactivated\" | \"financial_connections.account.disconnected\" | \"financial_connections.account.reactivated\" | \"financial_connections.account.refreshed_balance\" | \"identity.verification_session.canceled\" | \"identity.verification_session.created\" | \"identity.verification_session.processing\" | \"identity.verification_session.redacted\" | \"identity.verification_session.requires_input\" | \"identity.verification_session.verified\" | \"invoice.created\" | \"invoice.deleted\" | \"invoice.finalization_failed\" | \"invoice.finalized\" | \"invoice.marked_uncollectible\" | \"invoice.paid\" | \"invoice.payment_action_required\" | \"invoice.payment_failed\" | \"invoice.payment_succeeded\" | \"invoice.sent\" | \"invoice.upcoming\" | \"invoice.updated\" | \"invoice.voided\" | \"invoiceitem.created\" | \"invoiceitem.deleted\" | \"invoiceitem.updated\" | \"issuing_authorization.created\" | \"issuing_authorization.request\" | \"issuing_authorization.updated\" | \"issuing_card.created\" | \"issuing_card.updated\" | \"issuing_cardholder.created\" | \"issuing_cardholder.updated\" | \"issuing_dispute.closed\" | \"issuing_dispute.created\" | \"issuing_dispute.funds_reinstated\" | \"issuing_dispute.submitted\" | \"issuing_dispute.updated\" | \"issuing_transaction.created\" | \"issuing_transaction.updated\" | \"mandate.updated\" | \"order.created\" | \"payment_intent.amount_capturable_updated\" | \"payment_intent.canceled\" | \"payment_intent.created\" | \"payment_intent.partially_funded\" | \"payment_intent.payment_failed\" | \"payment_intent.processing\" | \"payment_intent.requires_action\" | \"payment_intent.succeeded\" | \"payment_link.created\" | \"payment_link.updated\" | \"payment_method.attached\" | \"payment_method.automatically_updated\" | \"payment_method.detached\" | \"payment_method.updated\" | \"payout.canceled\" | \"payout.created\" | \"payout.failed\" | \"payout.paid\" | \"payout.updated\" | \"person.created\" | \"person.deleted\" | \"person.updated\" | \"plan.created\" | \"plan.deleted\" | \"plan.updated\" | \"price.created\" | \"price.deleted\" | \"price.updated\" | \"product.created\" | \"product.deleted\" | \"product.updated\" | \"promotion_code.created\" | \"promotion_code.updated\" | \"quote.accepted\" | \"quote.canceled\" | \"quote.created\" | \"quote.finalized\" | \"radar.early_fraud_warning.created\" | \"radar.early_fraud_warning.updated\" | \"recipient.created\" | \"recipient.deleted\" | \"recipient.updated\" | \"refund.created\" | \"refund.updated\" | \"reporting.report_run.failed\" | \"reporting.report_run.succeeded\" | \"reporting.report_type.updated\" | \"review.closed\" | \"review.opened\" | \"setup_intent.canceled\" | \"setup_intent.created\" | \"setup_intent.requires_action\" | \"setup_intent.setup_failed\" | \"setup_intent.succeeded\" | \"sigma.scheduled_query_run.created\" | \"sku.created\" | \"sku.deleted\" | \"sku.updated\" | \"source.canceled\" | \"source.chargeable\" | \"source.failed\" | \"source.mandate_notification\" | \"source.refund_attributes_required\" | \"source.transaction.created\" | \"source.transaction.updated\" | \"subscription_schedule.aborted\" | \"subscription_schedule.canceled\" | \"subscription_schedule.completed\" | \"subscription_schedule.created\" | \"subscription_schedule.expiring\" | \"subscription_schedule.released\" | \"subscription_schedule.updated\" | \"tax_rate.created\" | \"tax_rate.updated\" | \"terminal.reader.action_failed\" | \"terminal.reader.action_succeeded\" | \"test_helpers.test_clock.advancing\" | \"test_helpers.test_clock.created\" | \"test_helpers.test_clock.deleted\" | \"test_helpers.test_clock.internal_failure\" | \"test_helpers.test_clock.ready\" | \"topup.canceled\" | \"topup.created\" | \"topup.failed\" | \"topup.reversed\" | \"topup.succeeded\" | \"transfer.created\" | \"transfer.reversed\" | \"transfer.updated\" | \"treasury.credit_reversal.created\" | \"treasury.credit_reversal.posted\" | \"treasury.debit_reversal.completed\" | \"treasury.debit_reversal.created\" | \"treasury.debit_reversal.initial_credit_granted\" | \"treasury.financial_account.closed\" | \"treasury.financial_account.created\" | \"treasury.financial_account.features_status_updated\" | \"treasury.inbound_transfer.canceled\" | \"treasury.inbound_transfer.created\" | \"treasury.inbound_transfer.failed\" | \"treasury.inbound_transfer.succeeded\" | \"treasury.outbound_payment.canceled\" | \"treasury.outbound_payment.created\" | \"treasury.outbound_payment.expected_arrival_date_updated\" | \"treasury.outbound_payment.failed\" | \"treasury.outbound_payment.posted\" | \"treasury.outbound_payment.returned\" | \"treasury.outbound_transfer.canceled\" | \"treasury.outbound_transfer.created\" | \"treasury.outbound_transfer.expected_arrival_date_updated\" | \"treasury.outbound_transfer.failed\" | \"treasury.outbound_transfer.posted\" | \"treasury.outbound_transfer.returned\" | \"treasury.received_credit.created\" | \"treasury.received_credit.failed\" | \"treasury.received_credit.succeeded\" | \"treasury.received_debit.created\")[],\n  /** Specifies which fields in the response should be expanded. */\n    expand?: (string)[],\n  /** Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`. */\n    metadata?: (hasuraSdk.JSONValue | \"\"),\n  /** The URL of the webhook endpoint. */\n    url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".webhookEndpoint": {
        "rendered": " webhookEndpoint: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "WebhookEndpoint",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  }
}
