{
  "get__/v1beta1/{groupName}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".groupName": {
        "rendered": "\n/** Required. The group resource name. Written as `projects/{projectID}/groups/{group_name}`. Call groupStats.list to return a list of groups belonging to this project. Example: `projects/my-project-123/groups/my-group` */\n groupName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ErrorGroup",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v1beta1/{name}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: ErrorGroup,",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".name": {
        "rendered": "\n/** The group resource name. Example: projects/my-project-123/groups/CNSgkpnppqKCUw */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ErrorGroup",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v1beta1/{projectName}/events": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".projectName": {
        "rendered": "\n/** Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}`, where `{projectID}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: `projects/my-project-123`. */\n projectName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "DeleteEventsResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1beta1/{projectName}/events": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** Required. The group for which events shall be returned. */\n groupId?: string, \n/** Optional. The maximum number of results to return per response. */\n pageSize?: number, \n/** Optional. A `next_page_token` provided by a previous response. */\n pageToken?: string, \n/** Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type). */\n serviceFilterResourceType?: string, \n/** Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service). */\n serviceFilterService?: string, \n/** Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version). */\n serviceFilterVersion?: string, \n/** Restricts the query to the specified time range. */\n timeRangePeriod?: \"PERIOD_UNSPECIFIED\" | \"PERIOD_1_HOUR\" | \"PERIOD_6_HOURS\" | \"PERIOD_1_DAY\" | \"PERIOD_1_WEEK\" | \"PERIOD_30_DAYS\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.groupId": {
        "rendered": "\n/** Required. The group for which events shall be returned. */\n groupId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageSize": {
        "rendered": "\n/** Optional. The maximum number of results to return per response. */\n pageSize?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageToken": {
        "rendered": "\n/** Optional. A `next_page_token` provided by a previous response. */\n pageToken?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterResourceType": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type). */\n serviceFilterResourceType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterService": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service). */\n serviceFilterService?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterVersion": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version). */\n serviceFilterVersion?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.timeRangePeriod": {
        "rendered": "\n/** Restricts the query to the specified time range. */\n timeRangePeriod?: \"PERIOD_UNSPECIFIED\" | \"PERIOD_1_HOUR\" | \"PERIOD_6_HOURS\" | \"PERIOD_1_DAY\" | \"PERIOD_1_WEEK\" | \"PERIOD_30_DAYS\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {},
    "path": {
      ".projectName": {
        "rendered": "\n/** Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}`, where `{projectID}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: `projects/my-project-123`. */\n projectName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ListEventsResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v1beta1/{projectName}/events:report": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: ReportedErrorEvent,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".projectName": {
        "rendered": "\n/** Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectId}`, where `{projectId}` is the [Google Cloud Platform project ID](https://support.google.com/cloud/answer/6158840). Example: // `projects/my-project-123`. */\n projectName: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".report": {
        "rendered": " report: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ReportErrorEventResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v1beta1/{projectName}/groupStats": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** Optional. The alignment of the timed counts to be returned. Default is `ALIGNMENT_EQUAL_AT_END`. */\n alignment?: \"ERROR_COUNT_ALIGNMENT_UNSPECIFIED\" | \"ALIGNMENT_EQUAL_ROUNDED\" | \"ALIGNMENT_EQUAL_AT_END\", \n/** Optional. Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC. */\n alignmentTime?: string, \n/** Optional. List all ErrorGroupStats with these IDs. */\n groupId?: (string)[], \n/** Optional. The sort order in which the results are returned. Default is `COUNT_DESC`. */\n order?: \"GROUP_ORDER_UNSPECIFIED\" | \"COUNT_DESC\" | \"LAST_SEEN_DESC\" | \"CREATED_DESC\" | \"AFFECTED_USERS_DESC\", \n/** Optional. The maximum number of results to return per response. Default is 20. */\n pageSize?: number, \n/** Optional. A next_page_token provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request. */\n pageToken?: string, \n/** Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type). */\n serviceFilterResourceType?: string, \n/** Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service). */\n serviceFilterService?: string, \n/** Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version). */\n serviceFilterVersion?: string, \n/** Restricts the query to the specified time range. */\n timeRangePeriod?: \"PERIOD_UNSPECIFIED\" | \"PERIOD_1_HOUR\" | \"PERIOD_6_HOURS\" | \"PERIOD_1_DAY\" | \"PERIOD_1_WEEK\" | \"PERIOD_30_DAYS\", \n/** Optional. The preferred duration for a single returned TimedCount. If not set, no timed counts are returned. */\n timedCountDuration?: string, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alignment": {
        "rendered": "\n/** Optional. The alignment of the timed counts to be returned. Default is `ALIGNMENT_EQUAL_AT_END`. */\n alignment?: \"ERROR_COUNT_ALIGNMENT_UNSPECIFIED\" | \"ALIGNMENT_EQUAL_ROUNDED\" | \"ALIGNMENT_EQUAL_AT_END\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.alignmentTime": {
        "rendered": "\n/** Optional. Time where the timed counts shall be aligned if rounded alignment is chosen. Default is 00:00 UTC. */\n alignmentTime?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.groupId": {
        "rendered": "\n/** Optional. List all ErrorGroupStats with these IDs. */\n groupId?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.groupId.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order": {
        "rendered": "\n/** Optional. The sort order in which the results are returned. Default is `COUNT_DESC`. */\n order?: \"GROUP_ORDER_UNSPECIFIED\" | \"COUNT_DESC\" | \"LAST_SEEN_DESC\" | \"CREATED_DESC\" | \"AFFECTED_USERS_DESC\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.pageSize": {
        "rendered": "\n/** Optional. The maximum number of results to return per response. Default is 20. */\n pageSize?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageToken": {
        "rendered": "\n/** Optional. A next_page_token provided by a previous response. To view additional results, pass this token along with the identical query parameters as the first request. */\n pageToken?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterResourceType": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.resource_type`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.resource_type). */\n serviceFilterResourceType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterService": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.service`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.service). */\n serviceFilterService?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.serviceFilterVersion": {
        "rendered": "\n/** Optional. The exact value to match against [`ServiceContext.version`](/error-reporting/reference/rest/v1beta1/ServiceContext#FIELDS.version). */\n serviceFilterVersion?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.timeRangePeriod": {
        "rendered": "\n/** Restricts the query to the specified time range. */\n timeRangePeriod?: \"PERIOD_UNSPECIFIED\" | \"PERIOD_1_HOUR\" | \"PERIOD_6_HOURS\" | \"PERIOD_1_DAY\" | \"PERIOD_1_WEEK\" | \"PERIOD_30_DAYS\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.timedCountDuration": {
        "rendered": "\n/** Optional. The preferred duration for a single returned TimedCount. If not set, no timed counts are returned. */\n timedCountDuration?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".projectName": {
        "rendered": "\n/** Required. The resource name of the Google Cloud Platform project. Written as `projects/{projectID}` or `projects/{projectNumber}`, where `{projectID}` and `{projectNumber}` can be found in the [Google Cloud console](https://support.google.com/cloud/answer/6158840). Examples: `projects/my-project-123`, `projects/5551234`. */\n projectName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ListGroupStatsResponse",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  }
}