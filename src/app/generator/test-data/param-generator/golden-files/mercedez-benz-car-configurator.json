{
  "get__/markets": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** This is a ISO language string e.g. 'de' and is spoken in Austria 'AT', Germany 'DE' and Swiss 'CH'. */\n language?: string, \n/** This is a ISO country string e.g. Germany 'DE' or Swiss 'CH'. */\n country?: string, \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.language": {
        "rendered": "\n/** This is a ISO language string e.g. 'de' and is spoken in Austria 'AT', Germany 'DE' and Swiss 'CH'. */\n language?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.country": {
        "rendered": "\n/** This is a ISO country string e.g. Germany 'DE' or Swiss 'CH'. */\n country?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "(Market)[]",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": "\n/** This is a ISO 3166 language country string e.g. 'de_DE' or 'en_GB'. */\n marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Market",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/bodies": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string, \n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string, \n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"PKW\" | \"VAN\" | \"SMART\")[], \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.classId": {
        "rendered": "\n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.bodyId": {
        "rendered": "\n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.productGroups": {
        "rendered": "\n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"PKW\" | \"VAN\" | \"SMART\")[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.productGroups.__no_name": {
        "rendered": "\"PKW\" | \"VAN\" | \"SMART\"",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(VehicleBody)[]",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/bodies/{bodyId}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".bodyId": {
        "rendered": "\n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleBody",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/classes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string, \n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string, \n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"\"PKW\"\" | \"\"VAN\"\" | \"\"SMART\"\")[], \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.classId": {
        "rendered": "\n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.bodyId": {
        "rendered": "\n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.productGroups": {
        "rendered": "\n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"\"PKW\"\" | \"\"VAN\"\" | \"\"SMART\"\")[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.productGroups.__no_name": {
        "rendered": "\"\"PKW\"\" | \"\"VAN\"\" | \"\"SMART\"\"",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(VehicleClass)[]",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/classes/{classId}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".classId": {
        "rendered": "\n/** This is a class id e.g. '176' for 'A-Klasse' in Germany. */\n classId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleClass",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string, \n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string, \n/** The first four digits of a baumuster are called baumuster4prefix e.g. '1760' for 'Berline' in France. */\n baumuster4prefix?: string, \n/** This is a baumuster e.g. '176042' for 'A 180 Limousine' in Germany. */\n baumuster?: string, \n/** This is the national sales type (NST) of a distinct baumuster. There is no predefined pattern for the NST, each market defines its NST. e.g. 'E07' in France, 0001 in Germany and ZA1 in South Africa Using the NST markets can define market specific conditions. e.g. different initial configuration, etc. */\n nationalSalesType?: string, \n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"\"\"PKW\"\"\" | \"\"\"VAN\"\"\" | \"\"\"SMART\"\"\")[], \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.classId": {
        "rendered": "\n/** This is a class id e.g. '176' for 'A-Class' in Germany. */\n classId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.bodyId": {
        "rendered": "\n/** This is a body id e.g. '1' for 'Limousine' in Germany. */\n bodyId?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.baumuster4prefix": {
        "rendered": "\n/** The first four digits of a baumuster are called baumuster4prefix e.g. '1760' for 'Berline' in France. */\n baumuster4prefix?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.baumuster": {
        "rendered": "\n/** This is a baumuster e.g. '176042' for 'A 180 Limousine' in Germany. */\n baumuster?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.nationalSalesType": {
        "rendered": "\n/** This is the national sales type (NST) of a distinct baumuster. There is no predefined pattern for the NST, each market defines its NST. e.g. 'E07' in France, 0001 in Germany and ZA1 in South Africa Using the NST markets can define market specific conditions. e.g. different initial configuration, etc. */\n nationalSalesType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.productGroups": {
        "rendered": "\n/** Specifies to which product groups the vehicles belong which should be returned. The product groups are separated from each other by a comma and are case sensitive. Allowed values are:\n  * PKW\n  * VAN\n  * SMART */\n productGroups?: (\"\"\"PKW\"\"\" | \"\"\"VAN\"\"\" | \"\"\"SMART\"\"\")[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.productGroups.__no_name": {
        "rendered": "\"\"\"PKW\"\"\" | \"\"\"VAN\"\"\" | \"\"\"SMART\"\"\"",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(VehicleModel)[]",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": "\n/** Minimal string that identifies a model e.g. '176042_002'. If no nationalSalesType is available, the modelId only consists of the baumuster e.g. '176042'. */\n modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleModel",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/initial": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleConfiguration",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": "\n/** Minimal string that identifies a configuration e.g. 'E-D15-D18-D41-D46-D49-D52-D53-D54-D59-D60-D71-F32-F36-F88-F98-G03-G05-G36-G56-I61-J53-J67-L08-M23-M70-N18-N62-N92-O76-Q29-Q56-Q79-Q92-S01-S05-S08-S63-S92-T05-T07-T62-T84-T88_I-953_L-696_P-001_S-152-160-161-171-258-290-292-294-351-360-411-440-442-470-472-475-485-520-533-538-560-570-573-580-584-58U-591-620-70B-808-888-893-B03-B16-K11-L18-R43-U60'. A codeType is only once within the configurationId e.g 'S-152-160-161' stands for the components with the componentId 'S-152', 'S-160' and 'S-161'. A new codeType is divided from the codes with a underscore e.g 'S-152-160-161_I-953_L-696'. */\n configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleConfiguration",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/alternatives/{componentList}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".componentList": {
        "rendered": "\n/** A string representing the changes, in other words a list of components that will be added and removed. The following syntax is used for the components to be added and the components to be removed. The added components e.g. '+I-950_L-890' and the removed components e.g. '-I-953_L-696' and the delimiter between the added and removed components is ','. In one components string '+I-950_L-890,-I-953_L-696'. */\n componentList: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "(VehicleAlternative)[]",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ComponentsImagesResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/engine": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "EngineImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/equipments": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AllEquipmentImagesResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/equipments/{componentCode}": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".componentCode": {
        "rendered": "\n/** The value of the requested component group, e.g. '245'. */\n componentCode: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "EquipmentImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/paint": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PaintImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/rim": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RimImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/trim": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TrimImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/components/upholstery": {
    "query": {},
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "UpholsteryImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/images/vehicle": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** One or more perspectives as a comma separated String list e.g. 'EXT000,EXT010,INT1'.  The following perspectives are available:\n  * EXT000-EXT350: EXT000 defines the front view, EXT010 defines a rotation of 10 degress and so forth.\n  * INT1-INT4: These are the 4 available interior perspectives.\n\nThe default value is EXT020,INT1 if no value is provided. */\n perspectives?: string, \n/** Set 'true', if you are looking for images with the roof open. This option is only valid for cabrios. Default is 'false'. */\n roofOpen?: boolean, \n/** Set 'true', if you are looking for images with a darker background and the vehicle's headlights turned on. Default is 'false'. */\n night?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.perspectives": {
        "rendered": "\n/** One or more perspectives as a comma separated String list e.g. 'EXT000,EXT010,INT1'.  The following perspectives are available:\n  * EXT000-EXT350: EXT000 defines the front view, EXT010 defines a rotation of 10 degress and so forth.\n  * INT1-INT4: These are the 4 available interior perspectives.\n\nThe default value is EXT020,INT1 if no value is provided. */\n perspectives?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.roofOpen": {
        "rendered": "\n/** Set 'true', if you are looking for images with the roof open. This option is only valid for cabrios. Default is 'false'. */\n roofOpen?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.night": {
        "rendered": "\n/** Set 'true', if you are looking for images with a darker background and the vehicle's headlights turned on. Default is 'false'. */\n night?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleImageResponse",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/models/{modelId}/configurations/{configurationId}/selectables": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A list of component types separated by a comma case insensitive. If nothing is defined all component types are returned. Allowed values are:\n  - WHEELS\n  - PAINTS\n  - UPHOLSTERIES\n  - TRIMS\n  - PACKAGES\n  - LINES\n  - SPECIAL_EDITION\n  - SPECIAL_EQUIPMENT */\n componentTypes?: (\"WHEELS\" | \"PAINTS\" | \"UPHOLSTERIES\" | \"TRIMS\" | \"PACKAGES\" | \"LINES\" | \"SPECIAL_EDITION\" | \"SPECIAL_EQUIPMENT\")[], \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.componentTypes": {
        "rendered": "\n/** A list of component types separated by a comma case insensitive. If nothing is defined all component types are returned. Allowed values are:\n  - WHEELS\n  - PAINTS\n  - UPHOLSTERIES\n  - TRIMS\n  - PACKAGES\n  - LINES\n  - SPECIAL_EDITION\n  - SPECIAL_EQUIPMENT */\n componentTypes?: (\"WHEELS\" | \"PAINTS\" | \"UPHOLSTERIES\" | \"TRIMS\" | \"PACKAGES\" | \"LINES\" | \"SPECIAL_EDITION\" | \"SPECIAL_EQUIPMENT\")[],",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.componentTypes.__no_name": {
        "rendered": "\"WHEELS\" | \"PAINTS\" | \"UPHOLSTERIES\" | \"TRIMS\" | \"PACKAGES\" | \"LINES\" | \"SPECIAL_EDITION\" | \"SPECIAL_EQUIPMENT\"",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".modelId": {
        "rendered": " modelId: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".configurationId": {
        "rendered": " configurationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleComponentTree",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/markets/{marketId}/onlinecode": {
    "query": {},
    "body": {
      ".body": {
        "rendered": "\n/** Request body */\n body: OnlineCodeRequestBody,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".body.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "OnlineCodeResponseBody",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/onlinecode/{onlineCode}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".onlineCode": {
        "rendered": "\n/** OnlineCode string that identifies a vehicle configuration e.g. 'M6882554'. */\n onlineCode: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "VehicleConfiguration",
        "requiresRelaxedTypeAnnotation": true
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/markets/{marketId}/productgroups": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[], },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter": {
        "rendered": "\n/** Specifies which fields should be included in the result. If this filter is not used, per default all fields are returned. */\n fieldsFilter?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fieldsFilter.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".marketId": {
        "rendered": " marketId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProductGroupsPerMarket",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  }
}
