{
  "get__/": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "{ \n/** Full name of the API's developer */\n developer?: string, \n/** Link to the Medium API's documentation */\n documentation?: string, \n/** Email ID of the developer */\n email?: string, \n/** LinkedIn Page URL */\n linkedin?: string, \n/** Full name of the API */\n name?: string, \n/** Twitter Profile URL */\n twitter?: string, \n/** Link to the Medium API's website */\n website?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.developer": {
        "rendered": "\n/** Full name of the API's developer */\n developer?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.documentation": {
        "rendered": "\n/** Link to the Medium API's documentation */\n documentation?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.email": {
        "rendered": "\n/** Email ID of the developer */\n email?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.linkedin": {
        "rendered": "\n/** LinkedIn Page URL */\n linkedin?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.name": {
        "rendered": "\n/** Full name of the API */\n name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.twitter": {
        "rendered": "\n/** Twitter Profile URL */\n twitter?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.website": {
        "rendered": "\n/** Link to the Medium API's website */\n website?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  author?: string,  claps?: number,  id?: string,  image_url?: string,  is_locked?: boolean,  is_series?: boolean,  lang?: string,  last_modified_at?: string,  publication_id?: string,  published_at?: string,  reading_time?: number,  responses_count?: number,  subtitle?: string,  tags?: (string)[],  title?: string,  topics?: (string)[],  url?: string,  voters?: number,  word_count?: number, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.author": {
        "rendered": " author?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.claps": {
        "rendered": " claps?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.image_url": {
        "rendered": " image_url?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.is_locked": {
        "rendered": " is_locked?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.is_series": {
        "rendered": " is_series?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.lang": {
        "rendered": " lang?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.last_modified_at": {
        "rendered": " last_modified_at?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publication_id": {
        "rendered": " publication_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.published_at": {
        "rendered": " published_at?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.reading_time": {
        "rendered": " reading_time?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses_count": {
        "rendered": " responses_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.subtitle": {
        "rendered": " subtitle?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags": {
        "rendered": " tags?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.title": {
        "rendered": " title?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.topics": {
        "rendered": " topics?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.topics.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.url": {
        "rendered": " url?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.voters": {
        "rendered": " voters?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.word_count": {
        "rendered": " word_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}/content": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  content?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.content": {
        "rendered": " content?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}/fans": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  article_id?: string,  count?: number,  voters?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.article_id": {
        "rendered": " article_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.count": {
        "rendered": " count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.voters": {
        "rendered": " voters?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.voters.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}/markdown": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  markdown?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.markdown": {
        "rendered": " markdown?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}/related": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  id?: string,  related_articles?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.related_articles": {
        "rendered": " related_articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.related_articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/article/{article_id}/responses": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  id?: string,  responses?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses": {
        "rendered": " responses?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/latestposts/{topic_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".topicSlug": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium. */\n topicSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  latestposts?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.latestposts": {
        "rendered": " latestposts?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.latestposts.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/list/{list_id}": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{ \n/** `user_id` of the author */\n author?: string,  claps?: number, \n/** Number of articles in the list */\n count?: number,  created_at?: string,  description?: string,  id?: string,  last_item_inserted_at?: string,  name?: string,  responses_count?: number, \n/** Image URL */\n thumbnail?: string,  voters?: number, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.author": {
        "rendered": "\n/** `user_id` of the author */\n author?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.claps": {
        "rendered": " claps?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.count": {
        "rendered": "\n/** Number of articles in the list */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.created_at": {
        "rendered": " created_at?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.last_item_inserted_at": {
        "rendered": " last_item_inserted_at?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.name": {
        "rendered": " name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses_count": {
        "rendered": " responses_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.thumbnail": {
        "rendered": "\n/** Image URL */\n thumbnail?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.voters": {
        "rendered": " voters?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/list/{list_id}/articles": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  id?: string,  list_articles?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.list_articles": {
        "rendered": " list_articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.list_articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/list/{list_id}/responses": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  id?: string,  responses?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses": {
        "rendered": " responses?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.responses.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/publication/id_for/{publication_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".publicationSlug": {
        "rendered": "\n/** It's a lowercased hyphen-separated unique string alloted to each Medium Publication. */\n publicationSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{ \n/** Unique hash id of the publication. */\n publication_id?: string, \n/** Same publication slug that you passed in the path parameters. */\n publication_slug?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publication_id": {
        "rendered": "\n/** Unique hash id of the publication. */\n publication_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publication_slug": {
        "rendered": "\n/** Same publication slug that you passed in the path parameters. */\n publication_slug?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/publication/{publication_id}": {
    "query": {},
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  creator?: string,  description?: string,  editors?: (string)[],  facebook_pagename?: string,  followers?: number,  id?: string,  instagram_username?: string,  name?: string,  slug?: string,  tagline?: string,  tags?: (string)[],  twitter_username?: string,  url?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.creator": {
        "rendered": " creator?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.editors": {
        "rendered": " editors?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.editors.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.facebook_pagename": {
        "rendered": " facebook_pagename?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.followers": {
        "rendered": " followers?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.instagram_username": {
        "rendered": " instagram_username?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.name": {
        "rendered": " name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.slug": {
        "rendered": " slug?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tagline": {
        "rendered": " tagline?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags": {
        "rendered": " tags?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.twitter_username": {
        "rendered": " twitter_username?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.url": {
        "rendered": " url?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/publication/{publication_id}/articles": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To get the articles before specified date and time. */\n from?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.from": {
        "rendered": "\n/** To get the articles before specified date and time. */\n from?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  publication_articles?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publication_articles": {
        "rendered": " publication_articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publication_articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/publication/{publication_id}/newsletter": {
    "query": {},
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  creator_id?: string,  description?: string,  id?: string,  image?: string,  name?: string,  slug?: string,  subscribers?: number, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.creator_id": {
        "rendered": " creator_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.description": {
        "rendered": " description?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.image": {
        "rendered": " image?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.name": {
        "rendered": " name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.slug": {
        "rendered": " slug?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.subscribers": {
        "rendered": " subscribers?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/related_tags/{tag}": {
    "query": {},
    "body": {},
    "path": {
      ".tag": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a class of content. */\n tag: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  given_tag?: string,  related_tags?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.given_tag": {
        "rendered": " given_tag?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.related_tags": {
        "rendered": " related_tags?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.related_tags.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/search/articles?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  articles?: (string)[],  search_query?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.articles": {
        "rendered": " articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.search_query": {
        "rendered": " search_query?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/search/lists?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  lists?: (string)[],  search_query?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.lists": {
        "rendered": " lists?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.lists.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.search_query": {
        "rendered": " search_query?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/search/publications?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  publications?: (string)[],  search_query?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publications": {
        "rendered": " publications?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publications.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.search_query": {
        "rendered": " search_query?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/search/tags?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  search_query?: string,  tags?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.search_query": {
        "rendered": " search_query?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags": {
        "rendered": " tags?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/search/users?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  search_query?: string,  users?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.search_query": {
        "rendered": " search_query?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.users": {
        "rendered": " users?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.users.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/top_writer/{topic_slug}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Limits the number of `article_ids` in the result. */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** Limits the number of `article_ids` in the result. */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".topicSlug": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium. */\n topicSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  top_writers?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.top_writers": {
        "rendered": " top_writers?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.top_writers.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/topfeeds/{tag}/{mode}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To get the subsequent top feeds. (`after` &lt; 250) */\n after?: number, \n/** To limit the number of top feeds. (`count` &lt; 25) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.after": {
        "rendered": "\n/** To get the subsequent top feeds. (`after` &lt; 250) */\n after?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of top feeds. (`count` &lt; 25) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".tag": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a class of content. */\n tag: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mode": {
        "rendered": "\n/** Mode:\n\n  - `hot` : For getting trending articles\n  - `new` : For getting latest articles\n  - `top_year` : For getting best articles of the year\n  - `top_month` : For getting best articles of the month\n  - `top_week` : For getting best articles of the week\n  - `top_all_time`: For getting best article of all time\n */\n mode: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  topfeeds?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.topfeeds": {
        "rendered": " topfeeds?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.topfeeds.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/id_for/{username}": {
    "query": {},
    "body": {},
    "path": {
      ".username": {
        "rendered": "\n/** It's a unique string chosen by every single Medium user. */\n username: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{ \n/** Unique hash id of the user. */\n id?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": "\n/** Unique hash id of the user. */\n id?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** It's a unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  allow_notes?: boolean,  bio?: string,  followers_count?: number,  following_count?: number,  fullname?: string,  has_list?: boolean,  id?: string,  image_url?: string,  is_book_author?: boolean,  is_suspended?: boolean,  is_writer_program_enrolled?: boolean,  medium_member_at?: string,  top_writer_in?: (string)[],  twitter_username?: string,  username?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.allow_notes": {
        "rendered": " allow_notes?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.bio": {
        "rendered": " bio?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.followers_count": {
        "rendered": " followers_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.following_count": {
        "rendered": " following_count?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.fullname": {
        "rendered": " fullname?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.has_list": {
        "rendered": " has_list?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.image_url": {
        "rendered": " image_url?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.is_book_author": {
        "rendered": " is_book_author?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.is_suspended": {
        "rendered": " is_suspended?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.is_writer_program_enrolled": {
        "rendered": " is_writer_program_enrolled?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.medium_member_at": {
        "rendered": " medium_member_at?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.top_writer_in": {
        "rendered": " top_writer_in?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.top_writer_in.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.twitter_username": {
        "rendered": " twitter_username?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.username": {
        "rendered": " username?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/articles": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  associated_articles?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.associated_articles": {
        "rendered": " associated_articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.associated_articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/followers": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To limit the number of results. (count &lt; 1500) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of results. (count &lt; 1500) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  followers?: (string)[],  id?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.followers": {
        "rendered": " followers?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.followers.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/following": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To limit the number of results. (count &lt; 1500) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of results. (count &lt; 1500) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  following?: (string)[],  id?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.following": {
        "rendered": " following?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.following.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.id": {
        "rendered": " id?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/interests": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  tags_followed?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags_followed": {
        "rendered": " tags_followed?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.tags_followed.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/lists": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  lists?: (string)[],  user_id?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.lists": {
        "rendered": " lists?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.lists.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.user_id": {
        "rendered": " user_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/publications": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  publications?: (string)[],  user_id?: string, }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publications": {
        "rendered": " publications?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.publications.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.user_id": {
        "rendered": " user_id?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/user/{user_id}/top_articles": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "{  associated_articles?: (string)[], }",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.associated_articles": {
        "rendered": " associated_articles?: (string)[],",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.associated_articles.__no_name": {
        "rendered": "string",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  }
}