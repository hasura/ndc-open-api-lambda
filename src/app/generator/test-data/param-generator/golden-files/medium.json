{
  "get__/": { "query": {}, "body": {}, "path": {}, "response": {} },
  "get__/article/{article_id}": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/article/{article_id}/content": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/article/{article_id}/fans": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/article/{article_id}/markdown": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/article/{article_id}/related": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/article/{article_id}/responses": {
    "query": {},
    "body": {},
    "path": {
      ".articleId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Article. */\n articleId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/latestposts/{topic_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".topicSlug": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium. */\n topicSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/list/{list_id}": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/list/{list_id}/articles": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/list/{list_id}/responses": {
    "query": {},
    "body": {},
    "path": {
      ".listId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium List. */\n listId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/publication/id_for/{publication_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".publicationSlug": {
        "rendered": "\n/** It's a lowercased hyphen-separated unique string alloted to each Medium Publication. */\n publicationSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/publication/{publication_id}": {
    "query": {},
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/publication/{publication_id}/articles": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To get the articles before specified date and time. */\n from?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.from": {
        "rendered": "\n/** To get the articles before specified date and time. */\n from?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/publication/{publication_id}/newsletter": {
    "query": {},
    "body": {},
    "path": {
      ".publicationId": {
        "rendered": "\n/** It's a unique hash id assigned to every Medium Publication. */\n publicationId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/related_tags/{tag}": {
    "query": {},
    "body": {},
    "path": {
      ".tag": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a class of content. */\n tag: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/search/articles?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams?: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/search/lists?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams?: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/search/publications?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams?: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/search/tags?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams?: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/search/users?query={query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams?: { \n/** Search query */\n query: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.query": {
        "rendered": "\n/** Search query */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": " query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/top_writer/{topic_slug}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Limits the number of `article_ids` in the result. */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** Limits the number of `article_ids` in the result. */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".topicSlug": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a topic/niche, as classified by Medium. */\n topicSlug: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/topfeeds/{tag}/{mode}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To get the subsequent top feeds. (`after` &lt; 250) */\n after?: number, \n/** To limit the number of top feeds. (`count` &lt; 25) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.after": {
        "rendered": "\n/** To get the subsequent top feeds. (`after` &lt; 250) */\n after?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of top feeds. (`count` &lt; 25) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".tag": {
        "rendered": "\n/** It's a unique string, usually hyphen-separated, representing a class of content. */\n tag: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mode": {
        "rendered": "\n/** Mode:\n\n  - `hot` : For getting trending articles\n  - `new` : For getting latest articles\n  - `top_year` : For getting best articles of the year\n  - `top_month` : For getting best articles of the month\n  - `top_week` : For getting best articles of the week\n  - `top_all_time`: For getting best article of all time\n */\n mode: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/id_for/{username}": {
    "query": {},
    "body": {},
    "path": {
      ".username": {
        "rendered": "\n/** It's a unique string chosen by every single Medium user. */\n username: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** It's a unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/articles": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/followers": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To limit the number of results. (count &lt; 1500) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of results. (count &lt; 1500) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/following": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** To limit the number of results. (count &lt; 1500) */\n count?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.count": {
        "rendered": "\n/** To limit the number of results. (count &lt; 1500) */\n count?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/interests": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/lists": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/publications": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  },
  "get__/user/{user_id}/top_articles": {
    "query": {},
    "body": {},
    "path": {
      ".userId": {
        "rendered": "\n/** Unique hash id assigned to every single Medium user. */\n userId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {}
  }
}
