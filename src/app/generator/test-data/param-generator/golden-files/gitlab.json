{
  "get__/v3/application/settings": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "ApplicationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/application/settings": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * Determine if developers can push to master\n   * @format int32\n   */\n    default_branch_protection?: 0 | 1 | 2,\n  /**\n   * The default project visibility\n   * @format int32\n   */\n    default_project_visibility?: 0 | 10 | 20,\n  /**\n   * The default snippet visibility\n   * @format int32\n   */\n    default_snippet_visibility?: 0 | 10 | 20,\n  /**\n   * The default group visibility\n   * @format int32\n   */\n    default_group_visibility?: 0 | 10 | 20,\n  /** Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users. */\n    restricted_visibility_levels?: (string)[],\n  /** Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com */\n    import_sources?: \"github\" | \"bitbucket\" | \"gitlab\" | \"google_code\" | \"fogbugz\" | \"git\" | \"gitlab_project\",\n  /** Disable certain OAuth sign-in sources */\n    disabled_oauth_sign_in_sources?: (string)[],\n  /** Allow only the selected protocols to be used for Git access. */\n    enabled_git_access_protocol?: \"ssh\" | \"http\" | \"nil\",\n  /** Flag indicating if the Gravatar service is enabled */\n    gravatar_enabled?: boolean,\n  /**\n   * The maximum number of personal projects\n   * @format int32\n   */\n    default_projects_limit?: number,\n  /**\n   * Maximum attachment size in MB\n   * @format int32\n   */\n    max_attachment_size?: number,\n  /**\n   * Session duration in minutes. GitLab restart is required to apply changes.\n   * @format int32\n   */\n    session_expire_delay?: number,\n  /** Allow users to register any application to use GitLab as an OAuth provider */\n    user_oauth_applications?: boolean,\n  /** Newly registered users will by default be external */\n    user_default_external?: boolean,\n  /** Flag indicating if sign up is enabled */\n    signup_enabled?: boolean,\n  /** Send confirmation email on sign-up */\n    send_user_confirmation_email?: boolean,\n  /** ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com */\n    domain_whitelist?: string,\n  /** Enable domain blacklist for sign ups */\n    domain_blacklist_enabled?: boolean,\n  /** Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com */\n    domain_blacklist: string,\n  /** Text shown after sign up */\n    after_sign_up_text?: string,\n  /** Flag indicating if sign in is enabled */\n    signin_enabled?: boolean,\n  /** Require all users to setup Two-factor authentication */\n    require_two_factor_authentication?: boolean,\n  /**\n   * Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication\n   * @format int32\n   */\n    two_factor_grace_period: number,\n  /** We will redirect non-logged in users to this page */\n    home_page_url?: string,\n  /** We will redirect users to this page after they sign out */\n    after_sign_out_path?: string,\n  /** The sign in text of the GitLab application */\n    sign_in_text?: string,\n  /** Custom text displayed on the help page */\n    help_page_text?: string,\n  /** Enable shared runners for new projects */\n    shared_runners_enabled?: boolean,\n  /** Shared runners text  */\n    shared_runners_text: string,\n  /**\n   * Set the maximum file size each build's artifacts can have\n   * @format int32\n   */\n    max_artifacts_size?: number,\n  /**\n   * Authorization token duration (minutes)\n   * @format int32\n   */\n    container_registry_token_expire_delay?: number,\n  /** Enable the InfluxDB metrics */\n    metrics_enabled?: boolean,\n  /** The InfluxDB host */\n    metrics_host: string,\n  /**\n   * The UDP port to use for connecting to InfluxDB\n   * @format int32\n   */\n    metrics_port: number,\n  /**\n   * The amount of InfluxDB connections to open\n   * @format int32\n   */\n    metrics_pool_size: number,\n  /**\n   * The amount of seconds after which an InfluxDB connection will time out\n   * @format int32\n   */\n    metrics_timeout: number,\n  /**\n   * A method call is only tracked when it takes longer to complete than the given amount of milliseconds.\n   * @format int32\n   */\n    metrics_method_call_threshold: number,\n  /**\n   * The sampling interval in seconds\n   * @format int32\n   */\n    metrics_sample_interval: number,\n  /**\n   * The amount of points to store in a single UDP packet\n   * @format int32\n   */\n    metrics_packet_size: number,\n  /** Enable Sidekiq Job Throttling */\n    sidekiq_throttling_enabled?: boolean,\n  /** Choose which queues you wish to throttle */\n    sidekiq_throttling_queus: (string)[],\n  /**\n   * The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive.\n   * @format float\n   */\n    sidekiq_throttling_factor: number,\n  /** Helps prevent bots from creating accounts */\n    recaptcha_enabled?: boolean,\n  /** Generate site key at http://www.google.com/recaptcha */\n    recaptcha_site_key: string,\n  /** Generate private key at http://www.google.com/recaptcha */\n    recaptcha_private_key: string,\n  /** Helps prevent bots from creating issues */\n    akismet_enabled?: boolean,\n  /** Generate API key at http://www.akismet.com */\n    akismet_api_key: string,\n  /** Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area. */\n    admin_notification_email?: string,\n  /** Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com */\n    sentry_enabled?: boolean,\n  /** Sentry Data Source Name */\n    sentry_dsn: string,\n  /** Storage paths for new projects */\n    repository_storage?: string,\n  /** GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues. */\n    repository_checks_enabled?: boolean,\n  /** Enable Koding */\n    koding_enabled?: boolean,\n  /** The Koding team URL */\n    koding_url: string,\n  /** Enable PlantUML */\n    plantuml_enabled?: boolean,\n  /** The PlantUML server URL */\n    plantuml_url: string,\n  /** Let GitLab inform you when an update is available. */\n    version_check_enabled?: boolean,\n  /** Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead. */\n    email_author_in_body?: boolean,\n  /** By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format. */\n    html_emails_enabled?: boolean,\n  /** Enable automatic repository housekeeping (git repack, git gc) */\n    housekeeping_enabled?: boolean,\n  /** Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance. */\n    housekeeping_bitmaps_enabled: boolean,\n  /**\n   * Number of Git pushes after which an incremental 'git repack' is run.\n   * @format int32\n   */\n    housekeeping_incremental_repack_period: number,\n  /**\n   * Number of Git pushes after which a full 'git repack' is run.\n   * @format int32\n   */\n    housekeeping_full_repack_period: number,\n  /**\n   * Number of Git pushes after which 'git gc' is run.\n   * @format int32\n   */\n    housekeeping_gc_period: number,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "ApplicationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/ci/lint": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Content of .gitlab-ci.yml */\n    content: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/deploy_keys": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/dockerfiles": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/dockerfiles/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/gitignores": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/gitignores/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/gitlab_ci_ymls": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/gitlab_ci_ymls/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Include project statistics */\n statistics?: boolean, \n/** Show all group that you have access to */\n all_available?: boolean, \n/** Search for a specific group */\n search?: string, \n/** Order by name or path */\n order_by?: \"name\" | \"path\", \n/** Sort by asc (ascending) or desc (descending) */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.statistics": {
        "rendered": "\n/** Include project statistics */\n statistics?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.all_available": {
        "rendered": "\n/** Show all group that you have access to */\n all_available?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.search": {
        "rendered": "\n/** Search for a specific group */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** Order by name or path */\n order_by?: \"name\" | \"path\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Sort by asc (ascending) or desc (descending) */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Array of group ids to exclude from list */\n    skip_groups?: (number)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.skip_groups": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.skip_groups.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Group",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/groups": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the group */\n    name: string,\n  /** The path of the group */\n    path: string,\n  /** The description of the group */\n    description?: string,\n  /**\n   * The visibility level of the group\n   * @format int32\n   */\n    visibility_level?: number,\n  /** Enable/disable LFS for the projects in this group */\n    lfs_enabled?: boolean,\n  /** Allow users to request member access */\n    request_access_enabled?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Group",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/owned": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Include project statistics */\n statistics?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.statistics": {
        "rendered": "\n/** Include project statistics */\n statistics?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Group",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/groups/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "GroupDetail",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/groups/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the group */\n    name?: string,\n  /** The path of the group */\n    path?: string,\n  /** The description of the group */\n    description?: string,\n  /**\n   * The visibility level of the group\n   * @format int32\n   */\n    visibility_level?: number,\n  /** Enable/disable LFS for the projects in this group */\n    lfs_enabled?: boolean,\n  /** Allow users to request member access */\n    request_access_enabled?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.path": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.lfs_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.request_access_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Group",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/access_requests": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AccessRequester",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/groups/{id}/access_requests": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AccessRequester",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/groups/{id}/access_requests/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the access requester */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/groups/{id}/access_requests/{user_id}/approve": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * A valid access level (defaults: `30`, developer access level)\n   * @format int32\n   */\n    access_level?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the access requester */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\", \n/** Comma-separated list of label names */\n labels?: string, \n/** Return issues for a specific milestone */\n milestone?: string, \n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\", \n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.state": {
        "rendered": "\n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.labels": {
        "rendered": "\n/** Comma-separated list of label names */\n labels?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.milestone": {
        "rendered": "\n/** Return issues for a specific milestone */\n milestone?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/members": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A query string to search for members */\n query?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** A query string to search for members */\n query?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/groups/{id}/members": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The user ID of the new member\n   * @format int32\n   */\n    user_id: number,\n  /**\n   * A valid access level (defaults: `30`, developer access level)\n   * @format int32\n   */\n    access_level: number,\n  /**\n   * Date string in the format YEAR-MONTH-DAY\n   * @format date-time\n   */\n    expires_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.user_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.expires_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/groups/{id}/members/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/members/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/groups/{id}/members/{user_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * A valid access level\n   * @format int32\n   */\n    access_level: number,\n  /**\n   * Date string in the format YEAR-MONTH-DAY\n   * @format date-time\n   */\n    expires_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.expires_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The group ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the new member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/notification_settings": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID or project ID or project NAMESPACE/PROJECT_NAME */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "NotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/groups/{id}/notification_settings": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The group notification level */\n    level?: string,\n  /** Enable/disable this notification */\n    new_note?: boolean,\n  /** Enable/disable this notification */\n    new_issue?: boolean,\n  /** Enable/disable this notification */\n    reopen_issue?: boolean,\n  /** Enable/disable this notification */\n    close_issue?: boolean,\n  /** Enable/disable this notification */\n    reassign_issue?: boolean,\n  /** Enable/disable this notification */\n    new_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reopen_merge_request?: boolean,\n  /** Enable/disable this notification */\n    close_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reassign_merge_request?: boolean,\n  /** Enable/disable this notification */\n    merge_merge_request?: boolean,\n  /** Enable/disable this notification */\n    failed_pipeline?: boolean,\n  /** Enable/disable this notification */\n    success_pipeline?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_note": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reopen_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.close_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reassign_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reopen_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.close_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reassign_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.failed_pipeline": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.success_pipeline": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The group ID or project ID or project NAMESPACE/PROJECT_NAME */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "NotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/groups/{id}/projects": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/groups/{id}/projects/{project_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a group */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".projectId": {
        "rendered": "\n/** The ID or path of the project */\n projectId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "GroupDetail",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/hooks": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Hook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/hooks": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The URL to send the request to */\n    url: string,\n  /** The token used to validate payloads */\n    token?: string,\n  /** Trigger hook on push events */\n    push_events?: boolean,\n  /** Trigger hook on tag push events */\n    tag_push_events?: boolean,\n  /** Do SSL verification when triggering the hook */\n    enable_ssl_verification?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Hook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/hooks/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the system hook */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Hook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/hooks/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the system hook */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Hook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/internal/allowed": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/internal/broadcast_message": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/internal/check": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/internal/discover": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/internal/lfs_authenticate": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/internal/merge_request_urls": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/internal/two_factor_recovery_codes": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\", \n/** Comma-separated list of label names */\n labels?: string, \n/** Return issues for a specific milestone */\n milestone?: string, \n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\", \n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.state": {
        "rendered": "\n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.labels": {
        "rendered": "\n/** Comma-separated list of label names */\n labels?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.milestone": {
        "rendered": "\n/** Return issues for a specific milestone */\n milestone?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/keys/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKeyWithUser",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/licenses": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** If passed, returns only popular licenses */\n popular?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.popular": {
        "rendered": "\n/** If passed, returns only popular licenses */\n popular?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "RepoLicense",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/licenses/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoLicense",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/namespaces": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Search query for namespaces */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.search": {
        "rendered": "\n/** Search query for namespaces */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Namespace",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/notification_settings": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "GlobalNotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/notification_settings": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The global notification level */\n    level?: string,\n  /** The email address to send notifications */\n    notification_email?: string,\n  /** Enable/disable this notification */\n    new_note?: boolean,\n  /** Enable/disable this notification */\n    new_issue?: boolean,\n  /** Enable/disable this notification */\n    reopen_issue?: boolean,\n  /** Enable/disable this notification */\n    close_issue?: boolean,\n  /** Enable/disable this notification */\n    reassign_issue?: boolean,\n  /** Enable/disable this notification */\n    new_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reopen_merge_request?: boolean,\n  /** Enable/disable this notification */\n    close_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reassign_merge_request?: boolean,\n  /** Enable/disable this notification */\n    merge_merge_request?: boolean,\n  /** Enable/disable this notification */\n    failed_pipeline?: boolean,\n  /** Enable/disable this notification */\n    success_pipeline?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "GlobalNotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BasicProjectDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the project */\n    name: string,\n  /** The path of the repository */\n    path?: string,\n  /** The description of the project */\n    description?: string,\n  /** Flag indication if the issue tracker is enabled */\n    issues_enabled?: boolean,\n  /** Flag indication if merge requests are enabled */\n    merge_requests_enabled?: boolean,\n  /** Flag indication if the wiki is enabled */\n    wiki_enabled?: boolean,\n  /** Flag indication if builds are enabled */\n    builds_enabled?: boolean,\n  /** Flag indication if snippets are enabled */\n    snippets_enabled?: boolean,\n  /** Flag indication if shared runners are enabled for that project */\n    shared_runners_enabled?: boolean,\n  /** Flag indication if the container registry is enabled for that project */\n    container_registry_enabled?: boolean,\n  /** Flag indication if Git LFS is enabled for that project */\n    lfs_enabled?: boolean,\n  /** Create a public project. The same as visibility_level = 20. */\n    public?: boolean,\n  /**\n   * Create a public project. The same as visibility_level = 20.\n   * @format int32\n   */\n    visibility_level?: 0 | 10 | 20,\n  /** Perform public builds */\n    public_builds?: boolean,\n  /** Allow users to request member access */\n    request_access_enabled?: boolean,\n  /** Only allow to merge if builds succeed */\n    only_allow_merge_if_build_succeeds?: boolean,\n  /** Only allow to merge if all discussions are resolved */\n    only_allow_merge_if_all_discussions_are_resolved?: boolean,\n  /**\n   * Namespace ID for the new project. Default to the user namespace.\n   * @format int32\n   */\n    namespace_id?: number,\n  /** URL from which the project is imported */\n    import_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/all": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, \n/** Include project statistics */\n statistics?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.statistics": {
        "rendered": "\n/** Include project statistics */\n statistics?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BasicProjectDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/fork/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The ID or name of the namespace that the project will be forked into */\n    namespace?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.namespace": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/owned": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, \n/** Include project statistics */\n statistics?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.statistics": {
        "rendered": "\n/** Include project statistics */\n statistics?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BasicProjectDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/search/{query}": {
    "query": {
      ".queryParams": {
        "rendered": " queryParams: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".queryParams.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".queryParams.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".queryParams.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".queryParams.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".query": {
        "rendered": "\n/** The project name to be searched */\n query: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/starred": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BasicProjectDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/user/{user_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the project */\n    name: string,\n  /** The default branch of the project */\n    default_branch?: string,\n  /** The description of the project */\n    description?: string,\n  /** Flag indication if the issue tracker is enabled */\n    issues_enabled?: boolean,\n  /** Flag indication if merge requests are enabled */\n    merge_requests_enabled?: boolean,\n  /** Flag indication if the wiki is enabled */\n    wiki_enabled?: boolean,\n  /** Flag indication if builds are enabled */\n    builds_enabled?: boolean,\n  /** Flag indication if snippets are enabled */\n    snippets_enabled?: boolean,\n  /** Flag indication if shared runners are enabled for that project */\n    shared_runners_enabled?: boolean,\n  /** Flag indication if the container registry is enabled for that project */\n    container_registry_enabled?: boolean,\n  /** Flag indication if Git LFS is enabled for that project */\n    lfs_enabled?: boolean,\n  /** Create a public project. The same as visibility_level = 20. */\n    public?: boolean,\n  /**\n   * Create a public project. The same as visibility_level = 20.\n   * @format int32\n   */\n    visibility_level?: 0 | 10 | 20,\n  /** Perform public builds */\n    public_builds?: boolean,\n  /** Allow users to request member access */\n    request_access_enabled?: boolean,\n  /** Only allow to merge if builds succeed */\n    only_allow_merge_if_build_succeeds?: boolean,\n  /** Only allow to merge if all discussions are resolved */\n    only_allow_merge_if_all_discussions_are_resolved?: boolean,\n  /**\n   * Namespace ID for the new project. Default to the user namespace.\n   * @format int32\n   */\n    namespace_id?: number,\n  /** URL from which the project is imported */\n    import_url?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.default_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_requests_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.builds_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.snippets_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.shared_runners_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.container_registry_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.lfs_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.public": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.public_builds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.request_access_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.only_allow_merge_if_build_succeeds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.only_allow_merge_if_all_discussions_are_resolved": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.namespace_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.import_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".userId": {
        "rendered": "\n/** The ID of a user */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/visible": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\", \n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\", \n/** Limit by archived status */\n archived?: boolean, \n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\", \n/** Return list of authorized projects matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return projects ordered by field */\n order_by?: \"id\" | \"name\" | \"path\" | \"created_at\" | \"updated_at\" | \"last_activity_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return projects sorted in ascending and descending order */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.archived": {
        "rendered": "\n/** Limit by archived status */\n archived?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.visibility": {
        "rendered": "\n/** Limit by visibility */\n visibility?: \"public\" | \"internal\" | \"private\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.search": {
        "rendered": "\n/** Return list of authorized projects matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.simple": {
        "rendered": "\n/** Return only the ID, URL, name, and path of each project */\n simple?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "BasicProjectDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectWithAccess",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the project */\n    name?: string,\n  /** The default branch of the project */\n    default_branch?: string,\n  /** The path of the repository */\n    path?: string,\n  /** The description of the project */\n    description?: string,\n  /** Flag indication if the issue tracker is enabled */\n    issues_enabled?: boolean,\n  /** Flag indication if merge requests are enabled */\n    merge_requests_enabled?: boolean,\n  /** Flag indication if the wiki is enabled */\n    wiki_enabled?: boolean,\n  /** Flag indication if builds are enabled */\n    builds_enabled?: boolean,\n  /** Flag indication if snippets are enabled */\n    snippets_enabled?: boolean,\n  /** Flag indication if shared runners are enabled for that project */\n    shared_runners_enabled?: boolean,\n  /** Flag indication if the container registry is enabled for that project */\n    container_registry_enabled?: boolean,\n  /** Flag indication if Git LFS is enabled for that project */\n    lfs_enabled?: boolean,\n  /** Create a public project. The same as visibility_level = 20. */\n    public?: boolean,\n  /**\n   * Create a public project. The same as visibility_level = 20.\n   * @format int32\n   */\n    visibility_level?: 0 | 10 | 20,\n  /** Perform public builds */\n    public_builds?: boolean,\n  /** Allow users to request member access */\n    request_access_enabled?: boolean,\n  /** Only allow to merge if builds succeed */\n    only_allow_merge_if_build_succeeds?: boolean,\n  /** Only allow to merge if all discussions are resolved */\n    only_allow_merge_if_all_discussions_are_resolved?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.default_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.path": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_requests_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.builds_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.snippets_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.shared_runners_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.container_registry_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.lfs_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.public": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.public_builds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.request_access_enabled": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.only_allow_merge_if_build_succeeds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.only_allow_merge_if_all_discussions_are_resolved": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/(ref/{ref}/)trigger/builds": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The unique token of trigger */\n    token: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".ref": {
        "rendered": "\n/** The commit sha or name of a branch or tag */\n ref: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "TriggerRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/access_requests": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AccessRequester",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/access_requests": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AccessRequester",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/access_requests/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the access requester */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/access_requests/{user_id}/approve": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * A valid access level (defaults: `30`, developer access level)\n   * @format int32\n   */\n    access_level?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the access requester */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/archive": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/boards": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Board",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/boards/{board_id}/lists": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".boardId": {
        "rendered": "\n/** The ID of a board */\n boardId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "List",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/boards/{board_id}/lists": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of an existing label\n   * @format int32\n   */\n    label_id: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.label_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".boardId": {
        "rendered": "\n/** The ID of a board */\n boardId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "List",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".boardId": {
        "rendered": "\n/** The ID of a board */\n boardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".listId": {
        "rendered": "\n/** The ID of a board list */\n listId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "List",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".boardId": {
        "rendered": "\n/** The ID of a board */\n boardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".listId": {
        "rendered": "\n/** The ID of a list */\n listId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "List",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/boards/{board_id}/lists/{list_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The position of the list\n   * @format int32\n   */\n    position: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.position": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".boardId": {
        "rendered": "\n/** The ID of a board */\n boardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".listId": {
        "rendered": "\n/** The ID of a list */\n listId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "List",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/builds": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The scope of builds to show */\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope": {
        "rendered": "\n/** The scope of builds to show */\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/builds/artifacts/{ref_name}/download": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The name for the build */\n job: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.job": {
        "rendered": "\n/** The name for the build */\n job: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".refName": {
        "rendered": "\n/** The ref from repository */\n refName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/builds/{build_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/builds/{build_id}/artifacts": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/builds/{build_id}/artifacts/keep": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/builds/{build_id}/cancel": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/builds/{build_id}/erase": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/builds/{build_id}/play": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a Build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/builds/{build_id}/retry": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/builds/{build_id}/trace": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".buildId": {
        "rendered": "\n/** The ID of a build */\n buildId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/deploy_keys": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/deploy_keys": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new deploy key */\n    key: string,\n  /** The name of the deploy key */\n    title: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/deploy_keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/deploy_keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/deploy_keys/{key_id}/disable": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/deploy_keys/{key_id}/enable": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/deployments": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Deployment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/deployments/{deployment_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".deploymentId": {
        "rendered": "\n/** The deployment ID */\n deploymentId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Deployment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/environments": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Environment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/environments": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the environment to be created */\n    name: string,\n  /** URL on which this deployment is viewable */\n    external_url?: string,\n    slug?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.external_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.slug": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Environment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/environments/{environment_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".environmentId": {
        "rendered": "\n/** The environment ID */\n environmentId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Environment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/environments/{environment_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new environment name */\n    name?: string,\n  /** The new URL on which this deployment is viewable */\n    external_url?: string,\n    slug?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.external_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.slug": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".environmentId": {
        "rendered": "\n/** The environment ID */\n environmentId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Environment",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/events": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Event",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/fork": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/fork/{forked_from_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".forkedFromId": {
        "rendered": "\n/** The ID of the project it was forked from */\n forkedFromId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/hooks": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectHook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/hooks": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The URL to send the request to */\n    url: string,\n  /** Trigger hook on push events */\n    push_events?: boolean,\n  /** Trigger hook on issues events */\n    issues_events?: boolean,\n  /** Trigger hook on merge request events */\n    merge_requests_events?: boolean,\n  /** Trigger hook on tag push events */\n    tag_push_events?: boolean,\n  /** Trigger hook on note(comment) events */\n    note_events?: boolean,\n  /** Trigger hook on build events */\n    build_events?: boolean,\n  /** Trigger hook on pipeline events */\n    pipeline_events?: boolean,\n  /** Trigger hook on wiki events */\n    wiki_page_events?: boolean,\n  /** Do SSL verification when triggering the hook */\n    enable_ssl_verification?: boolean,\n  /** Secret token to validate received payloads; this will not be returned in the response */\n    token?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_requests_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.pipeline_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_page_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.enable_ssl_verification": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectHook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/hooks/{hook_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".hookId": {
        "rendered": "\n/** The ID of the hook to delete */\n hookId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectHook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/hooks/{hook_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".hookId": {
        "rendered": "\n/** The ID of a project hook */\n hookId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectHook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/hooks/{hook_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The URL to send the request to */\n    url: string,\n  /** Trigger hook on push events */\n    push_events?: boolean,\n  /** Trigger hook on issues events */\n    issues_events?: boolean,\n  /** Trigger hook on merge request events */\n    merge_requests_events?: boolean,\n  /** Trigger hook on tag push events */\n    tag_push_events?: boolean,\n  /** Trigger hook on note(comment) events */\n    note_events?: boolean,\n  /** Trigger hook on build events */\n    build_events?: boolean,\n  /** Trigger hook on pipeline events */\n    pipeline_events?: boolean,\n  /** Trigger hook on wiki events */\n    wiki_page_events?: boolean,\n  /** Do SSL verification when triggering the hook */\n    enable_ssl_verification?: boolean,\n  /** Secret token to validate received payloads; this will not be returned in the response */\n    token?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_requests_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.pipeline_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_page_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.enable_ssl_verification": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".hookId": {
        "rendered": "\n/** The ID of the hook to update */\n hookId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectHook",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\", \n/** Return the issue having the given `iid` */\n iid?: number, \n/** Comma-separated list of label names */\n labels?: string, \n/** Return issues for a specific milestone */\n milestone?: string, \n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\", \n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.state": {
        "rendered": "\n/** Return opened, closed, or all issues */\n state?: \"opened\" | \"closed\" | \"all\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.iid": {
        "rendered": "\n/** Return the issue having the given `iid` */\n iid?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.labels": {
        "rendered": "\n/** Comma-separated list of label names */\n labels?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.milestone": {
        "rendered": "\n/** Return issues for a specific milestone */\n milestone?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.order_by": {
        "rendered": "\n/** Return issues ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return issues sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of an issue */\n    title: string,\n  /**\n   * Date time when the issue was created. Available only for admins and project owners.\n   * @format date-time\n   */\n    created_at?: string,\n  /**\n   * The IID of a merge request for which to resolve discussions\n   * @format int32\n   */\n    merge_request_for_resolving_discussions?: number,\n  /** The description of an issue */\n    description?: string,\n  /**\n   * The ID of a user to assign issue\n   * @format int32\n   */\n    assignee_id?: number,\n  /**\n   * The ID of a milestone to assign issue\n   * @format int32\n   */\n    milestone_id?: number,\n  /** Comma-separated list of label names */\n    labels?: string,\n  /** Date time string in the format YEAR-MONTH-DAY */\n    due_date?: string,\n  /** Boolean parameter if the issue should be confidential */\n    confidential?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.created_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_for_resolving_discussions": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.assignee_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.milestone_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.labels": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.due_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confidential": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/issues/{issue_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/issues/{issue_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of an issue */\n    title?: string,\n  /**\n   * Date time when the issue was updated. Available only for admins and project owners.\n   * @format date-time\n   */\n    updated_at?: string,\n  /** State of the issue */\n    state_event?: \"reopen\" | \"close\",\n  /** The description of an issue */\n    description?: string,\n  /**\n   * The ID of a user to assign issue\n   * @format int32\n   */\n    assignee_id?: number,\n  /**\n   * The ID of a milestone to assign issue\n   * @format int32\n   */\n    milestone_id?: number,\n  /** Comma-separated list of label names */\n    labels?: string,\n  /** Date time string in the format YEAR-MONTH-DAY */\n    due_date?: string,\n  /** Boolean parameter if the issue should be confidential */\n    confidential?: boolean,\n    created_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.updated_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.state_event": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.assignee_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.milestone_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.labels": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.due_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confidential": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.created_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/add_spent_time": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The duration to be parsed */\n    duration: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.duration": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of an Issue, Merge Request or Snippet */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/move": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of the new project\n   * @format int32\n   */\n    to_project_id: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.to_project_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": " issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/reset_spent_time": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/reset_time_estimate": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/time_estimate": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The duration to be parsed */\n    duration: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.duration": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{issue_id}/time_stats": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of a project issue */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{issue_id}/todo": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".issueId": {
        "rendered": "\n/** The ID of an issuable */\n issueId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Todo",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{noteable_id}/notes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{noteable_id}/notes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n  /** The creation date of the note */\n    created_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.created_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/issues/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/issues/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/issues/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/keys": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/keys": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new deploy key */\n    key: string,\n  /** The name of the deploy key */\n    title: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/keys/{key_id}/disable": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/keys/{key_id}/enable": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the deploy key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/labels": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The name of the label to be deleted */\n name: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.name": {
        "rendered": "\n/** The name of the label to be deleted */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/labels": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/labels": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the label to be created */\n    name: string,\n  /** The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) */\n    color: string,\n  /** The description of label to be created */\n    description?: string,\n  /**\n   * The priority of the label\n   * @format int32\n   */\n    priority?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.color": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.priority": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/labels": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the label to be updated */\n    name: string,\n  /** The new name of the label */\n    new_name?: string,\n  /** The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB) */\n    color?: string,\n  /** The new description of label */\n    description?: string,\n  /**\n   * The priority of the label\n   * @format int32\n   */\n    priority?: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.color": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.priority": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/labels/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/labels/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Label",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/members": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** A query string to search for members */\n query?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.query": {
        "rendered": "\n/** A query string to search for members */\n query?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/members": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The user ID of the new member\n   * @format int32\n   */\n    user_id: number,\n  /**\n   * A valid access level (defaults: `30`, developer access level)\n   * @format int32\n   */\n    access_level: number,\n  /**\n   * Date string in the format YEAR-MONTH-DAY\n   * @format date-time\n   */\n    expires_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.user_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.expires_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/members/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/members/{user_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/members/{user_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * A valid access level\n   * @format int32\n   */\n    access_level: number,\n  /**\n   * Date string in the format YEAR-MONTH-DAY\n   * @format date-time\n   */\n    expires_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.access_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.expires_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".userId": {
        "rendered": "\n/** The user ID of the new member */\n userId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Member",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_request/{merge_request_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a merge request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/merge_request/{merge_request_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the merge request */\n    title?: string,\n  /** The target branch */\n    target_branch?: string,\n  /** Status of the merge request */\n    state_event?: \"close\" | \"reopen\" | \"merge\",\n  /** The description of the merge request */\n    description?: string,\n  /**\n   * The ID of a user to assign the merge request\n   * @format int32\n   */\n    assignee_id?: number,\n  /**\n   * The ID of a milestone to assign the merge request\n   * @format int32\n   */\n    milestone_id?: number,\n  /** Comma-separated list of label names */\n    labels?: string,\n  /** Remove source branch when merging */\n    remove_source_branch?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.target_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.state_event": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.assignee_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.milestone_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.labels": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.remove_source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_request/{merge_request_id}/cancel_merge_when_build_succeeds": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_request/{merge_request_id}/changes": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequestChanges",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_request/{merge_request_id}/closes_issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_request/{merge_request_id}/comments": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_request/{merge_request_id}/comments": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The text of the comment */\n    note: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_request/{merge_request_id}/commits": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/merge_request/{merge_request_id}/merge": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Custom merge commit message */\n    merge_commit_message?: string,\n  /** When true, the source branch will be deleted if possible */\n    should_remove_source_branch?: boolean,\n  /** When true, this merge request will be merged when the pipeline succeeds */\n    merge_when_build_succeeds?: boolean,\n  /** When present, must have the HEAD SHA of the source branch */\n    sha?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_commit_message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.should_remove_source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_when_build_succeeds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.sha": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_request/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_request/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return opened, closed, merged, or all merge requests */\n state?: \"opened\" | \"closed\" | \"merged\" | \"all\", \n/** Return merge requests ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\", \n/** Return merge requests sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.state": {
        "rendered": "\n/** Return opened, closed, merged, or all merge requests */\n state?: \"opened\" | \"closed\" | \"merged\" | \"all\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.order_by": {
        "rendered": "\n/** Return merge requests ordered by `created_at` or `updated_at` fields. */\n order_by?: \"created_at\" | \"updated_at\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.sort": {
        "rendered": "\n/** Return merge requests sorted in `asc` or `desc` order. */\n sort?: \"asc\" | \"desc\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The IID of the merge requests */\n    iid?: (number)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.iid": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.iid.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the merge request */\n    title: string,\n  /** The source branch */\n    source_branch: string,\n  /** The target branch */\n    target_branch: string,\n  /**\n   * The target project of the merge request defaults to the :id of the project\n   * @format int32\n   */\n    target_project_id?: number,\n  /** The description of the merge request */\n    description?: string,\n  /**\n   * The ID of a user to assign the merge request\n   * @format int32\n   */\n    assignee_id?: number,\n  /**\n   * The ID of a milestone to assign the merge request\n   * @format int32\n   */\n    milestone_id?: number,\n  /** Comma-separated list of label names */\n    labels?: string,\n  /** Remove source branch when merging */\n    remove_source_branch?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.target_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.target_project_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.assignee_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.milestone_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.labels": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.remove_source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a merge request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/merge_requests/{merge_request_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the merge request */\n    title?: string,\n  /** The target branch */\n    target_branch?: string,\n  /** Status of the merge request */\n    state_event?: \"close\" | \"reopen\" | \"merge\",\n  /** The description of the merge request */\n    description?: string,\n  /**\n   * The ID of a user to assign the merge request\n   * @format int32\n   */\n    assignee_id?: number,\n  /**\n   * The ID of a milestone to assign the merge request\n   * @format int32\n   */\n    milestone_id?: number,\n  /** Comma-separated list of label names */\n    labels?: string,\n  /** Remove source branch when merging */\n    remove_source_branch?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.target_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.state_event": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.assignee_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.milestone_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.labels": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.remove_source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/add_spent_time": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The duration to be parsed */\n    duration: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.duration": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a project merge_request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of an Issue, Merge Request or Snippet */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/cancel_merge_when_build_succeeds": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/changes": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequestChanges",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/closes_issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/comments": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/comments": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The text of the comment */\n    note: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MRNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/commits": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/merge_requests/{merge_request_id}/merge": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Custom merge commit message */\n    merge_commit_message?: string,\n  /** When true, the source branch will be deleted if possible */\n    should_remove_source_branch?: boolean,\n  /** When true, this merge request will be merged when the pipeline succeeds */\n    merge_when_build_succeeds?: boolean,\n  /** When present, must have the HEAD SHA of the source branch */\n    sha?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_commit_message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.should_remove_source_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_when_build_succeeds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.sha": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": " mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/reset_spent_time": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a project merge_request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/reset_time_estimate": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a project merge_request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/time_estimate": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The duration to be parsed */\n    duration: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.duration": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a project merge_request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/time_stats": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a project merge_request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{merge_request_id}/todo": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of an issuable */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Todo",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/versions": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a merge request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequestDiff",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{merge_request_id}/versions/{version_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".mergeRequestId": {
        "rendered": "\n/** The ID of a merge request */\n mergeRequestId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".versionId": {
        "rendered": "\n/** The ID of a merge request diff version */\n versionId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequestDiffFull",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{noteable_id}/notes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{noteable_id}/notes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n  /** The creation date of the note */\n    created_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.created_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/merge_requests/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/merge_requests/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/merge_requests/{subscribable_id}/subscription": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".subscribableId": {
        "rendered": "\n/** The ID of a resource */\n subscribableId: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "MergeRequest",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/milestones": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return \"active\", \"closed\", or \"all\" milestones */\n state?: \"active\" | \"closed\" | \"all\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.state": {
        "rendered": "\n/** Return \"active\", \"closed\", or \"all\" milestones */\n state?: \"active\" | \"closed\" | \"all\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The IID of the milestone */\n    iid?: (number)[],\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.iid": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.iid.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Milestone",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/milestones": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the milestone */\n    title: string,\n  /** The description of the milestone */\n    description?: string,\n  /** The due date of the milestone. The ISO 8601 date format (%Y-%m-%d) */\n    due_date?: string,\n  /** The start date of the milestone. The ISO 8601 date format (%Y-%m-%d) */\n    start_date?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.due_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.start_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Milestone",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/milestones/{milestone_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".milestoneId": {
        "rendered": "\n/** The ID of a project milestone */\n milestoneId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Milestone",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/milestones/{milestone_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the milestone */\n    title?: string,\n  /** The state event of the milestone  */\n    state_event?: \"close\" | \"activate\",\n  /** The description of the milestone */\n    description?: string,\n  /** The due date of the milestone. The ISO 8601 date format (%Y-%m-%d) */\n    due_date?: string,\n  /** The start date of the milestone. The ISO 8601 date format (%Y-%m-%d) */\n    start_date?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.state_event": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.due_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.start_date": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".milestoneId": {
        "rendered": "\n/** The ID of a project milestone */\n milestoneId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Milestone",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/milestones/{milestone_id}/issues": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".milestoneId": {
        "rendered": "\n/** The ID of a project milestone */\n milestoneId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Issue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/notification_settings": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The group ID or project ID or project NAMESPACE/PROJECT_NAME */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "NotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/notification_settings": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The project notification level */\n    level?: string,\n  /** Enable/disable this notification */\n    new_note?: boolean,\n  /** Enable/disable this notification */\n    new_issue?: boolean,\n  /** Enable/disable this notification */\n    reopen_issue?: boolean,\n  /** Enable/disable this notification */\n    close_issue?: boolean,\n  /** Enable/disable this notification */\n    reassign_issue?: boolean,\n  /** Enable/disable this notification */\n    new_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reopen_merge_request?: boolean,\n  /** Enable/disable this notification */\n    close_merge_request?: boolean,\n  /** Enable/disable this notification */\n    reassign_merge_request?: boolean,\n  /** Enable/disable this notification */\n    merge_merge_request?: boolean,\n  /** Enable/disable this notification */\n    failed_pipeline?: boolean,\n  /** Enable/disable this notification */\n    success_pipeline?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_note": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reopen_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.close_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reassign_issue": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reopen_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.close_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.reassign_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_merge_request": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.failed_pipeline": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.success_pipeline": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The group ID or project ID or project NAMESPACE/PROJECT_NAME */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "NotificationSetting",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/pipeline": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Reference */\n    ref: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.ref": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Pipeline",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/pipelines": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, \n/** Either running, branches, or tags */\n scope?: \"running\" | \"branches\" | \"tags\", },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.scope": {
        "rendered": "\n/** Either running, branches, or tags */\n scope?: \"running\" | \"branches\" | \"tags\",",
        "requiresRelaxedTypeAnnotation": true
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Pipeline",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/pipelines/{pipeline_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".pipelineId": {
        "rendered": "\n/** The pipeline ID */\n pipelineId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Pipeline",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/pipelines/{pipeline_id}/cancel": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".pipelineId": {
        "rendered": "\n/** The pipeline ID */\n pipelineId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Pipeline",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/pipelines/{pipeline_id}/retry": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".pipelineId": {
        "rendered": "\n/** The pipeline ID */\n pipelineId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Pipeline",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/archive": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The commit sha of the archive to be downloaded */\n sha?: string, \n/** The archive format */\n format?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.sha": {
        "rendered": "\n/** The commit sha of the archive to be downloaded */\n sha?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.format": {
        "rendered": "\n/** The archive format */\n format?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/blobs/{sha}": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The path to the file to display */\n filepath: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.filepath": {
        "rendered": "\n/** The path to the file to display */\n filepath: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit, branch name, or tag name */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/branches": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoBranch",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/branches": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the branch */\n    branch_name: string,\n  /** Create branch from commit sha or existing branch */\n    ref: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.branch_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.ref": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoBranch",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/repository/branches/{branch}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".branch": {
        "rendered": "\n/** The name of the branch */\n branch: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/branches/{branch}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".branch": {
        "rendered": "\n/** The name of the branch */\n branch: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoBranch",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/repository/branches/{branch}/protect": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Flag if developers can push to that branch */\n    developers_can_push?: boolean,\n  /** Flag if developers can merge to that branch */\n    developers_can_merge?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.developers_can_push": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.developers_can_merge": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".branch": {
        "rendered": "\n/** The name of the branch */\n branch: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoBranch",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/repository/branches/{branch}/unprotect": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".branch": {
        "rendered": "\n/** The name of the branch */\n branch: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoBranch",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The name of a repository branch or tag, if not given the default branch is used */\n ref_name?: string, \n/** Only commits after or in this date will be returned */\n since?: string, \n/** Only commits before or in this date will be returned */\n until?: string, \n/** The page for pagination */\n page?: number, \n/** The number of results per page */\n per_page?: number, \n/** The file path */\n path?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ref_name": {
        "rendered": "\n/** The name of a repository branch or tag, if not given the default branch is used */\n ref_name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.since": {
        "rendered": "\n/** Only commits after or in this date will be returned */\n since?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.until": {
        "rendered": "\n/** Only commits before or in this date will be returned */\n until?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** The page for pagination */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** The number of results per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.path": {
        "rendered": "\n/** The file path */\n path?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/commits": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of branch */\n    branch_name: string,\n  /** Commit message */\n    commit_message: string,\n  /** Actions to perform in commit */\n    actions: (any)[],\n  /** Author email for commit */\n    author_email?: string,\n  /** Author name for commit */\n    author_name?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.branch_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.commit_message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.actions": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.actions.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommitDetail",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** A commit sha, or the name of a branch or tag */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommitDetail",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}/blob": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The path to the file to display */\n filepath: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.filepath": {
        "rendered": "\n/** The path to the file to display */\n filepath: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit, branch name, or tag name */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}/builds": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The scope of builds to show */\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope": {
        "rendered": "\n/** The scope of builds to show */\n scope?: \"pending\" | \"running\" | \"failed\" | \"success\" | \"canceled\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The SHA id of a commit */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Build",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/commits/{sha}/cherry_pick": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the branch */\n    branch: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** A commit sha to be cherry picked */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoCommit",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}/comments": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** A commit sha, or the name of a branch or tag */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CommitNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/commits/{sha}/comments": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The text of the comment */\n    note: string,\n  /** The file path */\n    path?: string,\n  /**\n   * The line number\n   * @format int32\n   */\n    line: number,\n  /**\n   * The type of the line\n   * @default \"new\"\n   */\n    line_type: \"new\" | \"old\",\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.path": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.line": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.line_type": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit's SHA */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CommitNote",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}/diff": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** A commit sha, or the name of a branch or tag */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/commits/{sha}/statuses": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The ref */\n ref?: string, \n/** The stage */\n stage?: string, \n/** The name */\n name?: string, \n/** Show all statuses, default: false */\n all?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ref": {
        "rendered": "\n/** The ref */\n ref?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.stage": {
        "rendered": "\n/** The stage */\n stage?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.name": {
        "rendered": "\n/** The name */\n name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.all": {
        "rendered": "\n/** Show all statuses, default: false */\n all?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit hash */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CommitStatus",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/compare": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The commit, branch name, or tag name to start comparison */\n from: string, \n/** The commit, branch name, or tag name to stop comparison */\n to: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.from": {
        "rendered": "\n/** The commit, branch name, or tag name to start comparison */\n from: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.to": {
        "rendered": "\n/** The commit, branch name, or tag name to stop comparison */\n to: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Compare",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/contributors": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Contributor",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/repository/files": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The path to new file. Ex. lib/class.rb */\n file_path: string, \n/** The name of branch */\n branch_name: string, \n/** Commit Message */\n commit_message: string, \n/** The email of the author */\n author_email?: string, \n/** The name of the author */\n author_name?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.file_path": {
        "rendered": "\n/** The path to new file. Ex. lib/class.rb */\n file_path: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.branch_name": {
        "rendered": "\n/** The name of branch */\n branch_name: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.commit_message": {
        "rendered": "\n/** Commit Message */\n commit_message: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.author_email": {
        "rendered": "\n/** The email of the author */\n author_email?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.author_name": {
        "rendered": "\n/** The name of the author */\n author_name?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/files": {
    "query": {
      ".query": {
        "rendered": " query?: { \n/** The path to the file. Ex. lib/class.rb */\n file_path: string, \n/** The name of branch, tag, or commit */\n ref: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.file_path": {
        "rendered": "\n/** The path to the file. Ex. lib/class.rb */\n file_path: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ref": {
        "rendered": "\n/** The name of branch, tag, or commit */\n ref: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/files": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The path to new file. Ex. lib/class.rb */\n    file_path: string,\n  /** The name of branch */\n    branch_name: string,\n  /** Commit Message */\n    commit_message: string,\n  /** The email of the author */\n    author_email?: string,\n  /** The name of the author */\n    author_name?: string,\n  /** File content */\n    content: string,\n  /** File encoding */\n    encoding?: \"base64\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file_path": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.branch_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.commit_message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.content": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.encoding": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/repository/files": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The path to new file. Ex. lib/class.rb */\n    file_path: string,\n  /** The name of branch */\n    branch_name: string,\n  /** Commit Message */\n    commit_message: string,\n  /** The email of the author */\n    author_email?: string,\n  /** The name of the author */\n    author_name?: string,\n  /** File content */\n    content: string,\n  /** File encoding */\n    encoding?: \"base64\",\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file_path": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.branch_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.commit_message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.author_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.content": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.encoding": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The project ID */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/repository/merged_branches": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/raw_blobs/{sha}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit, branch name, or tag name */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/tags": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoTag",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/tags": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of the tag */\n    tag_name: string,\n  /** The commit sha or branch name */\n    ref: string,\n  /** Specifying a message creates an annotated tag */\n    message?: string,\n  /** Specifying release notes stored in the GitLab database */\n    release_description?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.ref": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.message": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.release_description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoTag",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/repository/tags/{tag_name}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".tagName": {
        "rendered": "\n/** The name of the tag */\n tagName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/tags/{tag_name}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".tagName": {
        "rendered": "\n/** The name of the tag */\n tagName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoTag",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/repository/tags/{tag_name}/release": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Release notes with markdown support */\n    description: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".tagName": {
        "rendered": "\n/** The name of the tag */\n tagName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Release",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/repository/tags/{tag_name}/release": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Release notes with markdown support */\n    description: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".tagName": {
        "rendered": "\n/** The name of the tag */\n tagName: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Release",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/repository/tree": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The name of a repository branch or tag, if not given the default branch is used */\n ref_name?: string, \n/** The path of the tree */\n path?: string, \n/** Used to get a recursive tree */\n recursive?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.ref_name": {
        "rendered": "\n/** The name of a repository branch or tag, if not given the default branch is used */\n ref_name?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.path": {
        "rendered": "\n/** The path of the tree */\n path?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.recursive": {
        "rendered": "\n/** Used to get a recursive tree */\n recursive?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoTreeObject",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/runners": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope": {
        "rendered": "\n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/runners": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of the runner\n   * @format int32\n   */\n    runner_id: number,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.runner_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/runners/{runner_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".runnerId": {
        "rendered": "\n/** The ID of the runner */\n runnerId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/asana": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** User API token */\n    api_key: string,\n  /** Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches */\n    restrict_to_branch?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.api_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.restrict_to_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/assembla": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The authentication token */\n    token: string,\n  /** Subdomain setting */\n    subdomain?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.subdomain": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/bamboo": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Bamboo root URL like https://bamboo.example.com */\n    bamboo_url: string,\n  /** Bamboo build plan key like */\n    build_key: string,\n  /** A user with API access, if applicable */\n    username: string,\n  /** Passord of the user */\n    password: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.bamboo_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.username": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.password": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/bugzilla": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** New issue URL */\n    new_issue_url: string,\n  /** Issues URL */\n    issues_url: string,\n  /** Project URL */\n    project_url: string,\n  /** Description */\n    description?: string,\n  /** Title */\n    title?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.project_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/buildkite": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Buildkite project GitLab token */\n    token: string,\n  /** The buildkite project URL */\n    project_url: string,\n  /** Enable SSL verification for communication */\n    enable_ssl_verification?: boolean,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.project_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.enable_ssl_verification": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/builds-email": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Comma-separated list of recipient email addresses */\n    recipients: string,\n  /** Add pusher to recipients list */\n    add_pusher?: boolean,\n  /** Notify only broken builds */\n    notify_only_broken_builds?: boolean,\n  /** Event will be triggered when a build status changes */\n    build_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.recipients": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.add_pusher": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.notify_only_broken_builds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/campfire": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Campfire token */\n    token: string,\n  /** Campfire subdomain */\n    subdomain?: string,\n  /** Campfire room */\n    room?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.subdomain": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.room": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/custom-issue-tracker": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** New issue URL */\n    new_issue_url: string,\n  /** Issues URL */\n    issues_url: string,\n  /** Project URL */\n    project_url: string,\n  /** Description */\n    description?: string,\n  /** Title */\n    title?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.project_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/drone-ci": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Drone CI token */\n    token: string,\n  /** Drone CI URL */\n    drone_url: string,\n  /** Enable SSL verification for communication */\n    enable_ssl_verification?: boolean,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n  /** Event will be triggered when a merge request is created/updated/merged */\n    merge_request_events?: string,\n  /** Event will be triggered when a new tag is pushed to the repository */\n    tag_push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.drone_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.enable_ssl_verification": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/emails-on-push": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Comma-separated list of recipient email addresses */\n    recipients: string,\n  /** Disable code diffs */\n    disable_diffs?: boolean,\n  /** Send from committer */\n    send_from_committer_email?: boolean,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n  /** Event will be triggered when a new tag is pushed to the repository */\n    tag_push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.recipients": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.disable_diffs": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.send_from_committer_email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/external-wiki": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The URL of the external Wiki */\n    external_wiki_url: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.external_wiki_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/flowdock": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Flowdock token */\n    token: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/gemnasium": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Your personal API key on gemnasium.com */\n    api_key: string,\n  /** The project's slug on gemnasium.com */\n    token: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.api_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/hipchat": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The room token */\n    token: string,\n  /** The room name or ID */\n    room?: string,\n  /** The room color */\n    color?: string,\n  /** Enable notifications */\n    notify?: boolean,\n  /** Leave blank for default (v2) */\n    api_version?: string,\n  /** Leave blank for default. https://hipchat.example.com */\n    server?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n  /** Event will be triggered when an issue is created/updated/closed */\n    issue_events?: string,\n  /** Event will be triggered when a confidential issue is created/updated/closed */\n    confidential_issue_events?: string,\n  /** Event will be triggered when a merge request is created/updated/merged */\n    merge_request_events?: string,\n  /** Event will be triggered when someone adds a comment */\n    note_events?: string,\n  /** Event will be triggered when a new tag is pushed to the repository */\n    tag_push_events?: string,\n  /** Event will be triggered when a build status changes */\n    build_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.room": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.color": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.notify": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.api_version": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.server": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confidential_issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/irker": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Recipients/channels separated by whitespaces */\n    recipients: string,\n  /** Default: irc://irc.network.net:6697 */\n    default_irc_uri?: string,\n  /** Server host. Default localhost */\n    server_host?: string,\n  /**\n   * Server port. Default 6659\n   * @format int32\n   */\n    server_port?: number,\n  /** Colorize messages */\n    colorize_messages?: boolean,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.recipients": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.default_irc_uri": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.server_host": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.server_port": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.colorize_messages": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/jira": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com */\n    url: string,\n  /** The short identifier for your JIRA project, all uppercase, e.g., PROJ */\n    project_key: string,\n  /** The username of the user created to be used with GitLab/JIRA */\n    username?: string,\n  /** The password of the user created to be used with GitLab/JIRA */\n    password?: string,\n  /**\n   * The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`\n   * @format int32\n   */\n    jira_issue_transition_id?: number,\n  /** Event will be triggered when a commit is created/updated */\n    commit_events?: string,\n  /** Event will be triggered when a merge request is created/updated/merged */\n    merge_request_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.project_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.username": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.password": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.jira_issue_transition_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.commit_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/kubernetes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Kubernetes namespace to use */\n    namespace: string,\n  /** The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com */\n    api_url: string,\n  /** The service token to authenticate against the Kubernetes cluster with */\n    token: string,\n  /** A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format) */\n    ca_pem?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.namespace": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.api_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.ca_pem": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/mattermost": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Mattermost webhook. e.g. http://mattermost_host/hooks/... */\n    webhook: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n  /** Event will be triggered when an issue is created/updated/closed */\n    issue_events?: string,\n  /** Event will be triggered when a confidential issue is created/updated/closed */\n    confidential_issue_events?: string,\n  /** Event will be triggered when a merge request is created/updated/merged */\n    merge_request_events?: string,\n  /** Event will be triggered when someone adds a comment */\n    note_events?: string,\n  /** Event will be triggered when a new tag is pushed to the repository */\n    tag_push_events?: string,\n  /** Event will be triggered when a build status changes */\n    build_events?: string,\n    pipeline_events?: string,\n  /** Event will be triggered when a wiki page is created/updated */\n    wiki_page_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.webhook": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confidential_issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.pipeline_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_page_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/mattermost-slash-commands": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Mattermost token */\n    token: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/services/mattermost_slash_commands/trigger": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Mattermost token */\n    token: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/pipelines-email": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** Comma-separated list of recipient email addresses */\n    recipients: string,\n  /** Notify only broken builds */\n    notify_only_broken_builds?: boolean,\n    pipeline_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.recipients": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.notify_only_broken_builds": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.pipeline_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/pivotaltracker": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Pivotaltracker token */\n    token: string,\n  /** Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches. */\n    restrict_to_branch?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.restrict_to_branch": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/pushover": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The application key */\n    api_key: string,\n  /** The user key */\n    user_key: string,\n  /** The priority */\n    priority: string,\n  /** Leave blank for all active devices */\n    device: string,\n  /** The sound of the notification */\n    sound: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.api_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.user_key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.priority": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.device": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.sound": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/redmine": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new issue URL */\n    new_issue_url: string,\n  /** The project URL */\n    project_url: string,\n  /** The issues URL */\n    issues_url: string,\n  /** The description of the tracker */\n    description?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.project_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issues_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/slack": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Slack webhook. e.g. https://hooks.slack.com/services/... */\n    webhook: string,\n  /** The user name */\n    new_issue_url?: string,\n  /** The channel name */\n    channel?: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n  /** Event will be triggered when an issue is created/updated/closed */\n    issue_events?: string,\n  /** Event will be triggered when a confidential issue is created/updated/closed */\n    confidential_issue_events?: string,\n  /** Event will be triggered when a merge request is created/updated/merged */\n    merge_request_events?: string,\n  /** Event will be triggered when someone adds a comment */\n    note_events?: string,\n  /** Event will be triggered when a new tag is pushed to the repository */\n    tag_push_events?: string,\n  /** Event will be triggered when a build status changes */\n    build_events?: string,\n    pipeline_events?: string,\n  /** Event will be triggered when a wiki page is created/updated */\n    wiki_page_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.webhook": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.new_issue_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.channel": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confidential_issue_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.merge_request_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.note_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.pipeline_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.wiki_page_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/slack-slash-commands": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Slack token */\n    token: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/services/slack_slash_commands/trigger": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The Slack token */\n    token: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.token": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/services/teamcity": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** TeamCity root URL like https://teamcity.example.com */\n    teamcity_url: string,\n  /** Build configuration ID */\n    build_type: string,\n  /** A user with permissions to trigger a manual build */\n    username: string,\n  /** The password of the user */\n    password: string,\n  /** Event will be triggered by a push to the repository */\n    push_events?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.teamcity_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.build_type": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.username": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.password": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.push_events": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/services/{service_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".serviceSlug": {
        "rendered": "\n/** The name of the service */\n serviceSlug: \"asana\" | \"assembla\" | \"bamboo\" | \"bugzilla\" | \"buildkite\" | \"builds-email\" | \"campfire\" | \"custom-issue-tracker\" | \"drone-ci\" | \"emails-on-push\" | \"external-wiki\" | \"flowdock\" | \"gemnasium\" | \"hipchat\" | \"irker\" | \"jira\" | \"kubernetes\" | \"mattermost-slash-commands\" | \"slack-slash-commands\" | \"pipelines-email\" | \"pivotaltracker\" | \"pushover\" | \"redmine\" | \"slack\" | \"mattermost\" | \"teamcity\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/services/{service_slug}": {
    "query": {},
    "body": {},
    "path": {
      ".serviceSlug": {
        "rendered": "\n/** The name of the service */\n serviceSlug: \"asana\" | \"assembla\" | \"bamboo\" | \"bugzilla\" | \"buildkite\" | \"builds-email\" | \"campfire\" | \"custom-issue-tracker\" | \"drone-ci\" | \"emails-on-push\" | \"external-wiki\" | \"flowdock\" | \"gemnasium\" | \"hipchat\" | \"irker\" | \"jira\" | \"kubernetes\" | \"mattermost-slash-commands\" | \"slack-slash-commands\" | \"pipelines-email\" | \"pivotaltracker\" | \"pushover\" | \"redmine\" | \"slack\" | \"mattermost\" | \"teamcity\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectService",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/share": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /**\n   * The ID of a group\n   * @format int32\n   */\n    group_id: number,\n  /**\n   * The group access level\n   * @format int32\n   */\n    group_access: 10 | 20 | 30 | 40,\n  /**\n   * Share expiration date\n   * @format date\n   */\n    expires_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.group_id": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.group_access": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.expires_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectGroupLink",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/share/{group_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".groupId": {
        "rendered": "\n/** The ID of the group */\n groupId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/snippets": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the snippet */\n    title: string,\n  /** The file name of the snippet */\n    file_name: string,\n  /** The content of the snippet */\n    code: string,\n  /**\n   * The visibility level of the snippet\n   * @format int32\n   */\n    visibility_level: 0 | 10 | 20,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.code": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{noteable_id}/notes": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/snippets/{noteable_id}/notes": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n  /** The creation date of the note */\n    created_at?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.created_at": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/snippets/{noteable_id}/notes/{note_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The content of a note */\n    body: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.body": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteableId": {
        "rendered": "\n/** The ID of the noteable */\n noteableId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": "\n/** The ID of a note */\n noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Note",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/snippets/{snippet_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": "\n/** The ID of a project snippet */\n snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": "\n/** The ID of a project snippet */\n snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/snippets/{snippet_id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of the snippet */\n    title?: string,\n  /** The file name of the snippet */\n    file_name?: string,\n  /** The content of the snippet */\n    code?: string,\n  /**\n   * The visibility level of the snippet\n   * @format int32\n   */\n    visibility_level?: 0 | 10 | 20,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.code": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": "\n/** The ID of a project snippet */\n snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "ProjectSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": "\n/** The ID of an Issue, Merge Request or Snippet */\n snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/snippets/{snippet_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The name of a award_emoji (without colons) */\n    name: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of an award emoji */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}/notes/{note_id}/award_emoji/{award_id}": {
    "query": {},
    "body": {},
    "path": {
      ".awardId": {
        "rendered": "\n/** The ID of the award */\n awardId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".id": {
        "rendered": " id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": " snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".noteId": {
        "rendered": " noteId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "AwardEmoji",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/snippets/{snippet_id}/raw": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".snippetId": {
        "rendered": "\n/** The ID of a project snippet */\n snippetId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/star": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/star": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/statuses/{sha}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The state of the status */\n    state: \"pending\" | \"running\" | \"success\" | \"failed\" | \"canceled\",\n  /** The ref */\n    ref?: string,\n  /** The target URL to associate with this status */\n    target_url?: string,\n  /** A short description of the status */\n    description?: string,\n  /** A string label to differentiate this status from the status of other systems. Default: \"default\" */\n    name?: string,\n  /** A string label to differentiate this status from the status of other systems. Default: \"default\" */\n    context?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.state": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.ref": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.target_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.context": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".sha": {
        "rendered": "\n/** The commit hash */\n sha: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "CommitStatus",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/triggers": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Trigger",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/triggers": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Trigger",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/triggers/{token}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".token": {
        "rendered": "\n/** The unique token of trigger */\n token: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Trigger",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/triggers/{token}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".token": {
        "rendered": "\n/** The unique token of trigger */\n token: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Trigger",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/unarchive": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Project",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/uploads": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The file to be uploaded */\n    file: File,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/users": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Return list of users matching the search criteria */\n search?: string, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.search": {
        "rendered": "\n/** Return list of users matching the search criteria */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "UserBasic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/variables": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Variable",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/projects/{id}/variables": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The key of the variable */\n    key: string,\n  /** The value of the variable */\n    value: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.value": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Variable",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/projects/{id}/variables/{key}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".key": {
        "rendered": "\n/** The key of the variable */\n key: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Variable",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/projects/{id}/variables/{key}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".key": {
        "rendered": "\n/** The key of the variable */\n key: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Variable",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/projects/{id}/variables/{key}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The value of the variable */\n    value?: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.value": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a project */\n id: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".key": {
        "rendered": "\n/** The key of the variable */\n key: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Variable",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/runners": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope": {
        "rendered": "\n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/runners/all": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\", \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.scope": {
        "rendered": "\n/** The scope of specific runners to show */\n scope?: \"active\" | \"paused\" | \"online\" | \"specific\" | \"shared\",",
        "requiresRelaxedTypeAnnotation": true
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/runners/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the runner */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Runner",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/runners/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the runner */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RunnerDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/runners/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The description of the runner */\n    description?: string,\n  /** The state of a runner */\n    active?: boolean,\n  /** The list of tags for a runner */\n    tag_list?: (string)[],\n  /** Flag indicating the runner can execute untagged jobs */\n    run_untagged?: boolean,\n  /** Flag indicating the runner is locked */\n    locked?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.description": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.active": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_list": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.tag_list.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.run_untagged": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.locked": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the runner */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RunnerDetails",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/session": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The username */\n    login?: string,\n  /** The email of the user */\n    email?: string,\n  /** The password of the user */\n    password: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "UserWithPrivateToken",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/sidekiq/compound_metrics": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/sidekiq/job_stats": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/sidekiq/process_metrics": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/sidekiq/queue_metrics": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/snippets": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/snippets": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of a snippet */\n    title: string,\n  /** The name of a snippet file */\n    file_name: string,\n  /** The content of a snippet */\n    content: string,\n  /**\n   * The visibility level of the snippet\n   * @format int32\n   * @default 10\n   */\n    visibility_level?: 0 | 10 | 20,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/snippets/public": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/snippets/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a snippet */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/snippets/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a snippet */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/snippets/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The title of a snippet */\n    title?: string,\n  /** The name of a snippet file */\n    file_name?: string,\n  /** The content of a snippet */\n    content?: string,\n  /**\n   * The visibility level of the snippet\n   * @format int32\n   */\n    visibility_level?: 0 | 10 | 20,\n\n},",
        "requiresRelaxedTypeAnnotation": true
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.file_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.content": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.visibility_level": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a snippet */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "PersonalSnippet",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/snippets/{id}/raw": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of a snippet */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/dockerfiles": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/dockerfiles/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/gitignores": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/gitignores/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/gitlab_ci_ymls": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "TemplatesList",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/gitlab_ci_ymls/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Template",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/licenses": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** If passed, returns only popular licenses */\n popular?: boolean, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.popular": {
        "rendered": "\n/** If passed, returns only popular licenses */\n popular?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "RepoLicense",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/templates/licenses/{name}": {
    "query": {},
    "body": {},
    "path": {
      ".name": {
        "rendered": "\n/** The name of the template */\n name: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "RepoLicense",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/todos": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/todos": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Todo",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/todos/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the todo being marked as done */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Todo",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/user": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "UserPublic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/user/emails": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/user/emails": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new email */\n    email: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/user/emails/{email_id}": {
    "query": {},
    "body": {},
    "path": {
      ".emailId": {
        "rendered": "\n/** The ID of the email */\n emailId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/user/emails/{email_id}": {
    "query": {},
    "body": {},
    "path": {
      ".emailId": {
        "rendered": "\n/** The ID of the email */\n emailId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/user/keys": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/user/keys": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new SSH key */\n    key: string,\n  /** The title of the new SSH key */\n    title: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/user/keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".keyId": {
        "rendered": "\n/** The ID of the SSH key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/user/keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".keyId": {
        "rendered": "\n/** The ID of the SSH key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/users": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Get a single user with a specific username */\n username?: string, \n/** Search for a username */\n search?: string, \n/** Filters only active users */\n active?: boolean, \n/** Filters only external users */\n external?: boolean, \n/** Filters only blocked users */\n blocked?: boolean, \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.username": {
        "rendered": "\n/** Get a single user with a specific username */\n username?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.search": {
        "rendered": "\n/** Search for a username */\n search?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.active": {
        "rendered": "\n/** Filters only active users */\n active?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.external": {
        "rendered": "\n/** Filters only external users */\n external?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.blocked": {
        "rendered": "\n/** Filters only blocked users */\n blocked?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "UserBasic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/users": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The email of the user */\n    email: string,\n  /** The password of the new user */\n    password: string,\n  /** The name of the user */\n    name: string,\n  /** The username of the user */\n    username: string,\n  /** The Skype username */\n    skype?: string,\n  /** The LinkedIn username */\n    linkedin?: string,\n  /** The Twitter username */\n    twitter?: string,\n  /** The website of the user */\n    website_url?: string,\n  /** The organization of the user */\n    organization?: string,\n  /**\n   * The number of projects a user can create\n   * @format int32\n   */\n    projects_limit?: number,\n  /** The external authentication provider UID */\n    extern_uid?: string,\n  /** The external provider */\n    provider?: string,\n  /** The biography of the user */\n    bio?: string,\n  /** The location of the user */\n    location?: string,\n  /** Flag indicating the user is an administrator */\n    admin?: boolean,\n  /** Flag indicating the user can create groups */\n    can_create_group?: boolean,\n  /** Flag indicating the account needs to be confirmed */\n    confirm?: boolean,\n  /** Flag indicating the user is an external user */\n    external?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "UserPublic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/users/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/users/{id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "UserBasic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/users/{id}": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The email of the user */\n    email?: string,\n  /** The password of the new user */\n    password?: string,\n  /** The name of the user */\n    name?: string,\n  /** The username of the user */\n    username?: string,\n  /** The Skype username */\n    skype?: string,\n  /** The LinkedIn username */\n    linkedin?: string,\n  /** The Twitter username */\n    twitter?: string,\n  /** The website of the user */\n    website_url?: string,\n  /** The organization of the user */\n    organization?: string,\n  /**\n   * The number of projects a user can create\n   * @format int32\n   */\n    projects_limit?: number,\n  /** The external authentication provider UID */\n    extern_uid?: string,\n  /** The external provider */\n    provider?: string,\n  /** The biography of the user */\n    bio?: string,\n  /** The location of the user */\n    location?: string,\n  /** Flag indicating the user is an administrator */\n    admin?: boolean,\n  /** Flag indicating the user can create groups */\n    can_create_group?: boolean,\n  /** Flag indicating the account needs to be confirmed */\n    confirm?: boolean,\n  /** Flag indicating the user is an external user */\n    external?: boolean,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.password": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.username": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.skype": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.linkedin": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.twitter": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.website_url": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.organization": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.projects_limit": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.extern_uid": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.provider": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.bio": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.location": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.admin": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.can_create_group": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.confirm": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.external": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "UserPublic",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/users/{id}/block": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/users/{id}/emails": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/users/{id}/emails": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The email of the user */\n    email: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.email": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/users/{id}/emails/{email_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".emailId": {
        "rendered": "\n/** The ID of the email */\n emailId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Email",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/users/{id}/events": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** Current page number */\n page?: number, \n/** Number of items per page */\n per_page?: number, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.page": {
        "rendered": "\n/** Current page number */\n page?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.per_page": {
        "rendered": "\n/** Number of items per page */\n per_page?: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "Event",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/users/{id}/keys": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "post__/v3/users/{id}/keys": {
    "query": {},
    "body": {
      ".data": {
        "rendered": "\n/** Request body */\n data: {\n  /** The new SSH key */\n    key: string,\n  /** The title of the new SSH key */\n    title: string,\n\n},",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.key": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      },
      ".data.__no_name.title": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "delete__/v3/users/{id}/keys/{key_id}": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".keyId": {
        "rendered": "\n/** The ID of the SSH key */\n keyId: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "SSHKey",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "put__/v3/users/{id}/unblock": {
    "query": {},
    "body": {},
    "path": {
      ".id": {
        "rendered": "\n/** The ID of the user */\n id: number,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  },
  "get__/v3/version": {
    "query": {},
    "body": {},
    "path": {},
    "response": {
      ".__no_name": {
        "rendered": "hasuraSdk.JSONValue",
        "requiresRelaxedTypeAnnotation": false
      },
      ".__no_name.__no_name": {
        "rendered": "__undefined",
        "requiresRelaxedTypeAnnotation": false
      }
    }
  }
}
