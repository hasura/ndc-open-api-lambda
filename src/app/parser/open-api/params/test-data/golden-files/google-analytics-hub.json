{
  "delete__/v1/{name}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "get__/v1/{name}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "patch__/v1/{name}": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** Required. Field mask specifies the fields to update in the listing resource. The fields specified in the `updateMask` are relative to the resource and are not a full request. */\n updateMask?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.updateMask": {
        "rendered": "\n/** Required. Field mask specifies the fields to update in the listing resource. The fields specified in the `updateMask` are relative to the resource and are not a full request. */\n updateMask?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{name}:subscribe": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "get__/v1/{organization}/dataExchanges": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number, \n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageSize": {
        "rendered": "\n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageToken": {
        "rendered": "\n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "get__/v1/{parent}/dataExchanges": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number, \n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageSize": {
        "rendered": "\n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageToken": {
        "rendered": "\n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{parent}/dataExchanges": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes. */\n dataExchangeId?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.dataExchangeId": {
        "rendered": "\n/** Required. The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes. */\n dataExchangeId?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "get__/v1/{parent}/listings": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number, \n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageSize": {
        "rendered": "\n/** The maximum number of results to return in a single response page. Leverage the page tokens to iterate through the entire collection. */\n pageSize?: number,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.pageToken": {
        "rendered": "\n/** Page token, returned by a previous call, to request the next page of results. */\n pageToken?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{parent}/listings": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, \n/** Required. The ID of the listing to create. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes. */\n listingId?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.listingId": {
        "rendered": "\n/** Required. The ID of the listing to create. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Max length: 100 bytes. */\n listingId?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{resource}:getIamPolicy": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{resource}:setIamPolicy": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  },
  "post__/v1/{resource}:testIamPermissions": {
    "query": {
      ".query": {
        "rendered": " query: { \n/** V1 error format. */\n xgafv?: \"1\" | \"2\", \n/** OAuth access token. */\n access_token?: string, \n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\", \n/** JSONP */\n callback?: string, \n/** Selector specifying which fields to include in a partial response. */\n fields?: string, \n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string, \n/** OAuth 2.0 token for the current user. */\n oauth_token?: string, \n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean, \n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string, \n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string, \n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string, },",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.xgafv": {
        "rendered": "\n/** V1 error format. */\n xgafv?: \"1\" | \"2\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.access_token": {
        "rendered": "\n/** OAuth access token. */\n access_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.alt": {
        "rendered": "\n/** Data format for response. */\n alt?: \"json\" | \"media\" | \"proto\",",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.callback": {
        "rendered": "\n/** JSONP */\n callback?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.fields": {
        "rendered": "\n/** Selector specifying which fields to include in a partial response. */\n fields?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.key": {
        "rendered": "\n/** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */\n key?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.oauth_token": {
        "rendered": "\n/** OAuth 2.0 token for the current user. */\n oauth_token?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.prettyPrint": {
        "rendered": "\n/** Returns response with indentations and line breaks. */\n prettyPrint?: boolean,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.quotaUser": {
        "rendered": "\n/** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */\n quotaUser?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.upload_protocol": {
        "rendered": "\n/** Upload protocol for media (e.g. \"raw\", \"multipart\"). */\n upload_protocol?: string,",
        "requiresRelaxedTypeAnnotation": false
      },
      ".query.uploadType": {
        "rendered": "\n/** Legacy upload protocol for media (e.g. \"media\", \"multipart\"). */\n uploadType?: string,",
        "requiresRelaxedTypeAnnotation": false
      }
    },
    "body": {},
    "path": {},
    "response": {}
  }
}
