<% const { apiRoutes, importList, baseUrl, headerMap } = it; _%>

import { Api, <%~ it.importList.join(', ') %> } from './api';
import * as hasuraSdk from "@hasura/ndc-lambda-sdk"

const api = new Api({
  baseUrl: `${process.env.NDC_OAS_BASE_URL}`,
});

<% for (let routeFunction of it.routeFunctions) { %>
  <%~ routeFunction.documentation %>

  export async function <%~ routeFunction.name %> (
    <%- for (let param of routeFunction.params) { %>
      <%~ param._$rendered %>
    <%- } %>
    headers?: hasuraSdk.JSONValue
  ): Promise<<%~ routeFunction.returnType._$rendered %>> {
    const result = await api<% if (routeFunction.namespace) { %>.<%~ routeFunction.namespace %><% } %>.<%~ routeFunction.apiTsFunctionName %>({
      <%- for (let param of routeFunction.params) { %>
        <%~ param.name %>: <%~ param.name %>,
      <%- } %>
      params: {
        headers: headers?.value as Record<string, string> ?? undefined,
      }
    });
    if (result.data) {
      return result.data;
    } else {
      throw (result.error)
    }
  }


<%- } %>

